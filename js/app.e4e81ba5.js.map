{"version":3,"file":"js/app.e4e81ba5.js","mappings":"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","sources":["webpack://go-game/./src/App.vue","webpack://go-game/./src/components/BoardSize.vue","webpack://go-game/./src/components/BoardSize.vue?6ac8","webpack://go-game/./src/components/GoBoard.vue","webpack://go-game/./src/components/Timer.vue","webpack://go-game/./src/components/Timer.vue?1296","webpack://go-game/./src/statics/constants.js","webpack://go-game/./src/statics/pieces.js","webpack://go-game/./src/statics/board.js","webpack://go-game/./src/statics/region.js","webpack://go-game/./src/statics/utils.js","webpack://go-game/./src/statics/ladder.js","webpack://go-game/./src/statics/scoring.js","webpack://go-game/./src/components/GoBoard.vue?f00a","webpack://go-game/./src/App.vue?7ccd","webpack://go-game/./src/main.js","webpack://go-game/webpack/bootstrap","webpack://go-game/webpack/runtime/chunk loaded","webpack://go-game/webpack/runtime/define property getters","webpack://go-game/webpack/runtime/global","webpack://go-game/webpack/runtime/hasOwnProperty shorthand","webpack://go-game/webpack/runtime/publicPath","webpack://go-game/webpack/runtime/jsonp chunk loading","webpack://go-game/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <BoardSize v-if=\"notSelected\" @board-selected=\"startGame\" />\n    <GoBoard v-else />\n  </div>\n</template>\n\n<script>\nimport BoardSize from './components/BoardSize.vue';\nimport GoBoard from './components/GoBoard.vue';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      notSelected: true,\n      boardSize: null\n    };\n  },\n  components: {\n    GoBoard,\n    BoardSize\n  },\n  methods: {\n    startGame(config) {\n      this.notSelected = false;\n      window.boardSize = config.size;\n      window.komi = config.komi;\n      window.scoring = config.scoreMethod;\n      window.mainTime = config.mainTime;\n      window.periodTime = config.periodTime;\n      window.periodLength = config.periodLength;\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  background-color: #CCA56D;\n}\n</style>\n","<template>\n  <div id=\"board\" class=\"d-flex justify-content-center align-items-center\" style=\"width: 95vw; height: 95vh;\">\n    <BCard class=\"bg-light\">\n      <h3 class=\"ms-3\">Game configuration</h3>\n      <BCardBody>\n        <BListGroup>\n          <BListGroupItem class=\"d-flex align-items-center\">\n            <label class=\"me-3\" for=\"boardSize\">Select board size: </label>\n            <BFormSelect id=\"boardSize\" v-model=\"selectedSize\" style=\"width: 100px;\">\n              <option v-for=\"size in sizes\" :key=\"size\" :value=\"size\">{{ size }}</option>\n            </BFormSelect>\n          </BListGroupItem>\n          <BListGroupItem>\n            <label class=\"me-3\">Select scoring method:</label>\n            <BFormRadioGroup\n              v-model=\"selectedRule\"\n              :options=\"rules\"\n              button-variant=\"outline-dark\"\n              name=\"radios-btn-outline\"\n              buttons\n            />\n          </BListGroupItem>\n          <BListGroupItem class=\"d-flex align-items-center\">\n            <label class=\"me-3\">Komi: </label>\n            <BFormInput v-model=\"selectedKomi\" max=\"30\" class=\"w-25\" type=\"number\" step=\"0.1\" />\n          </BListGroupItem>\n          <BListGroupItem class=\"d-flex align-items-center\">\n            <label class=\"me-5\">Start time: </label>\n            <BInputGroup class=\"my-2\">\n                <BInput placeholder=\"MM\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedMainMin\" class=\"form-control\"></BInput>\n                <label class=\"mx-2 my-2 fw-bold\">:</label>\n                <BInput placeholder=\"SS\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedMainSec\" class=\"form-control\"></BInput>\n            </BInputGroup>\n          </BListGroupItem>\n          <BListGroupItem class=\"align-items-center\">\n            <label class=\"mb-2 fw-bold\">Byo-yomi</label>\n            <BRow>\n              <BCol>\n                <label :for=\"periodNums\">Number of periods: </label>\n                <BFormInput class=\"my-2\" id=\"periodNums\" v-model=\"selectedPeriodNum\" max=\"50\" type=\"number\" />\n              </BCol>\n              <BCol>\n                <label :for=\"periodLength\">Period length: </label>\n                <BInputGroup class=\"my-2\">\n                  <BInput placeholder=\"MM\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedPeriodMin\" class=\"form-control\"></BInput>\n                  <label class=\"mx-2 my-2 fw-bold\">:</label>\n                  <BInput placeholder=\"SS\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedPeriodSec\" class=\"form-control\"></BInput>\n                </BInputGroup>\n              </BCol>\n            </BRow>\n          </BListGroupItem>\n        </BListGroup>\n      </BCardBody>\n      <div class=\"d-grid gap-2\">\n        <BButton variant=\"dark\" class=\"mx-3 mt-2\" block @click=\"selectBoardSize\">Start Game</BButton>\n      </div>\n    </BCard>\n  </div>\n</template>\n  \n  <script>\n  import { BCard, BCardBody, BButton, BCardFooter, BListGroupItem, BListGroup,\n          BDropdown, BDropdownDivider, BDropdownItem, BInputGroup, BInput, BFormInput,\n          BFormGroup, BFormRadioGroup, BFormSelect, BRow, BCol, BFormCheckbox\n   } from 'bootstrap-vue-next';\n  export default {\n    components: {\n      BCard,\n      BCardBody,\n      BCardFooter,\n      BRow,\n      BCol,\n      BListGroupItem,\n      BListGroup,\n      BDropdown,\n      BDropdownDivider,\n      BDropdownItem,\n      BFormGroup,\n      BInputGroup, BInput,\n      BFormInput,\n      BFormRadioGroup,\n      BButton,\n      BFormSelect,\n      BFormCheckbox\n  },\n    data() {\n      return {\n        sizes: [9, 13, 19],\n        rules: [\n          { text: 'Area (Chinese rules)', value: 'Area' },\n          { text: 'Territory (Japanese rules)', value: 'Territory' }\n        ],\n        selectedSize: 9,\n        selectedRule: \"Area\",\n        selected: false,\n        selectedKomi: 7.5,\n        selectedMainMin: \"15\",\n        selectedMainSec: \"00\",\n        selectedPeriodMin: \"01\",\n        selectedPeriodSec: \"00\",\n        selectedPeriodNum: 5,\n        showAlert: false,\n\n        config: {\n          size: this.selectedSize, scoreMethod: this.selectedRule, komi: this.selectedKomi,\n          mainTime: new Date(), periodTime: new Date(), periodLength: this.selectedPeriodNum\n        }\n      };\n    },\n    methods: {\n      selectBoardSize() {\n        if(isNaN(this.selectedKomi) || this.selectedKomi === '' || this.selectedKomi < 0){\n          alert(\"Please enter valid komi\");\n          return;\n        }\n\n        if(isNaN(this.selectedPeriodNum) || this.selectedPeriodNum === '' || this.selectedPeriodNum < 0){\n          alert(\"Please enter valid number of periods\");\n          return;\n        }\n\n        const mainMin = parseInt(this.selectedMainMin);\n        const mainSec = parseInt(this.selectedMainSec);\n        if(isNaN(mainMin) || (mainMin < 0 || mainMin > 59) || isNaN(mainSec) || (mainSec < 0 || mainSec > 59)){\n          alert(\"Please enter valid start time\");\n          return;\n        }\n        const mainTime = new Date();\n        mainTime.setMinutes(mainMin);\n        mainTime.setSeconds(mainSec);\n\n        const periodMin = parseInt(this.selectedPeriodMin);\n        const periodSec = parseInt(this.selectedPeriodSec);\n        if(isNaN(periodMin) || (periodMin < 0 || periodMin > 59) || isNaN(periodSec) || (periodSec < 0 || periodSec > 59)){\n          alert(\"Please enter valid period time\");\n          return;\n        }\n        const periodTime = new Date();\n        periodTime.setMinutes(periodMin);\n        periodTime.setSeconds(periodSec);\n\n        this.selected = true;\n        this.config.size = this.selectedSize;\n        this.config.scoreMethod = this.selectedRule;\n        this.config.komi = this.selectedKomi;\n        this.config.mainTime = mainTime;\n        this.config.periodTime = periodTime;\n        this.config.periodLength = this.selectedPeriodNum;\n        this.$emit('board-selected', this.config);\n      }\n    }\n  };\n</script>\n\n<style>\n#board {\n  background-color: #CCA56D;\n}\n</style>","import { render } from \"./BoardSize.vue?vue&type=template&id=661713ac\"\nimport script from \"./BoardSize.vue?vue&type=script&lang=js\"\nexport * from \"./BoardSize.vue?vue&type=script&lang=js\"\n\nimport \"./BoardSize.vue?vue&type=style&index=0&id=661713ac&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container-fluid d-flex justify-content-center align-items-center\" style=\"width: 93vw; height: 95vh; margin: 0; padding: 0%;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\" id=\"black_section\">\n            <div class=\"row timer_box my-3\" >\n                <Timer :stop=\"bStop\" :isBlack=\"true\" @timerRanOut=\"timerFinish\"/>\n                <div class=\"list-group-item d-flex justify-content-between align-items-center border border-black text-light fw-semibold mt-3 px-2 p-2 rounded\" style=\"background-color: #2d2c2c\">\n                    Prisoners\n                    <BBadge variant=\"light\" class=\"fs-6\" pill style=\"min-width: 40px; text-align: center;\">{{ prisonersCounterB }}</BBadge>\n                </div>\n                <BButtonGroup class=\"my-3 w-100 p-0\" vertical>\n                    <BButton variant=\"primary\" @click=\"toggleNumbered\" class=\"border-bottom-0 border-black fw-semibold\">Toggle numbers</BButton>\n                    <BButton variant=\"primary\" @click=\"undoMove\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'black'\">Undo</BButton>\n                    <BButton variant=\"primary\" @click=\"estimateScore\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'white'\">Estimate score</BButton>\n                    <BButton variant=\"primary\" @click=\"ladderEval\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'white'\">Evaluate ladder</BButton>\n                    <BButton variant=\"danger\" class=\"border-black fw-semibold\" @click=\"passMove('black')\" :disabled=\"lastColour !== 'white'\">Pass</BButton>\n                </BButtonGroup>\n            </div>\n        </div>\n        <div class=\"col-sm-8 board\">  \n            <canvas ref=\"goBoard\"></canvas>   \n        </div>\n        <div class=\"col-sm-2\" id=\"white_section\">\n            <div class=\"row timer_box\">\n                <Timer :stop=\"wStop\" :isBlack=\"false\" @timerRanOut=\"timerFinish\"/>\n                <div class=\"list-group-item d-flex justify-content-between align-items-center fw-semibold bg-light text-dark mt-3 px-2 p-2 rounded\">\n                    Prisoners\n                    <BBadge class=\"fs-6\" pill style=\"min-width: 40px; text-align: center; background-color: #2d2c2c !important\">{{ prisonersCounterW }}</BBadge>\n                </div>\n                <BButtonGroup class=\"my-3 w-100 p-0\" vertical>\n                    <BButton variant=\"primary\" @click=\"toggleNumbered\" class=\"border-bottom-0 border-black fw-semibold\">Toggle numbers</BButton>\n                    <BButton variant=\"primary\" @click=\"undoMove\" class=\"border-bottom-0 border-black fw-semibold\" :v-show=\"undoAllowed\" :disabled=\"lastColour !== 'white'\">Undo</BButton>\n                    <BButton variant=\"primary\" @click=\"estimateScore\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'black'\">Estimate score</BButton>\n                    <BButton variant=\"primary\" @click=\"ladderEval\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'black'\">Evaluate ladder</BButton>\n                    <BButton variant=\"danger\" class=\"border-black fw-semibold\" @click=\"passMove('white')\" :disabled=\"lastColour !== 'black'\">Pass</BButton>\n                </BButtonGroup>\n            </div>\n        </div>\n\n        <!-- Ladder Modal -->\n        <BModal\n            ok-only \n            centered\n            v-model=\"ladderCheck\" \n            hide-header-close\n            @ok=\"ladderCheck = false\"\n            class=\"text-center\" style=\"left: 35% !important\"\n            :title=\"ladderModalTitle\"\n        >\n            <div ref=\"ladderModalBody\" class=\"ladder_board\" style=\"background-color: #CCA56D;\">\n            </div>\n        </BModal>\n\n        <!-- Score estimate Modal -->\n        <BModal\n            ok-only \n            centered\n            hide-header-close\n            v-model=\"estimateModal\" \n            class=\"text-center\" style=\"left: 35% !important\"\n            title =\"Score estimate\"\n        >\n            <p ref=\"estimateModalMessage\" class=\"my-4\"></p>\n        </BModal>\n\n        <!-- Gameover Modal -->\n        <BModal\n            ok-only \n            centered\n            hide-header-close\n            v-model=\"gameover\" \n            @ok=\"reloadPage\"\n            class=\"text-center\" style=\"left: 35% !important\"\n            title =\"Game over!\"\n        >\n            <p ref=\"modalMessage\" class=\"my-4\"></p>\n        </BModal>\n    </div>\n</div> \n</template>\n\n<script>\nimport Timer from './Timer.vue';\n\nimport {init2DBoard, drawBoard, redrawBoard, drawHoshi, \n    update2DBoard, cloneBoard, print2DBoard} from \"../statics/board.js\";\nimport {simulateLadder} from \"../statics/ladder.js\";\nimport {calculateTerritory, territoryScoring, countStones} from \"../statics/scoring.js\";\nimport {numberedPieces, resetCheckBoard, getLiberties, \n    getLibertiesAt, placePiece} from \"../statics/pieces.js\";\nimport {toggleTimers} from \"../statics/utils.js\";\n    \nimport { BButtonGroup, BButton, BModal, BContainer, BBadge } from 'bootstrap-vue-next';\nimport black from '../../public/b.png';\nimport white from '../../public/w.png';\n\nexport default {\n    components: {\n        BButtonGroup, BButton, Timer, BModal, BContainer, BBadge\n    },\n    data() {\n        return {\n            lastColour: \"white\",\n            boardSize:  9,\n            board: [],\n            boardStack: [],\n            pieceNumbersStack: [],\n            checkBoard: [],\n            bStop: true,\n            wStop: true,\n            prisonersCounterB: 0,\n            prisonersCounterW: 0,\n            prisonersStack: [],\n            checklib: [[0, 1], [0, -1], [1, 0], [-1, 0]],\n            deadCells: [],\n            pieceNumbers: [],\n            isNumbered: false,\n            lastMoveWasPassed: false,\n            ladderCheck: false,\n            ladderModalTitle: '',\n            estimateModal: false,\n            gameover: false,\n        };\n    },\n    mounted() {\n        const canvas = this.$refs.goBoard;\n        const ctx = canvas.getContext('2d');\n        var scale = window.devicePixelRatio;\n        this.drawBoard(canvas, ctx, scale);\n\n        this.$refs.goBoard.addEventListener('mousedown', this.getMousePosition);\n        this.init2DBoard(this.board, this.checkBoard);\n        this.boardSize = window.boardSize;\n        this.undoAllowed = window.undo;\n    },\n    methods: {\n        init2DBoard,\n        drawBoard,\n        redrawBoard,\n        drawHoshi,\n        placePiece,\n        numberedPieces,\n        update2DBoard,\n        print2DBoard,\n        getLiberties,\n        resetCheckBoard,\n        cloneBoard,\n        toggleTimers,\n        calculateTerritory, simulateLadder, territoryScoring,\n        countStones,\n        getLibertiesAt,\n\n        async getMousePosition(event) {\n            const canvas = this.$refs.goBoard;\n            const rect = canvas.getBoundingClientRect();\n            const colour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n            let x = event.clientX - rect.left;\n            let y = event.clientY - rect.top;\n            const cell = 800/(this.boardSize + 1);\n            if ((x % cell) > (cell/2)) {\n                x = x + (cell - (x % cell));\n            }\n            else {\n                x = x - (x % cell);\n            }\n            if ((y % cell) > (cell/2)) {\n                y = y + (cell - (y % cell));\n            }\n            else {\n                y = y - (y % cell);\n            }\n            \n            // out of bounds checks\n            if(x == 0 || y == 0)\n                return;\n            else if(x >= cell * (this.boardSize + 1) || y >= cell * (this.boardSize + 1))\n                return;\n            \n            const r = Math.round((x == (cell/2)) ? x - (cell/2) : (x - cell) / cell);\n            const c = Math.round((y == (cell/2)) ? y - (cell/2) : (y - cell) / cell);\n            let newBoard = this.cloneBoard(this.board); \n            newBoard[c][r] = (colour == \"white\") ? '1' : '0';\n            let lib = this.getLibertiesAt(c, r, newBoard);\n            if (lib === 0){\n                let lib2 = -1;\n\n                for (const [dx, dy] of this.checklib) {\n                    const pX = Number(r) + dx;\n                    const pY = Number(c) + dy;\n\n                    if (pX >= 0 && pY >= 0 && pX < newBoard[0].length && pY < newBoard.length) {\n                        const currentPiece = newBoard[c][r];\n                        const neighborPiece = newBoard[pY][pX];\n\n                        if (neighborPiece !== \"*\" && neighborPiece !== currentPiece) {\n                            lib2 = this.getLibertiesAt(pY, pX, newBoard);\n                            if (lib2 === 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                if(lib2 > 0){\n                    alert(\"Suicide move not allowed.\");\n                    return;\n                }\n            }\n            \n            this.boardStack.unshift(this.cloneBoard(this.board)); // clone current board state into 2d stack\n            this.pieceNumbersStack.unshift(this.pieceNumbers.map((el) => [el[0], el[1], el[2]]));\n\n            this.prisonersStack.unshift([this.prisonersCounterB, this.prisonersCounterW]); // update prisioners counter for current board\n            this.checkBoard = this.cloneBoard(this.board);\n            var res = this.update2DBoard(r, c, colour, this.boardStack, this.board); // return true if successfully placed\n            if (res) {\n                try {\n                    await this.placePiece(this.isNumbered, x - (cell/2), y - (cell/2), colour, this.boardStack.length, canvas, canvas.getContext('2d'), window.devicePixelRatio);\n                    this.pieceNumbers.unshift([x - (cell/2), y - (cell/2), false]);\n                    [this.wStop, this.bStop] =  this.toggleTimers(this.lastColour);\n                }\n                catch (error) {\n                    console.error('Error:', error);\n                }\n                this.lastColour = colour;\n                this.lastMoveWasPassed = false;\n                this.checkBoard = this.cloneBoard(this.board);\n\n                for (const [dx, dy] of this.checklib) {\n                    const pX = Number(r) + dx;\n                    const pY = Number(c) + dy;\n\n                    if (pX >= 0 && pY >= 0 && pX < this.board[0].length && pY < this.board.length) {\n                        const currentPiece = this.board[c][r];\n                        const neighborPiece = this.board[pY][pX];\n\n                        if (neighborPiece !== \"*\" && neighborPiece !== currentPiece) {\n                            if (this.getLiberties(pX, pY, this.board, this.checkBoard, this.deadCells) === 0) {\n                                var prisonerCount = this.resetCheckBoard(true, this.checkBoard, this.board);\n\n                                // update prisoner counter\n                                if(colour == \"black\")\n                                    this.prisonersCounterB += prisonerCount;\n                                else\n                                    this.prisonersCounterW += prisonerCount;\n                                \n                                this.pieceNumbers.forEach(el => {\n                                    const elX = Math.round((el[0] == (cell/2)) ? el[0] - (cell/2) : (el[0] - cell) / cell);\n                                    const elY = Math.round((el[1] == (cell/2)) ? el[1] - (cell/2) : (el[1] - cell) / cell);\n                                    if(!(el[2]) && this.board[elY][elX] == '*')\n                                        el[2] = true;\n                                });\n                                // redraw board    \n                                this.redrawBoard(this.isNumbered, canvas, canvas.getContext('2d'), \n                                                 window.devicePixelRatio, this.board, this.pieceNumbers);\n                            } else { \n                                this.resetCheckBoard(false, this.checkBoard, this.board);\n                            }\n                        }\n                    }\n                }\n\n                let end = true;\n                for (let row of this.board) {\n                    for (let cell of row) {\n                        if(cell === '*') {\n                            end = false;\n                            break;\n                        }\n                    }\n                    if(!end)\n                        break;\n                }\n\n                if (end) {\n                    this.endGame(false, false);\n                }\n            }\n        },\n        undoMove() {\n            if (this.boardStack.length > 0) {\n                this.board = this.boardStack[0];\n                this.pieceNumbers = this.pieceNumbersStack[0];\n\n                this.prisonersCounterB = this.prisonersStack[0][0];\n                this.prisonersCounterW = this.prisonersStack[0][1];\n                this.boardStack.shift();\n                this.pieceNumbersStack.shift();\n                this.prisonersStack.shift();\n                // this.pieceNumbers.shift();\n                this.lastColour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n\n                const canvas = this.$refs.goBoard;\n                this.redrawBoard(this.isNumbered, canvas, canvas.getContext('2d'), \n                                 window.devicePixelRatio, this.board, this.pieceNumbers);\n\n                const colour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n                [this.wStop, this.bStop] = this.toggleTimers(colour);\n            } else {\n                console.log(\"stack empty\")\n            }\n        },\n        passMove(color){\n            if(this.lastMoveWasPassed == true){\n                this.endGame(false, false);\n            }\n            else if(color != this.lastColour){\n                this.lastColour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n                const colour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n                [this.wStop, this.bStop] = this.toggleTimers(colour);\n                \n                this.lastMoveWasPassed= true;\n            }\n        },\n        toggleNumbered(){\n            const canvas = this.$refs.goBoard;\n            this.isNumbered = this.isNumbered ? false : true;\n            this.redrawBoard(this.isNumbered, canvas, canvas.getContext('2d'), \n                             window.devicePixelRatio, this.board, this.pieceNumbers);\n        },\n        estimateScore() {\n            let gameDetails = {\n                bg: {\n                    black: '',\n                    white: ''\n                },\n                scores: {\n                    black: 0,\n                    white: 0\n                },\n                territory: {\n                    black: 0,\n                    white: 0\n                }\n            };\n            let tableBlack = '';\n            let tableWhite = '';\n\n            let stones = this.countStones(this.board);\n            if(window.scoring == \"Area\"){\n                gameDetails.territory = calculateTerritory(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + stones.black;\n                gameDetails.scores.white = gameDetails.territory.white + stones.white + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${stones.black}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${stones.white}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            else if(window.scoring == \"Territory\"){\n                gameDetails.territory = territoryScoring(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + this.prisonersCounterB;\n                gameDetails.scores.white = gameDetails.territory.white + this.prisonersCounterW + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${this.prisonersCounterB}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${this.prisonersCounterW}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            \n            this.estimateModal = true;\n            let blackScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center\">\n                            <img src=\"${black}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableBlack}\n                            </div>\n                        </div>\n                    </div>\n                </div>`\n\n            let whiteScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center\">\n                            <img src=\"${white}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableWhite}\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n\n            let html = `\n                <div class=\"vstack gap-2 mt-3\">\n                    <div class=\"p-2\">${blackScoreHTML}</div>\n                    <div class=\"p-2\">${whiteScoreHTML}</div>\n                </div>`;\n            this.$refs.estimateModalMessage.innerHTML = html;\n        },\n        ladderEval(){\n            const ladderResult = this.simulateLadder(this.board);\n            if(ladderResult.successful >= 0){\n                this.ladderModalTitle = ladderResult.successful ? \"Ladder successful for Hunter\" : \"Ladder unsuccessful for Hunter\";\n                this.ladderCheck = true;\n\n                const ladderBoardWidth = (window.boardSize < 10) ? 25 : 50;\n                const boardText = ladderResult.board.map(row => {\n                    row = row.join(' ')\n                    return `<div class=\"w-${ladderBoardWidth} mx-auto border border-dark\" style=\"background-color: #CCA56D;\">${row}</div>`}).join(' ');\n                this.$refs.ladderModalBody.innerHTML = boardText;\n            }\n            else if(ladderResult.successful === -1){\n                alert(\"Ladder sequence not found.\");\n            }\n            else {\n                alert(\"An error occurred during ladder evaluation\");\n                return;\n            }\n        },\n        endGame(timerExhausted, isBlack){\n            if(timerExhausted){\n                const color = isBlack ? \"Black\" : \"White\";\n                const winner = isBlack ? \"White\" : \"Black\";\n                let html = `\n                    '<h3>${color}'s timer exhausted<br>${winner} won the game</h3>'`;\n\n                this.gameover = true;\n                this.$refs.modalMessage.innerHTML = html;\n                return;\n            }\n\n            let gameDetails = {\n                winner: \"<h3>The game ended in a Draw</h3>\",\n                bg: {\n                    black: '',\n                    white: ''\n                },\n                scores: {\n                    black: 0,\n                    white: 0\n                },\n                territory: {\n                    black: 0,\n                    white: 0\n                }\n            };\n            let tableBlack = '';\n            let tableWhite = '';\n\n            let stones = this.countStones(this.board);\n            if(window.scoring == \"Area\"){\n                gameDetails.territory = calculateTerritory(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + stones.black;\n                gameDetails.scores.white = gameDetails.territory.white + stones.white + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${stones.black}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${stones.white}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            else if(window.scoring == \"Territory\"){\n                gameDetails.territory = territoryScoring(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + this.prisonersCounterB;\n                gameDetails.scores.white = gameDetails.territory.white + this.prisonersCounterW + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${this.prisonersCounterB}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${this.prisonersCounterW}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            \n            [this.wStop, this.bStop] = [true, true];\n            this.gameover = true;\n            if(gameDetails.scores.white < gameDetails.scores.black){\n                gameDetails.winner = '<h3>Black won the game</h3>';\n                gameDetails.bg.white = 'bg-danger';\n                gameDetails.bg.black = 'bg-success';\n            } else if(gameDetails.scores.white > gameDetails.scores.black){\n                gameDetails.winner = \"<h3>White won the game</h3>\";\n                gameDetails.bg.black = 'bg-danger';\n                gameDetails.bg.white = 'bg-success';\n            }\n            let blackScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center + ${gameDetails.bg.black}\">\n                            <img src=\"${black}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableBlack}\n                            </div>\n                        </div>\n                    </div>\n                </div>`\n\n            let whiteScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center + ${gameDetails.bg.white}\">\n                            <img src=\"${white}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableWhite}\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n\n            let html = `\n                ${gameDetails.winner} \n                <div class=\"vstack gap-2 mt-3\">\n                    <div class=\"p-2\">${blackScoreHTML}</div>\n                    <div class=\"p-2\">${whiteScoreHTML}</div>\n                </div>`;\n            this.$refs.modalMessage.innerHTML = html;\n        },\n        reloadPage() {\n            window.location.reload();\n        },\n        timerFinish(isBlack){\n            this.endGame(true, isBlack);\n        }\n    }\n};\n</script>\n\n<style scoped>\ncanvas {\n  border: 0px solid black;\n  background-color: #CCA56D;\n}\n\n.board {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #CCA56D;\n    border: 1px solid black;\n}\n\n#black_section, #white_section {\n    background-color: #CCA56D;\n    border: 1px solid black;\n}\n\n.timer_box {\n    height: 50%;\n    padding-top: 20px;\n}\n\n.ladder_board {\n    display: flex;\n    flex-direction: column;\n}\n\n.board-container {\n  width: 100%;\n  max-width: 800px;\n  aspect-ratio: 1;\n  margin: auto;\n}\n\n@media (max-width: 768px) {\n  .board-container {\n    max-width: 95vw;\n  }\n}\n</style>","<template>\n  <div :class=\"[isBlack ? 'blackStyling' : 'whiteStyling', 'timer']\">\n    <div class=\"player_tile\">\n      <div class=\"player_digits d-flex justify-content-center align-items-center\">\n        <span class=\"fw-medium\" ref=\"min1\" style=\"min-width: 150px; text-align: center;\">{{ formattedTime }}</span>\n      </div>\n    </div>\n    <div class=\"timer_trackMode\">\n      <span ref=\"timeLabel\" class=\"timer_period\">MAIN TIME</span>\n      <div class=\"circle-container mt-3\">\n        <span class=\"fw-semibold fs-5\">Periods: </span><span class=\"fw-semibold fs-5\" ref=\"periodTxt\">{{ currentPeriod }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      minutes: 1,\n      seconds: 0,\n      playing: false,\n      mainTime: true,\n      periods: [],\n      numPeriods: 0,\n      byo_yomi_periods: 8,\n      periodsSizes: [1, 0],\n    };\n  },\n  mounted() {\n    this.startTimer();\n    this.periods = Array(this.byo_yomi_periods).fill(false);\n    this.minutes = window.mainTime.getMinutes();\n    this.seconds = window.mainTime.getSeconds();\n    this.byo_yomi_periods = window.periodLength;\n    this.periodsSizes = [window.periodTime.getMinutes(), window.periodTime.getSeconds()]\n  },\n  computed: {\n    formattedTime() {\n      const paddedMinutes = this.minutes < 10 ? `0${this.minutes}` : this.minutes;\n      const paddedSeconds = this.seconds < 10 ? `0${this.seconds}` : this.seconds;\n      return `${paddedMinutes}:${paddedSeconds}`;\n    },\n    currentPeriod() {\n      return this.byo_yomi_periods - this.numPeriods;\n    },\n  },\n  props: {\n    stop: Boolean,\n    isBlack: Boolean,\n  },\n  methods: {\n    stopTimer() {\n      this.stop = true;\n    },\n    start() {\n      this.stop = false;\n    },\n    startTimer() {\n      this.playing = true; // game starts\n\n      let timerId = setInterval(\n        function () {\n          //begin time loop\n          if (this.playing && !this.stop) {\n            const min = this.minutes;\n            const sec = this.seconds;\n\n            if (this.mainTime) {\n              if (sec == 0) {\n                if (min == 0) {\n                  this.mainTime = false;\n                  this.minutes = this.periodsSizes[0];\n                  this.seconds = this.periodsSizes[1];\n                  if(this.$refs.timeLabel)\n                    this.$refs.timeLabel.textContent = \"Period Time\";\n                } else {\n                  this.minutes -= 1;\n                  this.seconds = 59;\n                }\n              } else {\n                this.seconds -= 1;\n              }\n            } else {\n              if (sec == 0) {\n                if (min == 0) {\n                  this.periods[this.numPeriods] = true;\n                  this.numPeriods += 1;\n                  this.minutes = this.periodsSizes[0];\n                  this.seconds = this.periodsSizes[1];\n                } else {\n                  this.minutes -= 1;\n                  this.seconds = 59;\n                }\n              } else {\n                this.seconds -= 1;\n              }\n\n              if (this.numPeriods >= this.byo_yomi_periods) {\n                this.playing = false;\n                this.minutes = 0;\n                this.seconds = 0;\n                if(this.$refs.periodTxt)\n                    this.$refs.periodTxt.style.color = \"red\";\n                clearInterval(timerId);\n                this.$emit('timerRanOut', this.isBlack);\n              }\n            }\n          } else {\n            //timer stopped, waiting for turn\n          }\n        }.bind(this),\n        1000\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.timer {\n  width: 100%;\n  height: 80%;\n  padding-top: 20px;\n  border-radius: 5px;\n  background-color: red;\n}\n\n.player_tile {\n  position: relative;\n  height: 150px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: black;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  box-shadow: inset 3px 3px 0 #000, inset -3px 3px 0 black,\n    inset -3px -3px 0 black, inset 3px -3px 0 black;\n  color: #ffffff;\n  margin-top: 5px;\n}\n\n.player_digits {\n  width: 100%;\n}\n\n.timer_trackMode {\n  margin-bottom: 1em;\n  height: 100%;\n}\n\n.timer_period {\n  width: 100%;\n  display: block;\n  color: #020202;\n  min-height: 50px;\n  max-width: 400px;\n  font-size: 1.5rem;\n  font-weight: bold;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  letter-spacing: 2px;\n  border-bottom: 3px solid #000000;\n  border-left: 3px solid #000000;\n  border-right: 3px solid #000000;\n  color: #ffffff;\n  background-color: #0071d5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.circle-container {\n  display: flex;\n  padding-top: 5px;\n  justify-content: space-between;\n}\n\n.blackStyling {\n  border-color: white;\n  background-color: #2d2c2c;\n  border: 2px solid black;\n  color: white;\n}\n\n.blackStyling .player_digits {\n  font-size: 3.5rem;\n  color: white;\n}\n\n.whiteStyling {\n  background-color: #f3f3f3;\n  border: 2px solid black;\n  color: #000;\n}\n\n.whiteStyling .player_digits {\n  font-size: 3.5rem;\n  color: black;\n}\n</style>\n","import { render } from \"./Timer.vue?vue&type=template&id=2a744b04&scoped=true\"\nimport script from \"./Timer.vue?vue&type=script&lang=js\"\nexport * from \"./Timer.vue?vue&type=script&lang=js\"\n\nimport \"./Timer.vue?vue&type=style&index=0&id=2a744b04&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2a744b04\"]])\n\nexport default __exports__","export const EMPTY = '*';\nexport const BLACK = '0';\nexport const WHITE = '1'; ","import white from '../assets/w.png';\nimport black from '../assets/b.png';\n\nexport async function placePiece(numbered, row, col, colour, num, canvas, ctx, scale) {\n    return new Promise((resolve, reject) => {\n        const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n        const pieceImage = new Image();\n        const pieceColour = colour;\n        pieceImage.src = (pieceColour == \"white\") ? white : black;\n        pieceImage.onload = () => {\n            ctx.drawImage(pieceImage, row, col, cellSize, cellSize);\n            if(numbered)\n              numberedPieces(ctx, row, col, num)\n            resolve();\n        };\n        pieceImage.onerror = (error) => {\n            reject(error);\n        };\n    });\n}\n\nexport function numberedPieces(ctx, row, col, num) {\n    const fontSize = window.boardSize < 19 ? '1.5rem' : '1rem';\n    const cell = Math.round((800/(window.boardSize + 1))/2);\n    ctx.font = `${fontSize} Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#E9190F';\n    ctx.fillText(num, row + cell, col + cell);\n}\n\nexport function getLiberties(x, y, board, checkBoard, deadCells) {\n    if(board[y][x] === '*'){ \n        return -1;\n    }\n    if(checkBoard[y][x] === \"@\" || checkBoard[y][x] === \"£\" ){ \n        return 0;\n    }\n    checkBoard[y][x] = \"@\";\n\n    var checklib = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n    var count = 0;\n\n    for(var i = 0; i < 4; i++) {\n        var pX = Number(x) + checklib[i][0];\n        var pY = Number(y) + checklib[i][1];\n\n        if((pX > -1 && pY > -1) && (pX < window.boardSize && pY < window.boardSize)) {\n            if(board[pY][pX] === '*') {\n                count++;\n            } else if(board[pY][pX] === board[y][x]) {\n                var friendCount = getLiberties(pX, pY, board, checkBoard, deadCells);\n                checkBoard[pY][pX] = \"@\";\n                count += friendCount;\n            }\n        }\n    }\n    if(count === 0){\n        checkBoard[y][x] = '£';\n        deadCells.push([x, y, \"%\"]);\n    }\n    return count;\n}\n\nexport function getLibertiesAt(x, y, board) {\n    let checkBoard = board.map(row => row.slice());\n    return getLiberties2(x, y, board, checkBoard);\n}\n\nfunction getLiberties2(x, y, board, checkBoard) {\n    if(board[x][y] === '*'){ \n        return -1;\n    }\n    if(checkBoard[x][y] === \"@\" || checkBoard[x][y] === \"£\" ){ \n        return 0;\n    }\n    checkBoard[x][y] = \"@\";\n\n    var checklib = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n    var count = 0;\n\n    for(var i = 0; i < 4; i++) {\n        var pX = Number(x) + checklib[i][0];\n        var pY = Number(y) + checklib[i][1];\n\n        if((pX > -1 && pY > -1) && (pX < window.boardSize && pY < window.boardSize)) {\n            if(board[pX][pY] === '*' && checkBoard[pX][pY] == '*') {\n                count++;\n                checkBoard[pX][pY] = '£';\n            } else if(board[pX][pY] === board[x][y]) {\n                var friendCount = getLiberties2(pX, pY, board, checkBoard);\n                checkBoard[pX][pY] = \"@\";\n                count += friendCount;\n            }\n        }\n    }\n    return count;\n}\n\nexport function resetCheckBoard(redraw, checkBoard, board) {\n    var count = 0;\n    for(var i = 0; i < window.boardSize; i++) {\n        for(var j = 0; j < window.boardSize; j++) {\n            if(redraw && (checkBoard[j][i] === \"@\" || checkBoard[j][i] === \"£\")){\n                board[j][i] = '*';\n                redraw = true;\n                count++;\n            }\n            checkBoard[j][i] = '*';\n        }\n    }\n    return count;\n} ","import { EMPTY, BLACK, WHITE } from './constants';\nimport {numberedPieces} from './pieces';\nimport {placePiece} from './pieces';\n\nexport function init2DBoard(board, checkBoard) {\n    for (let i = 0; i < window.boardSize; i++) {\n        const row = [];\n        for (let j = 0; j < window.boardSize; j++) {\n            row.push('*');\n        }\n        board.push(row);\n        checkBoard.push(row);\n    }\n}\n\nexport function drawBoard(canvas, ctx, scale) {\n    const size = 800;\n    canvas.style.width = size + \"px\";\n    canvas.style.height = size + \"px\";\n    canvas.width = size * scale;\n    canvas.height = size * scale;\n    const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n    ctx.scale(scale, scale);\n\n    const cell = 800/(window.boardSize + 1);\n    ctx.beginPath();\n    for (let i = 2; i <= (window.boardSize - 1); i++) {\n        // horizontal lines\n        ctx.moveTo((cell), (i * cellSize));\n        ctx.lineTo((canvas.width / scale) - cell, (i * cellSize));\n        ctx.strokeStyle = '#000000';    \n        ctx.lineWidth = \"1\";\n        // vertical lines\n        ctx.moveTo(i * cellSize, (1 * cell));\n        ctx.lineTo(i * cellSize, (canvas.height / scale) - cell);\n    }\n    ctx.stroke();\n\n    //draw four edge sides to make them darker\n    ctx.beginPath();\n    ctx.lineWidth = \"2\";\n    ctx.strokeStyle = '#000000';\n    \n    ctx.moveTo((cell), (1 * cellSize)); // horizontal\n    ctx.lineTo((canvas.width / scale) - cell, (1 * cellSize));\n    ctx.moveTo(1 * cellSize, (1 * cell)); // vertical\n    ctx.lineTo(1 * cellSize, (canvas.height / scale) - cell);\n\n    ctx.moveTo((cell), (window.boardSize * cellSize)); // horizontal\n    ctx.lineTo((canvas.width / scale) - cell, (window.boardSize * cellSize));\n    ctx.moveTo(window.boardSize * cellSize, (1 * cell)); // vertical\n    ctx.lineTo(window.boardSize * cellSize, (canvas.height / scale) - cell);\n    \n    ctx.stroke();\n    \n    ctx.beginPath();\n    ctx.strokeStyle = \"#CCA56D\";\n    ctx.rect(0, 0, (canvas.width / scale), (canvas.height / scale));\n    ctx.stroke();\n    drawHoshi(ctx, canvas, scale);\n}\n\nexport async function redrawBoard(numbered, canvas, ctx, scale, board, pieceNumbers) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const size = 800;\n    canvas.style.width = size + \"px\";\n    canvas.style.height = size + \"px\";\n    canvas.width = size * scale;\n    canvas.height = size * scale;\n    const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n    ctx.scale(scale, scale);\n    const cell = 800/(window.boardSize + 1);\n\n    for (let i = 1; i <= window.boardSize; i++) {\n        // horizontal lines\n        ctx.beginPath();\n        ctx.moveTo((cell), (i * cellSize));\n        ctx.lineTo((canvas.width / scale) - cell, (i * cellSize)); \n        ctx.strokeStyle = '#000000';\n        if (i == 1 || i == window.boardSize)\n            ctx.lineWidth = \"2\";\n        else\n            ctx.lineWidth = \"1\";\n        ctx.stroke();\n        // vertical lines\n        ctx.beginPath();\n        ctx.moveTo(i * cellSize, (1 * cell));\n        ctx.lineTo(i * cellSize, (canvas.height / scale) - cell);\n        ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.lineWidth = \"80\";\n    ctx.strokeStyle = \"#CCA56D\";\n    ctx.rect(0, 0, (canvas.width / scale), (canvas.height / scale));\n    ctx.stroke();\n    drawHoshi(ctx, canvas, scale);\n    \n    for (let i = 0; i < window.boardSize; i++) {\n        for (let j = 0; j < window.boardSize; j++) {\n            if (board[j][i] != EMPTY) {\n                const pColour = (board[j][i] == \"1\") ? \"white\" : \"black\";\n                try {\n                    await placePiece(numbered, (i * cell) + (cell/2), (j * cell) + (cell/2), pColour, '', canvas, ctx, scale);\n                }\n                catch (error) {\n                    console.error('Error placing piece:', error);\n                }\n            }\n        }\n    }\n\n    if(!numbered) return;\n    \n    for(var i = 0; i < pieceNumbers.length; i++){\n        var row = pieceNumbers[i][0];\n        var col = pieceNumbers[i][1];\n        var dead = pieceNumbers[i][2];\n        if(dead) continue;\n        \n        const r = (row == cell) ? row - cell : (row - (cell/2)) / cell;\n        const c = (col == cell) ? col - cell : (col - (cell/2)) / cell;\n        \n        if(board[c][r] != EMPTY){ \n            numberedPieces(ctx, row, col, (pieceNumbers.length) - i);\n        }\n    }\n}\n\nexport function drawHoshi(ctx, canvas, scale) {\n    const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n    const starSize = cellSize / 10;\n    ctx.fillStyle = 'black';\n    let positions;\n    if(window.boardSize == 9)\n        positions = [3, 7];\n    else if(window.boardSize == 13)\n        positions = [4, 10];\n    else if (window.boardSize == 19)\n        positions = [4, 10, 16];\n\n    ctx.beginPath();\n    for(var i = 0; i < positions.length; i++){\n        for(var j = 0; j < positions.length; j++){\n            const row = positions[i];\n            const col = positions[j];\n            ctx.moveTo(col * cellSize, (row * 40));\n            ctx.arc(col * cellSize, row * cellSize, starSize, 0, 2 * Math.PI);\n        }\n    }\n    if(window.boardSize == 9){\n        ctx.moveTo(5 * cellSize, (5 * 40));\n        ctx.arc(5 * cellSize, 5 * cellSize, starSize, 0, 2 * Math.PI);\n    } else if(window.boardSize == 13){\n        ctx.moveTo(7 * cellSize, (7 * 40));\n        ctx.arc(7 * cellSize, 7 * cellSize, starSize, 0, 2 * Math.PI);\n    } \n    ctx.fill();\n}\n\nexport function update2DBoard(x, y, pColour, boardStack, board) {\n    if (pColour == \"star\") {\n        boardStack.pop();\n        board[y][x] = EMPTY;\n        return true;\n    }\n    else if (board[y][x] != '*') {\n        return false;\n    }\n    else if (pColour == \"white\" || pColour == \"black\") {\n        board[y][x] = (pColour == \"white\") ? '1' : '0';\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function cloneBoard(brd) {\n    return brd.map(row => row.slice());\n}\n\nexport function print2DBoard(brd) {\n    console.log(\"\");\n    console.log(\"\\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n    brd.forEach(v => console.log(...v));\n    console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n} ","import { EMPTY, BLACK, WHITE } from './constants';\nimport { neighboringPoints } from './utils';\nimport { getLibertiesAt } from './pieces';\n\nfunction partitionTraverse(startX, startY, board) {\n    let boundaries = [];\n    let checked = [];\n    let pointsToCheck = [[startX, startY]];\n    const startColor = board[startX][startY];\n\n    while (pointsToCheck.length > 0) {\n        const [x, y] = pointsToCheck.pop();\n        if (!checked.some(p => p[0] === x && p[1] === y)) {\n            checked.push([x, y]);\n            let allNeighbors = neighboringPoints(x, y, board);\n\n            allNeighbors.forEach(neighbor => {\n                if (!checked.some(p => p[0] === neighbor.x && p[1] === neighbor.y)) {\n                    if (board[neighbor.x][neighbor.y] === startColor) {\n                        pointsToCheck.push([neighbor.x, neighbor.y]);\n                    } else {\n                        boundaries.push([neighbor.x, neighbor.y]);\n                    }\n                }\n            });\n        }\n    }\n\n    let uniqueBoundaries = [];\n    boundaries.forEach(el => {\n        if (!uniqueBoundaries.some(p => p[0] === el[0] && p[1] === el[1])) {\n            uniqueBoundaries.push(el);\n        }\n    });\n\n    return [checked, uniqueBoundaries];\n}\n\nfunction isFalse(board, x, y) {\n    if (board[x][y] != EMPTY) {\n        return false;\n    }\n\n    let possibleX = [];\n    let possibleY = [];\n    if (x > 0) {\n        possibleX.push(x - 1);\n    }\n\n    if (x < (window.boardSize - 1)) {\n        possibleX.push(x + 1);\n    }\n\n    if (y > 0) {\n        possibleY.push(y - 1);\n    }\n\n    if (y < (window.boardSize - 1)) {\n        possibleY.push(y + 1);\n    }\n\n    const diagonals = [];\n    possibleX.forEach(x => {\n        possibleY.forEach(y => {\n            diagonals.push([x, y]);\n        });\n    });\n\n    const onFirstLine = diagonals.length < 3;\n    const occupiedNeighbors = neighboringPoints(x, y, board).filter(i => board[i.x][i.y] != EMPTY);\n    if (onFirstLine && occupiedNeighbors.length < 1) {\n        return false;\n    } else if (!onFirstLine && occupiedNeighbors.length < 2) {\n        return false;\n    }\n\n    const opposingOccupiedDiagonals = diagonals.filter(d => \n        board[d[0]][d[1]] != EMPTY && \n        board[d[0]][d[1]] != board[occupiedNeighbors[0].x][occupiedNeighbors[0].y]\n    );\n    \n    if (onFirstLine) {\n        return opposingOccupiedDiagonals.length >= 1;\n    } else {\n        return opposingOccupiedDiagonals.length >= 2;\n    }\n}\n\nexport class Region {\n    constructor(board, intersections) {\n        this.boardReg = board;\n        this.intersections = intersections;\n        Object.freeze(this);\n    }\n\n    static getRegions(board) {\n        let checked = [];\n        const regions = [];\n\n        for (let x = 0; x < board.length; x++) {\n            for (let y = 0; y < board[0].length; y++) {\n                if (!checked.some(p => p[0] === x && p[1] === y)) {\n                    const [regionPoints, _] = partitionTraverse(x, y, board);\n                    const newReg = new Region(board, regionPoints);\n                    regions.push(newReg);\n                    checked = [...checked, ...regionPoints];\n                }\n            }\n        }\n\n        return regions;\n    }\n\n    isTerritory() {\n        const point = this.intersections[0];\n        if (this.boardReg[point[0]][point[1]] != EMPTY) {\n            return false;\n        }\n\n        const [_, boundaryPoints] = partitionTraverse(point[0], point[1], this.boardReg);\n        let surroundingColors = [];\n        boundaryPoints.forEach(el => {\n            if (surroundingColors.indexOf(this.boardReg[el[0]][el[1]]) < 0) {\n                surroundingColors.push(this.boardReg[el[0]][el[1]]);\n            }\n        });\n        return (surroundingColors.length === 1 && surroundingColors[0] !== EMPTY);\n    }\n\n    isNeutral() {\n        const point = this.intersections[0];\n        return !(this.boardReg[point[0]][point[1]] == BLACK) && \n               !(this.boardReg[point[0]][point[1]] == WHITE) && \n               !this.isTerritory();\n    }\n\n    exterior() {\n        let exteriorPoints = [];\n    \n        for (let i = 0; i < this.boardReg.length; i++) {\n            for (let j = 0; j < this.boardReg[i].length; j++) {\n                if (!this.intersections.some(el => el[0] == i && el[1] == j)) {\n                    const neighbors = neighboringPoints(i, j, this.boardReg);\n                    if (neighbors.some(neighbor => \n                        this.intersections.some(el => el[0] === neighbor.x && el[1] === neighbor.y)\n                    )) {\n                        exteriorPoints.push([i, j]);\n                    }\n                }\n            }\n        }\n        return exteriorPoints;\n    }\n\n    boundaryStones() {\n        return this.exterior().filter(i => \n            this.boardReg[i[0]][i[1]] != this.boardReg[this.intersections[0][0]][this.intersections[0][1]]\n        );\n    }\n\n    expandedBoundaryStones() {\n        const boundaryStones = this.boundaryStones();\n        const regions = Region.getRegions(this.boardReg).filter(r => \n            r.intersections.some(i => \n                boundaryStones.some(el => el[0] == i[0] && el[1] == i[1])\n            )\n        );\n        return regions.flatMap(r => r.intersections);\n    }\n\n    static Merge(board, regions, region) {\n        let mergedRegions = [region];\n        let length = -1; \n        while (mergedRegions.length != length) {\n            length = mergedRegions.length;\n            mergedRegions = regions.filter(r => {\n                return r.boardReg[r.intersections[0][0]][r.intersections[0][1]] == EMPTY && \n                       r.isTerritory() && \n                       board[r.intersections[0][0]][r.intersections[0][1]] == board[region.intersections[0][0]][region.intersections[0][1]] && \n                       r.expandedBoundaryStones().some(stone => {\n                           return mergedRegions.some(latestRegion => {\n                               return latestRegion.expandedBoundaryStones().some(el => el[0] == stone[0] && el[1] == stone[1]);\n                           });\n                       });\n            });\n        }\n        return mergedRegions;\n    }\n\n    numOfEyes() {\n        const point = this.intersections[0];\n        if (this.boardReg[point[0]][point[1]] != EMPTY) {\n            return -1;\n        }\n\n        let boundaryLength = 0;\n        const borderPoints = this.intersections.filter(i => {\n            return i[1] === 0 || i[1] === window.boardSize - 1 || i[0] === 0 || i[0] === window.boardSize - 1;\n        });\n        const cornerPoints = this.intersections.filter(i => {\n            return i[1] % window.boardSize - 1 === 0 && i[0] % window.boardSize - 1 === 0;\n        });\n\n        boundaryLength = this.boundaryStones().length + borderPoints.length + cornerPoints.length;\n        if (boundaryLength >= 10) {\n            return 2;\n        } else if (boundaryLength <= 6 && boundaryLength > 1) {\n            return 1;\n        } else if (boundaryLength == 7) {\n            return 1.5;\n        } else {\n            return -1;\n        }\n    }\n\n    territoryColour() {\n        const point = this.intersections[0];\n        const [_, boundaryPoints] = partitionTraverse(point[0], point[1], this.boardReg);\n        let surroundingColors = [];\n        boundaryPoints.forEach(el => {\n            if (surroundingColors.indexOf(this.boardReg[el[0]][el[1]]) < 0) {\n                surroundingColors.push(this.boardReg[el[0]][el[1]]);\n            }\n        });\n\n        if (surroundingColors.length === 1 && surroundingColors[0] !== EMPTY) {\n            return surroundingColors[0];\n        } else {\n            return -1;\n        }\n    }\n} ","import { EMPTY, BLACK, WHITE } from './constants';\nimport { Region } from './region';\nimport { getLibertiesAt } from './pieces';\n\nexport function toggleTimers(lastColour) {\n    if(lastColour == \"white\"){\n        return [false, true]\n    } else {\n        return [true, false]\n    }\n}\n\nexport function neighboringPoints(x, y, board) {\n    const neighbors = [];\n    const directions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n    directions.forEach(([dx, dy]) => {\n        const nx = x + dx, ny = y + dy;\n        if (nx >= 0 && nx < board.length && ny >= 0 && ny < board[0].length) {\n            neighbors.push({x: nx, y: ny});\n        }\n    });\n    return neighbors;\n}\n\nexport function flatMap(ary, condition) {\n    return Array.prototype.concat.apply([], ary.map(condition));\n}\n\nexport function withoutNeutralPoints(board) {\n    const regions = Region.getRegions(board);\n    const neutralRegions = regions.filter(el => el.isNeutral());\n    if ((regions.length == 0 || neutralRegions.length == 0)) {\n        return board;\n    }\n    const replacements = [];\n    neutralRegions.forEach(el => {\n        let startingX = null;\n        let startingY = null;\n        el.intersections.forEach(intersection => {\n            startingX = startingX || intersection[0];\n            startingY = startingY || intersection[1];\n            const manhattanDistance = Math.abs(intersection[1] - startingY) + Math.abs(intersection[0] - startingX);\n            replacements[intersection[0]] = replacements[intersection[0]] || [];\n            replacements[intersection[0]][intersection[1]] = [BLACK, WHITE][manhattanDistance % 2];\n        });\n    });\n\n    let newBoard = board.map(row => row.slice());\n    for (let x = 0; x < replacements.length; x++) {\n        if (replacements[x]) { \n            for (let y = 0; y < replacements[x].length; y++) {\n                if (replacements[x][y]) {\n                    newBoard[x][y] = replacements[x][y];\n                }\n            }\n        }\n    }\n    return newBoard;\n}\n\nexport function withoutFalseEyes(board) {\n    const territoryRegions = Region.getRegions(board).filter(el => el.isTerritory());\n    const falseEyePoints = flatMap(territoryRegions, el => el.intersections).filter(i => isFalse(board, i[0], i[1]));\n\n    let pointsNeighboringAtari = []\n    for(let i = 0; i < falseEyePoints.length; i++){\n        const el = falseEyePoints[i];\n        const neighbors = neighboringPoints(el[0], el[1], board);\n        for(let j = 0; j < neighbors.length; j++){\n            const n = neighbors[i];\n            const liberties = getLibertiesAt(n.x, n.y, board);\n            if(liberties == 1){\n                if(pointsNeighboringAtari.indexOf(el) < 0){ \n                    pointsNeighboringAtari.push(el) \n                }\n            }\n        }\n    }\n\n    let neutralAtariUpdatedState = board;\n    while (pointsNeighboringAtari.length > 0){\n        let newPoints = [];\n        for(let x = 0; x < neutralAtariUpdatedState.length; x++){\n            for(let y = 0; y < neutralAtariUpdatedState.length; y++){\n                const is_point = pointsNeighboringAtari.some(el => {\n                    return el[0] === x && el[1] === y;\n                });\n\n                if(is_point){\n                    const neighbors = neighboringPoints(x, y, neutralAtariUpdatedState);\n                    const fillColor = neutralAtariUpdatedState[neighbors[0].x][neighbors[0].y]\n                    newPoints.push([x, y, fillColor]);\n                }\n            }\n        }\n\n        newPoints.forEach(([x, y, fillColor]) => {\n            if (x < neutralAtariUpdatedState.length && y < neutralAtariUpdatedState[x].length) {\n                neutralAtariUpdatedState[x][y] = fillColor;\n            }\n        });\n\n        const board = withoutNeutralPoints(neutralAtariUpdatedState);\n        const territoryRegions = Region.getRegions(board).filter(el => el.isTerritory());\n        const falseEyePoints = flatMap(territoryRegions, el => el.intersections).filter(i => isFalse(board, i[0], i[1]));\n        pointsNeighboringAtari = falseEyePoints.filter(i => {\n            const el = falseEyePoints[i];\n            return neighboringPoints(el[0], el[1], board).some(neighbor => {\n                return getLibertiesAt(neighbor.x, neighbor.y, board) == 1;\n            });\n        });\n    }\n\n    return neutralAtariUpdatedState;\n} ","import { EMPTY, BLACK, WHITE } from './constants';\nimport { getLibertiesAt } from './pieces';\nimport { neighboringPoints } from './utils';\nimport { Region } from './region';\n\nfunction detectLadders(board) {\n    const regions = Region.getRegions(board);\n    let ladder_sequences = []\n\n    regions.forEach(el => {\n        const intersections = el.intersections[0];\n        const lib = getLibertiesAt(intersections[0], intersections[1], board);\n        if(lib == 1){\n            ladder_sequences.push(el);\n        }\n    });\n\n    let ataris = [];\n    let prey;\n    ladder_sequences.forEach(seqs => {\n        const atari = seqs.boundaryStones().find(el => board[el[0]][el[1]] == EMPTY);\n        if (!atari) return;\n\n        const neighbours = neighboringPoints(atari[0], atari[1], board);\n        let blackStones = 0;\n        let whiteStones = 0;\n        let emptyPoints = 0;\n        neighbours.forEach(point => {\n            const pointColour = board[point.x][point.y];\n            if(pointColour == BLACK)\n                blackStones += 1;\n            else if(pointColour == WHITE)\n                whiteStones += 1;\n            else if(pointColour == EMPTY)\n                emptyPoints += 1;\n        })\n        if(blackStones == 1 && whiteStones == 1 && emptyPoints == 2){\n            ataris.push(atari);\n            prey = neighbours.find(point => {\n                const lib = getLibertiesAt(point.x, point.y, board);\n                return lib == 1;\n            });\n        }\n    })\n    \n    return [ladder_sequences, ataris, prey];\n}\n\nfunction ladder_configurations(ladder_prey, atari, board) {\n    let config = {};\n    const atariNeighbours = neighboringPoints(atari.x, atari.y, board);\n    const emptyPoints = atariNeighbours.filter(point => board[point.x][point.y] == EMPTY);\n\n    if(emptyPoints.length > 2) return -1;\n\n    const [point1, point2] = emptyPoints;\n    const directions = {\n        top: { x: -1, y: 0 },\n        bottom: { x: 1, y: 0 },\n        left: { x: 0, y: -1 },\n        right: { x: 0, y: 1 }\n    };\n\n    // Determine direction for first point\n    let dir1 = Object.entries(directions).find(([_, dir]) => \n        point1.x - atari.x === dir.x && point1.y - atari.y === dir.y\n    )?.[0];\n\n    // Determine direction for second point\n    let dir2 = Object.entries(directions).find(([_, dir]) => \n        point2.x - atari.x === dir.x && point2.y - atari.y === dir.y\n    )?.[0];\n\n    // Set configuration based on direction combinations\n    const configs = {\n        'bottom,left': { nx: 1, ny: -1 },\n        'left,bottom': { nx: 1, ny: -1 },\n        'bottom,right': { nx: 1, ny: 1 },\n        'right,bottom': { nx: 1, ny: 1 },\n        'top,left': { nx: -1, ny: -1 },\n        'left,top': { nx: -1, ny: -1 },\n        'top,right': { nx: -1, ny: 1 },\n        'right,top': { nx: -1, ny: 1 }\n    };\n\n    const key = `${dir1},${dir2}`;\n    return configs[key] || -1;\n}\n\nexport function simulateLadder(board) {\n    const copyBoard = board.map(innerArray => [...innerArray]);\n    const [anyLadder, ataris, prey] = detectLadders(copyBoard);\n\n    if(anyLadder.length < 1){\n        return {board: copyBoard, successful: -1}; // no ladder sequence found\n    }\n\n    let lib = getLibertiesAt(prey.x, prey.y, copyBoard);\n    const preyColour = copyBoard[prey.x][prey.y]\n    const hunterColour = preyColour == BLACK ? WHITE : BLACK;\n    let atari = prey;\n    let firstAtari = {x: ataris[0][0], y: ataris[0][1]}\n\n    const config = ladder_configurations(atari, firstAtari, copyBoard);\n\n    while(lib == 1){\n        const neighbours = neighboringPoints(atari.x, atari.y, copyBoard);\n        atari = neighbours.find(el => copyBoard[el.x][el.y] == EMPTY);\n        copyBoard[atari.x][atari.y] = preyColour;\n        \n        if(getLibertiesAt(atari.x, atari.y, copyBoard) < 3){\n            const neighboringAtari = neighboringPoints(atari.x, atari.y, copyBoard);\n            const hunterPiece = neighboringAtari.find(el => {\n                const newX = ((el.x) + (config.nx) >= 0) && ((el.x) + (config.nx) < window.boardSize) ? (el.x) + (config.nx) : el.x;\n                const newY = ((el.y) + (config.ny) >= 0) && ((el.y) + (config.ny) < window.boardSize) ? (el.y) + (config.ny) : el.y;\n                return (copyBoard[el.x][el.y] == hunterColour) && copyBoard[newX][newY] == EMPTY\n            });\n            if(hunterPiece)\n                copyBoard[(hunterPiece.x) + (config.nx)][(hunterPiece.y) + (config.ny)] = hunterColour;\n        }\n\n        lib = getLibertiesAt(atari.x, atari.y, copyBoard);\n    }\n    \n    if(lib == 0){\n        return {board: copyBoard, successful: 1} // successful\n    } else if(lib > 0){\n        return {board: copyBoard, successful: 0} // unsuccessful\n    } \n    return {board: copyBoard, successful: -2}; // error\n} ","import { EMPTY, BLACK, WHITE } from './constants';\nimport { Region } from './region';\nimport { withoutNeutralPoints, withoutFalseEyes } from './utils';\n\nfunction isOnBoard(x, y, size) {\n    return x >= 0 && x < size && y >= 0 && y < size;\n}\n\nfunction floodFill(board, x, y, size, visited) {\n    let queue = [[x, y]];\n    let territory = [];\n    let bordersBlack = false;\n    let bordersWhite = false;\n\n    while (queue.length > 0) {\n        let [tempX, tempY] = queue.pop();\n        if (visited[tempX][tempY]) continue;\n        \n        visited[tempX][tempY] = true;\n        territory.push([tempX, tempY]);\n\n        let neighbors = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n        for (let [dx, dy] of neighbors) {\n            let nx = tempX + dx;\n            let ny = tempY + dy;\n\n            if (isOnBoard(nx, ny, size)) {\n                if (board[nx][ny] === EMPTY && !visited[nx][ny]) {\n                    queue.push([nx, ny]);\n                } else if (board[nx][ny] === BLACK) {\n                    bordersBlack = true;\n                } else if (board[nx][ny] === WHITE) {\n                    bordersWhite = true;\n                }\n            }\n        }\n    }\n\n    return {territory, bordersBlack, bordersWhite};\n}\n\nexport function calculateTerritory(board) {\n    const size = window.boardSize;\n    let visited = new Array(size).fill(null).map(() => new Array(size).fill(false));\n    let blackTerritory = 0;\n    let whiteTerritory = 0;\n\n    for (let x = 0; x < size; x++) {\n        for (let y = 0; y < size; y++) {\n            if (board[x][y] === EMPTY && !visited[x][y]) {\n                let { territory, bordersBlack, bordersWhite } = floodFill(board, x, y, size, visited);\n\n                if (bordersBlack && !bordersWhite) {\n                    blackTerritory += territory.length;\n                } else if (bordersWhite && !bordersBlack) {\n                    whiteTerritory += territory.length;\n                }\n            }\n        }\n    }\n    return {\n        black: blackTerritory,\n        white: whiteTerritory\n    };\n}\n\nexport function territoryScoring(board) {\n    const withoutNeutralPointsBoard = withoutNeutralPoints(board);\n    const withClearFalseEyesFilled = withoutFalseEyes(withoutNeutralPointsBoard);\n    const territoryRegions = Region.getRegions(withClearFalseEyesFilled).filter(r => r.isTerritory());\n\n    const territoryRegionsWithoutSeki = territoryRegions.filter(r => {\n        const merged = Region.Merge(r.boardReg, territoryRegions, r);\n        const eyes = merged.map(el => Math.ceil(el.numOfEyes()));\n        return (eyes.length > 0 && eyes.reduce((a, b) => a + b) >= 2);\n    });\n\n    const blackRegions = territoryRegionsWithoutSeki.filter(r => r.territoryColour() == BLACK);\n    const whiteRegions = territoryRegionsWithoutSeki.filter(r => r.territoryColour() == WHITE);\n    \n    const territoryControlledBlack = blackRegions.reduce((sum, region) => \n        sum + region.intersections.length, 0);\n    const territoryControlledWhite = whiteRegions.reduce((sum, region) => \n        sum + region.intersections.length, 0);\n\n    return {\n        black: territoryControlledBlack,\n        white: territoryControlledWhite\n    };\n}\n\nexport function countStones(board) {\n    let count = {\n        black: 0,\n        white: 0\n    };\n\n    for (let row of board) {\n        for (let cell of row) {\n            if (cell === BLACK) {\n                count.black++;\n            } else if (cell === WHITE) {\n                count.white++;\n            }\n        }\n    }\n\n    return count;\n} ","import { render } from \"./GoBoard.vue?vue&type=template&id=1b6418be&scoped=true\"\nimport script from \"./GoBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GoBoard.vue?vue&type=script&lang=js\"\n\nimport \"./GoBoard.vue?vue&type=style&index=0&id=1b6418be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1b6418be\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5ac4a646\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5ac4a646&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import './assets/main.css';\nimport {createBootstrap} from 'bootstrap-vue-next'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue-next/dist/bootstrap-vue-next.css'\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\nconst app = createApp(App)\napp.use(createBootstrap())\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/Go-Game/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgo_game\"] = self[\"webpackChunkgo_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(349); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","startGame","class","style","for","selectedSize","sizes","size","key","value","selectedRule","options","rules","name","buttons","selectedKomi","max","type","step","placeholder","min","selectedMainMin","selectedMainSec","periodNums","selectedPeriodNum","periodLength","selectedPeriodMin","selectedPeriodSec","variant","block","selectBoardSize","components","BCard","BCardBody","BCardFooter","BRow","BCol","BListGroupItem","BListGroup","BDropdown","BDropdownDivider","BDropdownItem","BFormGroup","BInputGroup","BInput","BFormInput","BFormRadioGroup","BButton","BFormSelect","BFormCheckbox","data","text","selected","showAlert","config","this","scoreMethod","komi","mainTime","Date","periodTime","methods","isNaN","alert","mainMin","parseInt","mainSec","setMinutes","setSeconds","periodMin","periodSec","$emit","__exports__","ref","stop","bStop","isBlack","timerFinish","pill","prisonersCounterB","vertical","toggleNumbered","undoMove","disabled","lastColour","estimateScore","ladderEval","passMove","wStop","prisonersCounterW","undoAllowed","centered","ladderCheck","title","ladderModalTitle","estimateModal","gameover","reloadPage","formattedTime","currentPeriod","minutes","seconds","playing","periods","numPeriods","byo_yomi_periods","periodsSizes","mounted","startTimer","Array","fill","window","getMinutes","getSeconds","computed","paddedMinutes","paddedSeconds","props","Boolean","stopTimer","start","timerId","setInterval","sec","$refs","timeLabel","textContent","periodTxt","color","clearInterval","bind","BLACK","WHITE","async","placePiece","numbered","row","col","colour","num","canvas","ctx","scale","Promise","resolve","reject","cellSize","width","boardSize","pieceImage","Image","pieceColour","src","onload","drawImage","numberedPieces","onerror","error","fontSize","cell","Math","round","font","textAlign","textBaseline","fillStyle","fillText","getLiberties","x","y","board","checkBoard","deadCells","checklib","count","i","pX","Number","pY","friendCount","push","getLibertiesAt","map","slice","getLiberties2","resetCheckBoard","redraw","j","init2DBoard","drawBoard","height","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","rect","drawHoshi","redrawBoard","pieceNumbers","clearRect","pColour","console","length","dead","r","c","starSize","positions","arc","PI","update2DBoard","boardStack","pop","cloneBoard","brd","print2DBoard","log","forEach","v","partitionTraverse","startX","startY","boundaries","checked","pointsToCheck","startColor","some","p","allNeighbors","neighbor","uniqueBoundaries","el","Region","constructor","intersections","boardReg","Object","freeze","getRegions","regions","regionPoints","_","newReg","isTerritory","point","boundaryPoints","surroundingColors","indexOf","isNeutral","exterior","exteriorPoints","neighbors","boundaryStones","filter","expandedBoundaryStones","flatMap","Merge","region","mergedRegions","stone","latestRegion","numOfEyes","boundaryLength","borderPoints","cornerPoints","territoryColour","toggleTimers","directions","dx","dy","nx","ny","ary","condition","prototype","concat","apply","withoutNeutralPoints","neutralRegions","replacements","startingX","startingY","intersection","manhattanDistance","abs","newBoard","withoutFalseEyes","territoryRegions","falseEyePoints","isFalse","pointsNeighboringAtari","n","liberties","neutralAtariUpdatedState","newPoints","is_point","fillColor","detectLadders","ladder_sequences","lib","prey","ataris","seqs","atari","find","neighbours","blackStones","whiteStones","emptyPoints","pointColour","ladder_configurations","ladder_prey","atariNeighbours","point1","point2","top","bottom","left","right","dir1","entries","dir","dir2","configs","simulateLadder","copyBoard","innerArray","anyLadder","successful","preyColour","hunterColour","firstAtari","neighboringAtari","hunterPiece","newX","newY","isOnBoard","floodFill","visited","queue","territory","bordersBlack","bordersWhite","tempX","tempY","calculateTerritory","blackTerritory","whiteTerritory","black","white","territoryScoring","withoutNeutralPointsBoard","withClearFalseEyesFilled","territoryRegionsWithoutSeki","merged","eyes","ceil","reduce","a","b","blackRegions","whiteRegions","territoryControlledBlack","sum","territoryControlledWhite","countStones","BButtonGroup","Timer","BModal","BContainer","BBadge","pieceNumbersStack","prisonersStack","isNumbered","lastMoveWasPassed","goBoard","getContext","devicePixelRatio","addEventListener","getMousePosition","undo","event","getBoundingClientRect","clientX","clientY","lib2","currentPiece","neighborPiece","unshift","res","prisonerCount","elX","elY","end","endGame","shift","gameDetails","bg","scores","tableBlack","tableWhite","stones","scoring","parseFloat","blackScoreHTML","whiteScoreHTML","html","estimateModalMessage","innerHTML","ladderResult","ladderBoardWidth","boardText","join","ladderModalBody","timerExhausted","winner","modalMessage","location","reload","notSelected","GoBoard","BoardSize","render","app","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","splice","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}