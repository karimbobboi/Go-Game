{"version":3,"file":"dom-C-F8jHop.js","sources":["../src/utils/dom.ts"],"sourcesContent":["import type {Slot} from 'vue'\n\n/**\n * @deprecated only used in BFormGroup, which is not an SFC... Function could probably be replaced with pure Vue\n */\nexport const attemptFocus = (\n  el: Readonly<HTMLElement>,\n  options: Readonly<FocusOptions> = {}\n): boolean => {\n  const getActiveElement = (excludes: readonly HTMLElement[] = []): Element | null => {\n    const {activeElement} = document\n    return activeElement && !excludes.some((el) => el === activeElement) ? activeElement : null\n  }\n\n  const isActiveElement = (el: Readonly<HTMLElement>): boolean => el === getActiveElement()\n\n  try {\n    el.focus(options)\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e)\n  }\n  return isActiveElement(el)\n}\n\nexport const isEmptySlot = (el: Slot | undefined): boolean => (el?.() ?? []).length === 0\n\n/**\n * @deprecated only used in BFormGroup, which is not an SFC... Function could probably be replaced with pure Vue\n */\nexport const isVisible = (el: Readonly<Element>): boolean => {\n  //if (!isElement(el) || !el.parentNode || !contains(DOCUMENT.body, el)) {\n  // Note this can fail for shadow dom elements since they\n  // are not a direct descendant of document.body\n  //return false\n  //}\n  if (el.getAttribute('display') === 'none') {\n    // We do this check to help with vue-test-utils when using v-show\n    return false\n  }\n  // All browsers support getBoundingClientRect(), except JSDOM as it returns all 0's for values :(\n  // So any tests that need isVisible will fail in JSDOM\n  // Except when we override the getBCR prototype in some tests\n  const bcr = el.getBoundingClientRect()\n  return !!(bcr && bcr.height > 0 && bcr.width > 0)\n}\n\nexport const getTransitionDelay = (element: Readonly<HTMLElement>) => {\n  const style = window.getComputedStyle(element)\n  // if multiple durations are defined, we take the first\n  const transitionDelay = style.transitionDelay.split(',')[0] || ''\n  const transitionDuration = style.transitionDuration.split(',')[0] || ''\n  const transitionDelayMs = Number(transitionDelay.slice(0, -1)) * 1000\n  const transitionDurationMs = Number(transitionDuration.slice(0, -1)) * 1000\n  return transitionDelayMs + transitionDurationMs\n}\n"],"names":["el","options","focus","e","console","error","excludes","activeElement","document","some","getActiveElement","element","style","window","getComputedStyle","transitionDelay","split","transitionDuration","Number","slice","length","getAttribute","bcr","getBoundingClientRect","height","width"],"mappings":"kCAK4B,CAC1BA,EACAC,EAAkC,MAS9B,IACFD,EAAGE,MAAMD,SACFE,GAEPC,QAAQC,MAAMF,EAChB,CACA,OAAuBH,IAbE,EAACM,EAAmC,MACrD,MAAAC,cAACA,GAAiBC,SACjB,OAAAD,IAAkBD,EAASG,MAAMT,GAAOA,IAAOO,IAAiBA,EAAgB,IAAA,EAGlBG,EAQ9C,6BAyBQC,IAC3B,MAAAC,EAAQC,OAAOC,iBAAiBH,GAEhCI,EAAkBH,EAAMG,gBAAgBC,MAAM,KAAK,IAAM,GACzDC,EAAqBL,EAAMK,mBAAmBD,MAAM,KAAK,IAAM,GAGrE,OAFiE,IAAvCE,OAAOH,EAAgBI,MAAM,GAAG,IACa,IAA1CD,OAAOD,EAAmBE,MAAM,GAAG,GACrC,sBA7BDnB,GAA4D,MAAf,MAAVA,OAAU,EAAAA,MAAA,IAAIoB,yBAKnDpB,IAMxB,GAAmC,SAA/BA,EAAGqB,aAAa,WAEX,OAAA,EAKH,MAAAC,EAAMtB,EAAGuB,wBACf,SAAUD,GAAOA,EAAIE,OAAS,GAAKF,EAAIG,MAAQ,EAAA"}