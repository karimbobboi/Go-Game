{"version":3,"file":"BModalOrchestrator.vue_vue_type_script_setup_true_lang-apwIBo-t.js","sources":["../src/components/BModal/BModal.vue","../src/composables/useTransitions.ts","../src/components/BModal/BModalOrchestrator.vue"],"sourcesContent":["<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <Transition\n      v-bind=\"{...fadeTransitionProps, ...props.transProps, enterToClass: 'show'}\"\n      :appear=\"modelValue\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterEnter\"\n      @leave=\"onLeave\"\n      @after-leave=\"onAfterLeave\"\n    >\n      <div\n        v-show=\"modelValue\"\n        :id=\"computedId\"\n        ref=\"element\"\n        class=\"modal\"\n        :class=\"modalClasses\"\n        role=\"dialog\"\n        :aria-labelledby=\"!props.hideHeader ? `${computedId}-label` : undefined\"\n        :aria-describedby=\"`${computedId}-body`\"\n        tabindex=\"-1\"\n        v-bind=\"$attrs\"\n        :style=\"computedZIndex\"\n      >\n        <div class=\"modal-dialog\" :class=\"modalDialogClasses\">\n          <div v-if=\"lazyShowing\" class=\"modal-content\" :class=\"props.contentClass\">\n            <div v-if=\"!props.hideHeader\" class=\"modal-header\" :class=\"headerClasses\">\n              <slot name=\"header\" v-bind=\"sharedSlots\">\n                <component\n                  :is=\"props.titleTag\"\n                  :id=\"`${computedId}-label`\"\n                  class=\"modal-title\"\n                  :class=\"titleClasses\"\n                >\n                  <slot name=\"title\" v-bind=\"sharedSlots\">\n                    {{ props.title }}\n                  </slot>\n                </component>\n                <template v-if=\"!props.hideHeaderClose\">\n                  <BButton\n                    v-if=\"hasHeaderCloseSlot\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hideFn('close')\"\n                  >\n                    <slot name=\"header-close\" />\n                  </BButton>\n                  <BCloseButton\n                    v-else\n                    :aria-label=\"props.headerCloseLabel\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hideFn('close')\"\n                  />\n                </template>\n              </slot>\n            </div>\n            <div\n              :id=\"`${computedId}-body`\"\n              class=\"modal-body\"\n              :class=\"bodyClasses\"\n              v-bind=\"props.bodyAttrs\"\n            >\n              <slot v-bind=\"sharedSlots\">\n                {{ props.body }}\n              </slot>\n            </div>\n            <div v-if=\"!props.hideFooter\" class=\"modal-footer\" :class=\"footerClasses\">\n              <slot name=\"footer\" v-bind=\"sharedSlots\">\n                <slot name=\"cancel\" v-bind=\"sharedSlots\">\n                  <BButton\n                    v-if=\"!props.okOnly\"\n                    ref=\"cancelButton\"\n                    :disabled=\"disableCancel\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.cancelVariant\"\n                    @click=\"hideFn('cancel')\"\n                  >\n                    {{ props.cancelTitle }}\n                  </BButton>\n                </slot>\n                <slot name=\"ok\" v-bind=\"sharedSlots\">\n                  <BButton\n                    ref=\"okButton\"\n                    :disabled=\"disableOk\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.okVariant\"\n                    @click=\"hideFn('ok')\"\n                  >\n                    {{ props.okTitle }}\n                  </BButton>\n                </slot>\n              </slot>\n            </div>\n          </div>\n        </div>\n        <slot v-if=\"!props.hideBackdrop\" name=\"backdrop\" v-bind=\"sharedSlots\">\n          <div class=\"modal-backdrop fade show\" @click=\"hideFn('backdrop')\" />\n        </slot>\n        <div\n          v-if=\"needsFallback\"\n          ref=\"fallbackFocusElement\"\n          :class=\"fallbackClassSelector\"\n          tabindex=\"0\"\n          style=\"width: 0; height: 0; overflow: hidden\"\n        />\n      </div>\n    </Transition>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {onKeyStroke, useEventListener, useFocus} from '@vueuse/core'\nimport {useActivatedFocusTrap} from '../../composables/useActivatedFocusTrap'\nimport {computed, type CSSProperties, ref, watch} from 'vue'\nimport type {BModalProps} from '../../types/ComponentProps'\nimport {BvTriggerableEvent} from '../../utils'\nimport BButton from '../BButton/BButton.vue'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useFadeTransition} from '../../composables/useTransitions'\nimport {useSafeScrollLock} from '../../composables/useSafeScrollLock'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useModalManager} from '../../composables/useModalManager'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\n// aria\n// autofocus\n// close on escape when autofocus\n\n// Note, attempt to return focus to item that openned the modal after close\n// Implement auto focus props like autoFocusButton\n\nconst _props = withDefaults(defineProps<Omit<BModalProps, 'modelValue'>>(), {\n  autofocus: true,\n  autofocusButton: undefined,\n  body: undefined,\n  bodyBgVariant: null,\n  bodyAttrs: undefined,\n  bodyClass: null,\n  bodyScrolling: false,\n  bodyTextVariant: null,\n  bodyVariant: null,\n  busy: false,\n  buttonSize: 'md',\n  cancelDisabled: false,\n  cancelTitle: 'Cancel',\n  cancelVariant: 'secondary',\n  centered: false,\n  contentClass: undefined,\n  dialogClass: undefined,\n  footerBgVariant: null,\n  footerBorderVariant: null,\n  footerClass: undefined,\n  footerTextVariant: null,\n  footerVariant: null,\n  fullscreen: false,\n  headerBgVariant: null,\n  headerBorderVariant: null,\n  headerClass: undefined,\n  headerCloseClass: undefined,\n  headerCloseLabel: 'Close',\n  headerCloseVariant: 'secondary',\n  headerTextVariant: null,\n  headerVariant: null,\n  hideBackdrop: false,\n  hideFooter: false,\n  hideHeader: false,\n  hideHeaderClose: false,\n  id: undefined,\n  lazy: false,\n  modalClass: undefined,\n  noCloseOnBackdrop: false,\n  noCloseOnEsc: false,\n  noFade: false,\n  noTrap: false,\n  okDisabled: false,\n  okOnly: false,\n  okTitle: 'OK',\n  okVariant: 'primary',\n  scrollable: false,\n  size: 'md',\n  teleportDisabled: false,\n  teleportTo: 'body',\n  title: undefined,\n  titleClass: undefined,\n  titleSrOnly: false,\n  titleTag: 'h5',\n  transProps: undefined,\n})\nconst props = useDefaults(_props, 'BModal')\n\nconst emit = defineEmits<{\n  'backdrop': [value: BvTriggerableEvent]\n  'cancel': [value: BvTriggerableEvent]\n  'close': [value: BvTriggerableEvent]\n  'esc': [value: BvTriggerableEvent]\n  'hidden': [value: BvTriggerableEvent]\n  'hide': [value: BvTriggerableEvent]\n  'hide-prevented': []\n  'ok': [value: BvTriggerableEvent]\n  'show': [value: BvTriggerableEvent]\n  'show-prevented': []\n  'shown': [value: BvTriggerableEvent]\n}>()\n\ntype SharedSlotsData = {\n  cancel: () => void\n  close: () => void\n  hide: (trigger?: string) => void\n  ok: () => void\n  active: boolean\n  visible: boolean\n}\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'backdrop'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'cancel'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'footer'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header-close'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'ok'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'title'?: (props: SharedSlotsData) => any\n}>()\n\nconst computedId = useId(() => props.id, 'modal')\n// Note: passive: true will sync an internal ref... This is required for useModalManager to exit,\n// Since the modelValue that's passed from that composable is not reactive, this internal ref _is_ and thus it will trigger closing the modal\nconst modelValue = defineModel<Exclude<BModalProps['modelValue'], undefined>>({default: false})\n\nconst element = ref<HTMLElement | null>(null)\nconst fallbackFocusElement = ref<HTMLElement | null>(null)\nconst okButton = ref<HTMLElement | null>(null)\nconst cancelButton = ref<HTMLElement | null>(null)\nconst closeButton = ref<HTMLElement | null>(null)\nconst isActive = ref(false)\nconst lazyLoadCompleted = ref(false)\n\nconst fallbackClassSelector = 'modal-fallback-focus'\nconst {needsFallback} = useActivatedFocusTrap({\n  element,\n  isActive,\n  noTrap: () => props.noTrap,\n  fallbackFocus: {\n    ref: fallbackFocusElement,\n    classSelector: fallbackClassSelector,\n  },\n})\n\nconst fadeTransitionProps = useFadeTransition(true)\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hideFn('esc')\n  },\n  {target: element}\n)\nuseSafeScrollLock(modelValue, () => props.bodyScrolling)\nconst {focused: modalFocus} = useFocus(element, {\n  initialValue: modelValue.value && props.autofocusButton === undefined && props.autofocus === true,\n})\nconst {focused: okButtonFocus} = useFocus(okButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'ok' && props.autofocus === true,\n})\nconst {focused: cancelButtonFocus} = useFocus(cancelButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'cancel' && props.autofocus === true,\n})\nconst {focused: closeButtonFocus} = useFocus(closeButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'close' && props.autofocus === true,\n})\n\nconst modalClasses = computed(() => [\n  props.modalClass,\n  {\n    fade: !props.noFade,\n    show: isActive.value,\n  },\n])\n\nconst lazyShowing = computed(\n  () =>\n    props.lazy === false ||\n    (props.lazy === true && lazyLoadCompleted.value === true) ||\n    (props.lazy === true && modelValue.value === true)\n)\n\nconst hasHeaderCloseSlot = computed(() => !isEmptySlot(slots['header-close']))\n\nconst modalDialogClasses = computed(() => [\n  props.dialogClass,\n  {\n    'modal-fullscreen': props.fullscreen === true,\n    [`modal-fullscreen-${props.fullscreen}-down`]: typeof props.fullscreen === 'string',\n    [`modal-${props.size}`]: props.size !== 'md',\n    'modal-dialog-centered': props.centered,\n    'modal-dialog-scrollable': props.scrollable,\n  },\n])\n\nconst bodyColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.bodyBgVariant,\n  textVariant: props.bodyTextVariant,\n  variant: props.bodyVariant,\n}))\nconst bodyClasses = computed(() => [props.bodyClass, bodyColorClasses.value])\n\nconst headerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.headerBgVariant,\n  textVariant: props.headerTextVariant,\n  variant: props.headerVariant,\n  borderVariant: props.headerBorderVariant,\n}))\nconst headerClasses = computed(() => [props.headerClass, headerColorClasses.value])\n\nconst headerCloseAttrs = computed(() => ({\n  variant: hasHeaderCloseSlot.value ? props.headerCloseVariant : undefined,\n  class: props.headerCloseClass,\n}))\n\nconst footerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.footerBgVariant,\n  textVariant: props.footerTextVariant,\n  variant: props.footerVariant,\n  borderVariant: props.footerBorderVariant,\n}))\nconst footerClasses = computed(() => [props.footerClass, footerColorClasses.value])\n\nconst titleClasses = computed(() => [\n  props.titleClass,\n  {\n    ['visually-hidden']: props.titleSrOnly,\n  },\n])\nconst disableCancel = computed(() => props.cancelDisabled || props.busy)\nconst disableOk = computed(() => props.okDisabled || props.busy)\n\nconst buildTriggerableEvent = (\n  type: string,\n  opts: Readonly<Partial<BvTriggerableEvent>> = {}\n): BvTriggerableEvent =>\n  new BvTriggerableEvent(type, {\n    cancelable: false,\n    target: element.value || null,\n    relatedTarget: null,\n    trigger: null,\n    ...opts,\n    componentId: computedId.value,\n  })\n\nwatch(modelValue, (newValue, oldValue) => {\n  if (newValue === oldValue) return\n  if (newValue === true) {\n    showFn()\n  } else {\n    hideFn()\n  }\n})\n\nconst hideFn = (trigger = '') => {\n  if (\n    (trigger === 'backdrop' && props.noCloseOnBackdrop) ||\n    (trigger === 'esc' && props.noCloseOnEsc)\n  ) {\n    emit('hide-prevented')\n    return\n  }\n\n  const event = buildTriggerableEvent('hide', {cancelable: trigger !== '', trigger})\n\n  if (trigger === 'ok') {\n    emit(trigger, event)\n  }\n  if (trigger === 'cancel') {\n    emit(trigger, event)\n  }\n  if (trigger === 'close') {\n    emit(trigger, event)\n  }\n  if (trigger === 'backdrop') {\n    emit(trigger, event)\n  }\n  if (trigger === 'esc') {\n    emit(trigger, event)\n  }\n  emit('hide', event)\n\n  if (event.defaultPrevented) {\n    emit('hide-prevented')\n    if (!modelValue.value) modelValue.value = true\n    return\n  }\n  if (modelValue.value) modelValue.value = false\n}\n\n// TODO: If a show is prevented, it will briefly show the animation. This is a bug\n// I'm not sure how to wait for the event to be determined. Before showing\nconst showFn = () => {\n  if (isActive.value) return\n\n  const event = buildTriggerableEvent('show', {cancelable: true})\n  emit('show', event)\n  if (event.defaultPrevented) {\n    if (modelValue.value) modelValue.value = false\n    emit('show-prevented')\n    return\n  }\n  if (!modelValue.value) modelValue.value = true\n}\n\nconst pickFocusItem = () => {\n  if (props.autofocus === false) return\n  props.autofocusButton === 'ok'\n    ? (okButtonFocus.value = true)\n    : props.autofocusButton === 'close'\n      ? (closeButtonFocus.value = true)\n      : props.autofocusButton === 'cancel'\n        ? (cancelButtonFocus.value = true)\n        : (modalFocus.value = true)\n}\n\nconst onBeforeEnter = () => {\n  showFn()\n}\nconst onAfterEnter = () => {\n  isActive.value = true\n  pickFocusItem()\n  emit('shown', buildTriggerableEvent('shown'))\n  if (props.lazy === true) lazyLoadCompleted.value = true\n}\nconst isLeaving = ref(false)\nconst onLeave = () => {\n  isActive.value = false\n  isLeaving.value = true\n}\nconst onAfterLeave = () => {\n  emit('hidden', buildTriggerableEvent('hidden'))\n  if (props.lazy === true) lazyLoadCompleted.value = false\n  isLeaving.value = false\n}\n\nconst {activePosition, activeModalCount, stackWithoutSelf} = useModalManager(\n  isActive,\n  modelValue.value\n)\n\nwatch(stackWithoutSelf, (newValue, oldValue) => {\n  if (newValue.length > oldValue.length && isActive.value === true && props.noStacking === true)\n    hideFn()\n})\n\nconst defaultModalDialogZIndex = 1056\nconst computedZIndex = computed<CSSProperties>(() => ({\n  // Make sure that newly opened modals have a higher z-index than currently active ones.\n  // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').\n  //\n  // This means inactive modals will already be higher than active ones when opened.\n  'z-index':\n    isActive.value || isLeaving.value\n      ? // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect\n        defaultModalDialogZIndex - ((activeModalCount?.value ?? 0) - (activePosition?.value ?? 0))\n      : defaultModalDialogZIndex,\n}))\n\nuseEventListener(element, 'bv-toggle', () => {\n  modelValue.value ? hideFn() : showFn()\n})\n\nconst sharedSlots = computed<SharedSlotsData>(() => ({\n  cancel: () => {\n    hideFn('cancel')\n  },\n  close: () => {\n    hideFn('close')\n  },\n  hide: hideFn,\n  ok: () => {\n    hideFn('ok')\n  },\n  active: isActive.value,\n  visible: modelValue.value,\n}))\n\ndefineExpose({\n  hide: hideFn,\n  id: computedId,\n  show: showFn,\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.modal {\n  display: block;\n}\n\n.modal-dialog {\n  z-index: 1051;\n}\n</style>\n","import {computed, type MaybeRefOrGetter, toValue} from 'vue'\n\nexport const useFadeTransition = (noFade: MaybeRefOrGetter<boolean>) =>\n  computed(() => {\n    const NO_FADE_PROPS = {\n      name: '',\n      enterActiveClass: '',\n      enterToClass: '',\n      leaveActiveClass: '',\n      leaveToClass: 'showing',\n      enterFromClass: 'showing',\n      leaveFromClass: '',\n      css: true,\n    }\n    const FADE_PROPS = {\n      ...NO_FADE_PROPS,\n      name: 'fade',\n      enterActiveClass: 'fade showing',\n      leaveActiveClass: 'fade showing',\n    }\n    return toValue(noFade) ? NO_FADE_PROPS : FADE_PROPS\n  })\n","<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <div id=\"__BVID__modal-container\" v-bind=\"$attrs\">\n      <component\n        :is=\"modal.component ?? BModal\"\n        v-for=\"[self, modal] in tools.modals?.value\"\n        :key=\"self\"\n        v-bind=\"modal.props\"\n        v-model=\"modal.props._modelValue\"\n        :teleport-disabled=\"true\"\n        @update:model-value=\"tools.leave?.(self)\"\n        @hide=\"\n          (e: BvTriggerableEvent) => {\n            // These following are confirm rules, otherwise we always resolve true\n            if (modal.props._isConfirm === true) {\n              if (e.trigger === 'ok') {\n                modal.props._promise.resolve(true)\n                return\n              }\n              if (e.trigger === 'cancel') {\n                modal.props._promise.resolve(false)\n                return\n              }\n              modal.props._promise.resolve(null)\n            }\n            modal.props._promise.resolve(true)\n          }\n        \"\n        @hidden=\"tools.remove?.(self)\"\n      />\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BvTriggerableEvent} from '../../utils'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BModalOrchestratorProps} from '../../types/ComponentProps'\nimport BModal from './BModal.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {useModalController} from '../../composables/useModalController'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BModalOrchestratorProps>(), {\n  teleportDisabled: false,\n  teleportTo: 'body',\n})\nconst props = useDefaults(_props, 'BModalOrchestrator')\n\nconst tools = useModalController()\n\ndefineExpose({\n  ...tools,\n})\n</script>\n"],"names":["fallbackClassSelector","_props","__props","props","useDefaults","emit","__emit","slots","_useSlots","computedId","useId","id","modelValue","_useModel","element","ref","fallbackFocusElement","okButton","cancelButton","closeButton","isActive","lazyLoadCompleted","needsFallback","useActivatedFocusTrap","noTrap","fallbackFocus","classSelector","fadeTransitionProps","noFade","computed","NO_FADE_PROPS","name","enterActiveClass","enterToClass","leaveActiveClass","leaveToClass","enterFromClass","leaveFromClass","css","FADE_PROPS","toValue","index","onKeyStroke","hideFn","target","useSafeScrollLock","bodyScrolling","focused","modalFocus","useFocus","initialValue","value","autofocusButton","autofocus","okButtonFocus","cancelButtonFocus","closeButtonFocus","modalClasses","modalClass","fade","show","lazyShowing","lazy","hasHeaderCloseSlot","isEmptySlot","modalDialogClasses","dialogClass","fullscreen","size","centered","scrollable","bodyColorClasses","useColorVariantClasses","bgVariant","bodyBgVariant","textVariant","bodyTextVariant","variant","bodyVariant","bodyClasses","bodyClass","headerColorClasses","headerBgVariant","headerTextVariant","headerVariant","borderVariant","headerBorderVariant","headerClasses","headerClass","headerCloseAttrs","headerCloseVariant","class","headerCloseClass","footerColorClasses","footerBgVariant","footerTextVariant","footerVariant","footerBorderVariant","footerClasses","footerClass","titleClasses","titleClass","titleSrOnly","disableCancel","cancelDisabled","busy","disableOk","okDisabled","buildTriggerableEvent","type","opts","BvTriggerableEvent","cancelable","relatedTarget","trigger","componentId","watch","newValue","oldValue","noCloseOnBackdrop","noCloseOnEsc","event","defaultPrevented","showFn","onBeforeEnter","onAfterEnter","isLeaving","onLeave","onAfterLeave","activePosition","activeModalCount","stackWithoutSelf","useModalManager","length","noStacking","computedZIndex","sharedSlots","cancel","close","hide","ok","active","visible","__expose","tools","useModalController"],"mappings":"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"}