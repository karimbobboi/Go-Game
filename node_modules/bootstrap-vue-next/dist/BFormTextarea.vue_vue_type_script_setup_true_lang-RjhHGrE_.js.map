{"version":3,"file":"BFormTextarea.vue_vue_type_script_setup_true_lang-RjhHGrE_.js","sources":["../src/components/BFormTextarea/BFormTextarea.vue"],"sourcesContent":["<template>\n  <textarea\n    :id=\"computedId\"\n    ref=\"input\"\n    :class=\"computedClasses\"\n    :name=\"props.name || undefined\"\n    :form=\"props.form || undefined\"\n    :value=\"modelValue ?? undefined\"\n    :disabled=\"props.disabled\"\n    :placeholder=\"props.placeholder\"\n    :required=\"props.required || undefined\"\n    :autocomplete=\"props.autocomplete || undefined\"\n    :readonly=\"props.readonly || props.plaintext\"\n    :aria-required=\"props.required || undefined\"\n    :aria-invalid=\"computedAriaInvalid\"\n    :rows=\"props.rows\"\n    :style=\"computedStyles\"\n    :wrap=\"props.wrap || undefined\"\n    @input=\"onInput($event)\"\n    @change=\"onChange($event)\"\n    @blur=\"onBlur($event)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type {BFormTextareaProps} from '../../types/ComponentProps'\nimport {computed, type CSSProperties} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {normalizeInput} from '../../utils/normalizeInput'\nimport {useFormInput} from '../../composables/useFormInput'\nimport {useStateClass} from '../../composables/useStateClass'\n\nconst _props = withDefaults(defineProps<Omit<BFormTextareaProps, 'modelValue'>>(), {\n  // CommonInputProps\n  ariaInvalid: undefined,\n  autocomplete: undefined,\n  autofocus: false,\n  debounce: 0,\n  debounceMaxWait: NaN,\n  disabled: false,\n  form: undefined,\n  formatter: undefined,\n  id: undefined,\n  lazyFormatter: false,\n  list: undefined,\n  modelValue: '',\n  name: undefined,\n  placeholder: undefined,\n  plaintext: false,\n  readonly: false,\n  required: false,\n  size: undefined,\n  state: null,\n  // End CommonInputProps\n  noResize: false,\n  rows: 2,\n  wrap: 'soft',\n})\nconst props = useDefaults(_props, 'BFormTextarea')\n\nconst [modelValue, modelModifiers] = defineModel<\n  Exclude<BFormTextareaProps['modelValue'], undefined>,\n  'trim' | 'lazy' | 'number'\n>({\n  default: '',\n  set: (v) => normalizeInput(v, modelModifiers),\n})\n\nconst {input, computedId, computedAriaInvalid, onInput, onChange, onBlur, focus, blur} =\n  useFormInput(props, modelValue, modelModifiers)\n\nconst stateClass = useStateClass(() => props.state)\n\nconst computedClasses = computed(() => [\n  stateClass.value,\n  props.plaintext ? 'form-control-plaintext' : 'form-control',\n  {\n    [`form-control-${props.size}`]: !!props.size,\n  },\n])\n\nconst computedStyles = computed<CSSProperties>(() => ({\n  resize: props.noResize ? 'none' : undefined,\n}))\n\ndefineExpose({\n  blur,\n  element: input,\n  focus,\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","modelValue","modelModifiers","_useModel","set","v","normalizeInput","input","computedId","computedAriaInvalid","onInput","onChange","onBlur","focus","blur","useFormInput","stateClass","useStateClass","state","computedClasses","computed","value","plaintext","size","computedStyles","resize","noResize","__expose","element"],"mappings":"ukCAgCA,MAAMA,EAASC,EA0BTC,EAAQC,EAAAA,YAAYH,EAAQ,kBAE3BI,EAAYC,GAAkBC,EAAAA,wBAGnC,CAEAC,IAAMC,GAAMC,iBAAeD,EAAGH,MAG1BK,MAACA,EAAAC,WAAOA,EAAYC,oBAAAA,EAAAC,QAAqBA,WAASC,EAAUC,OAAAA,EAAAC,MAAQA,EAAOC,KAAAA,GAC/EC,EAAaA,aAAAhB,EAAOE,EAAYC,GAE5Bc,EAAaC,EAAAA,eAAc,IAAMlB,EAAMmB,QAEvCC,EAAkBC,EAAAA,UAAS,IAAM,CACrCJ,EAAWK,MACXtB,EAAMuB,UAAY,yBAA2B,eAC7C,CACE,CAAC,gBAAgBvB,EAAMwB,UAAWxB,EAAMwB,SAItCC,EAAiBJ,EAAAA,UAAwB,KAAO,CACpDK,OAAQ1B,EAAM2B,SAAW,YAAS,aAGvBC,EAAA,CACXb,OACAc,QAASrB,EACTM"}