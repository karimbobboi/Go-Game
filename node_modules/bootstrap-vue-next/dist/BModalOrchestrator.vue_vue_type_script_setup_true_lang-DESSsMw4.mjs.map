{"version":3,"file":"BModalOrchestrator.vue_vue_type_script_setup_true_lang-DESSsMw4.mjs","sources":["../src/composables/useTransitions.ts","../src/components/BModal/BModal.vue","../src/components/BModal/BModalOrchestrator.vue"],"sourcesContent":["import {computed, type MaybeRefOrGetter, toValue} from 'vue'\n\nexport const useFadeTransition = (noFade: MaybeRefOrGetter<boolean>) =>\n  computed(() => {\n    const NO_FADE_PROPS = {\n      name: '',\n      enterActiveClass: '',\n      enterToClass: '',\n      leaveActiveClass: '',\n      leaveToClass: 'showing',\n      enterFromClass: 'showing',\n      leaveFromClass: '',\n      css: true,\n    }\n    const FADE_PROPS = {\n      ...NO_FADE_PROPS,\n      name: 'fade',\n      enterActiveClass: 'fade showing',\n      leaveActiveClass: 'fade showing',\n    }\n    return toValue(noFade) ? NO_FADE_PROPS : FADE_PROPS\n  })\n","<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <Transition\n      v-bind=\"{...fadeTransitionProps, ...props.transProps, enterToClass: 'show'}\"\n      :appear=\"modelValue\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterEnter\"\n      @leave=\"onLeave\"\n      @after-leave=\"onAfterLeave\"\n    >\n      <div\n        v-show=\"modelValue\"\n        :id=\"computedId\"\n        ref=\"element\"\n        class=\"modal\"\n        :class=\"modalClasses\"\n        role=\"dialog\"\n        :aria-labelledby=\"!props.hideHeader ? `${computedId}-label` : undefined\"\n        :aria-describedby=\"`${computedId}-body`\"\n        tabindex=\"-1\"\n        v-bind=\"$attrs\"\n        :style=\"computedZIndex\"\n      >\n        <div class=\"modal-dialog\" :class=\"modalDialogClasses\">\n          <div v-if=\"lazyShowing\" class=\"modal-content\" :class=\"props.contentClass\">\n            <div v-if=\"!props.hideHeader\" class=\"modal-header\" :class=\"headerClasses\">\n              <slot name=\"header\" v-bind=\"sharedSlots\">\n                <component\n                  :is=\"props.titleTag\"\n                  :id=\"`${computedId}-label`\"\n                  class=\"modal-title\"\n                  :class=\"titleClasses\"\n                >\n                  <slot name=\"title\" v-bind=\"sharedSlots\">\n                    {{ props.title }}\n                  </slot>\n                </component>\n                <template v-if=\"!props.hideHeaderClose\">\n                  <BButton\n                    v-if=\"hasHeaderCloseSlot\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hideFn('close')\"\n                  >\n                    <slot name=\"header-close\" />\n                  </BButton>\n                  <BCloseButton\n                    v-else\n                    :aria-label=\"props.headerCloseLabel\"\n                    v-bind=\"headerCloseAttrs\"\n                    @click=\"hideFn('close')\"\n                  />\n                </template>\n              </slot>\n            </div>\n            <div\n              :id=\"`${computedId}-body`\"\n              class=\"modal-body\"\n              :class=\"bodyClasses\"\n              v-bind=\"props.bodyAttrs\"\n            >\n              <slot v-bind=\"sharedSlots\">\n                {{ props.body }}\n              </slot>\n            </div>\n            <div v-if=\"!props.hideFooter\" class=\"modal-footer\" :class=\"footerClasses\">\n              <slot name=\"footer\" v-bind=\"sharedSlots\">\n                <slot name=\"cancel\" v-bind=\"sharedSlots\">\n                  <BButton\n                    v-if=\"!props.okOnly\"\n                    ref=\"cancelButton\"\n                    :disabled=\"disableCancel\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.cancelVariant\"\n                    @click=\"hideFn('cancel')\"\n                  >\n                    {{ props.cancelTitle }}\n                  </BButton>\n                </slot>\n                <slot name=\"ok\" v-bind=\"sharedSlots\">\n                  <BButton\n                    ref=\"okButton\"\n                    :disabled=\"disableOk\"\n                    :size=\"props.buttonSize\"\n                    :variant=\"props.okVariant\"\n                    @click=\"hideFn('ok')\"\n                  >\n                    {{ props.okTitle }}\n                  </BButton>\n                </slot>\n              </slot>\n            </div>\n          </div>\n        </div>\n        <slot v-if=\"!props.hideBackdrop\" name=\"backdrop\" v-bind=\"sharedSlots\">\n          <div class=\"modal-backdrop fade show\" @click=\"hideFn('backdrop')\" />\n        </slot>\n        <div\n          v-if=\"needsFallback\"\n          ref=\"fallbackFocusElement\"\n          :class=\"fallbackClassSelector\"\n          tabindex=\"0\"\n          style=\"width: 0; height: 0; overflow: hidden\"\n        />\n      </div>\n    </Transition>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {onKeyStroke, useEventListener, useFocus} from '@vueuse/core'\nimport {useActivatedFocusTrap} from '../../composables/useActivatedFocusTrap'\nimport {computed, type CSSProperties, ref, watch} from 'vue'\nimport type {BModalProps} from '../../types/ComponentProps'\nimport {BvTriggerableEvent} from '../../utils'\nimport BButton from '../BButton/BButton.vue'\nimport BCloseButton from '../BButton/BCloseButton.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useFadeTransition} from '../../composables/useTransitions'\nimport {useSafeScrollLock} from '../../composables/useSafeScrollLock'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useModalManager} from '../../composables/useModalManager'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\n// aria\n// autofocus\n// close on escape when autofocus\n\n// Note, attempt to return focus to item that openned the modal after close\n// Implement auto focus props like autoFocusButton\n\nconst _props = withDefaults(defineProps<Omit<BModalProps, 'modelValue'>>(), {\n  autofocus: true,\n  autofocusButton: undefined,\n  body: undefined,\n  bodyBgVariant: null,\n  bodyAttrs: undefined,\n  bodyClass: null,\n  bodyScrolling: false,\n  bodyTextVariant: null,\n  bodyVariant: null,\n  busy: false,\n  buttonSize: 'md',\n  cancelDisabled: false,\n  cancelTitle: 'Cancel',\n  cancelVariant: 'secondary',\n  centered: false,\n  contentClass: undefined,\n  dialogClass: undefined,\n  footerBgVariant: null,\n  footerBorderVariant: null,\n  footerClass: undefined,\n  footerTextVariant: null,\n  footerVariant: null,\n  fullscreen: false,\n  headerBgVariant: null,\n  headerBorderVariant: null,\n  headerClass: undefined,\n  headerCloseClass: undefined,\n  headerCloseLabel: 'Close',\n  headerCloseVariant: 'secondary',\n  headerTextVariant: null,\n  headerVariant: null,\n  hideBackdrop: false,\n  hideFooter: false,\n  hideHeader: false,\n  hideHeaderClose: false,\n  id: undefined,\n  lazy: false,\n  modalClass: undefined,\n  noCloseOnBackdrop: false,\n  noCloseOnEsc: false,\n  noFade: false,\n  noTrap: false,\n  okDisabled: false,\n  okOnly: false,\n  okTitle: 'OK',\n  okVariant: 'primary',\n  scrollable: false,\n  size: 'md',\n  teleportDisabled: false,\n  teleportTo: 'body',\n  title: undefined,\n  titleClass: undefined,\n  titleSrOnly: false,\n  titleTag: 'h5',\n  transProps: undefined,\n})\nconst props = useDefaults(_props, 'BModal')\n\nconst emit = defineEmits<{\n  'backdrop': [value: BvTriggerableEvent]\n  'cancel': [value: BvTriggerableEvent]\n  'close': [value: BvTriggerableEvent]\n  'esc': [value: BvTriggerableEvent]\n  'hidden': [value: BvTriggerableEvent]\n  'hide': [value: BvTriggerableEvent]\n  'hide-prevented': []\n  'ok': [value: BvTriggerableEvent]\n  'show': [value: BvTriggerableEvent]\n  'show-prevented': []\n  'shown': [value: BvTriggerableEvent]\n}>()\n\ntype SharedSlotsData = {\n  cancel: () => void\n  close: () => void\n  hide: (trigger?: string) => void\n  ok: () => void\n  active: boolean\n  visible: boolean\n}\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'backdrop'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'cancel'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'footer'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'header-close'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'ok'?: (props: SharedSlotsData) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'title'?: (props: SharedSlotsData) => any\n}>()\n\nconst computedId = useId(() => props.id, 'modal')\n// Note: passive: true will sync an internal ref... This is required for useModalManager to exit,\n// Since the modelValue that's passed from that composable is not reactive, this internal ref _is_ and thus it will trigger closing the modal\nconst modelValue = defineModel<Exclude<BModalProps['modelValue'], undefined>>({default: false})\n\nconst element = ref<HTMLElement | null>(null)\nconst fallbackFocusElement = ref<HTMLElement | null>(null)\nconst okButton = ref<HTMLElement | null>(null)\nconst cancelButton = ref<HTMLElement | null>(null)\nconst closeButton = ref<HTMLElement | null>(null)\nconst isActive = ref(false)\nconst lazyLoadCompleted = ref(false)\n\nconst fallbackClassSelector = 'modal-fallback-focus'\nconst {needsFallback} = useActivatedFocusTrap({\n  element,\n  isActive,\n  noTrap: () => props.noTrap,\n  fallbackFocus: {\n    ref: fallbackFocusElement,\n    classSelector: fallbackClassSelector,\n  },\n})\n\nconst fadeTransitionProps = useFadeTransition(true)\n\nonKeyStroke(\n  'Escape',\n  () => {\n    hideFn('esc')\n  },\n  {target: element}\n)\nuseSafeScrollLock(modelValue, () => props.bodyScrolling)\nconst {focused: modalFocus} = useFocus(element, {\n  initialValue: modelValue.value && props.autofocusButton === undefined && props.autofocus === true,\n})\nconst {focused: okButtonFocus} = useFocus(okButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'ok' && props.autofocus === true,\n})\nconst {focused: cancelButtonFocus} = useFocus(cancelButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'cancel' && props.autofocus === true,\n})\nconst {focused: closeButtonFocus} = useFocus(closeButton, {\n  initialValue: modelValue.value && props.autofocusButton === 'close' && props.autofocus === true,\n})\n\nconst modalClasses = computed(() => [\n  props.modalClass,\n  {\n    fade: !props.noFade,\n    show: isActive.value,\n  },\n])\n\nconst lazyShowing = computed(\n  () =>\n    props.lazy === false ||\n    (props.lazy === true && lazyLoadCompleted.value === true) ||\n    (props.lazy === true && modelValue.value === true)\n)\n\nconst hasHeaderCloseSlot = computed(() => !isEmptySlot(slots['header-close']))\n\nconst modalDialogClasses = computed(() => [\n  props.dialogClass,\n  {\n    'modal-fullscreen': props.fullscreen === true,\n    [`modal-fullscreen-${props.fullscreen}-down`]: typeof props.fullscreen === 'string',\n    [`modal-${props.size}`]: props.size !== 'md',\n    'modal-dialog-centered': props.centered,\n    'modal-dialog-scrollable': props.scrollable,\n  },\n])\n\nconst bodyColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.bodyBgVariant,\n  textVariant: props.bodyTextVariant,\n  variant: props.bodyVariant,\n}))\nconst bodyClasses = computed(() => [props.bodyClass, bodyColorClasses.value])\n\nconst headerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.headerBgVariant,\n  textVariant: props.headerTextVariant,\n  variant: props.headerVariant,\n  borderVariant: props.headerBorderVariant,\n}))\nconst headerClasses = computed(() => [props.headerClass, headerColorClasses.value])\n\nconst headerCloseAttrs = computed(() => ({\n  variant: hasHeaderCloseSlot.value ? props.headerCloseVariant : undefined,\n  class: props.headerCloseClass,\n}))\n\nconst footerColorClasses = useColorVariantClasses(() => ({\n  bgVariant: props.footerBgVariant,\n  textVariant: props.footerTextVariant,\n  variant: props.footerVariant,\n  borderVariant: props.footerBorderVariant,\n}))\nconst footerClasses = computed(() => [props.footerClass, footerColorClasses.value])\n\nconst titleClasses = computed(() => [\n  props.titleClass,\n  {\n    ['visually-hidden']: props.titleSrOnly,\n  },\n])\nconst disableCancel = computed(() => props.cancelDisabled || props.busy)\nconst disableOk = computed(() => props.okDisabled || props.busy)\n\nconst buildTriggerableEvent = (\n  type: string,\n  opts: Readonly<Partial<BvTriggerableEvent>> = {}\n): BvTriggerableEvent =>\n  new BvTriggerableEvent(type, {\n    cancelable: false,\n    target: element.value || null,\n    relatedTarget: null,\n    trigger: null,\n    ...opts,\n    componentId: computedId.value,\n  })\n\nwatch(modelValue, (newValue, oldValue) => {\n  if (newValue === oldValue) return\n  if (newValue === true) {\n    showFn()\n  } else {\n    hideFn()\n  }\n})\n\nconst hideFn = (trigger = '') => {\n  if (\n    (trigger === 'backdrop' && props.noCloseOnBackdrop) ||\n    (trigger === 'esc' && props.noCloseOnEsc)\n  ) {\n    emit('hide-prevented')\n    return\n  }\n\n  const event = buildTriggerableEvent('hide', {cancelable: trigger !== '', trigger})\n\n  if (trigger === 'ok') {\n    emit(trigger, event)\n  }\n  if (trigger === 'cancel') {\n    emit(trigger, event)\n  }\n  if (trigger === 'close') {\n    emit(trigger, event)\n  }\n  if (trigger === 'backdrop') {\n    emit(trigger, event)\n  }\n  if (trigger === 'esc') {\n    emit(trigger, event)\n  }\n  emit('hide', event)\n\n  if (event.defaultPrevented) {\n    emit('hide-prevented')\n    if (!modelValue.value) modelValue.value = true\n    return\n  }\n  if (modelValue.value) modelValue.value = false\n}\n\n// TODO: If a show is prevented, it will briefly show the animation. This is a bug\n// I'm not sure how to wait for the event to be determined. Before showing\nconst showFn = () => {\n  if (isActive.value) return\n\n  const event = buildTriggerableEvent('show', {cancelable: true})\n  emit('show', event)\n  if (event.defaultPrevented) {\n    if (modelValue.value) modelValue.value = false\n    emit('show-prevented')\n    return\n  }\n  if (!modelValue.value) modelValue.value = true\n}\n\nconst pickFocusItem = () => {\n  if (props.autofocus === false) return\n  props.autofocusButton === 'ok'\n    ? (okButtonFocus.value = true)\n    : props.autofocusButton === 'close'\n      ? (closeButtonFocus.value = true)\n      : props.autofocusButton === 'cancel'\n        ? (cancelButtonFocus.value = true)\n        : (modalFocus.value = true)\n}\n\nconst onBeforeEnter = () => {\n  showFn()\n}\nconst onAfterEnter = () => {\n  isActive.value = true\n  pickFocusItem()\n  emit('shown', buildTriggerableEvent('shown'))\n  if (props.lazy === true) lazyLoadCompleted.value = true\n}\nconst isLeaving = ref(false)\nconst onLeave = () => {\n  isActive.value = false\n  isLeaving.value = true\n}\nconst onAfterLeave = () => {\n  emit('hidden', buildTriggerableEvent('hidden'))\n  if (props.lazy === true) lazyLoadCompleted.value = false\n  isLeaving.value = false\n}\n\nconst {activePosition, activeModalCount, stackWithoutSelf} = useModalManager(\n  isActive,\n  modelValue.value\n)\n\nwatch(stackWithoutSelf, (newValue, oldValue) => {\n  if (newValue.length > oldValue.length && isActive.value === true && props.noStacking === true)\n    hideFn()\n})\n\nconst defaultModalDialogZIndex = 1056\nconst computedZIndex = computed<CSSProperties>(() => ({\n  // Make sure that newly opened modals have a higher z-index than currently active ones.\n  // All active modals have a z-index of ('defaultZIndex' - 'stackSize' - 'positionInStack').\n  //\n  // This means inactive modals will already be higher than active ones when opened.\n  'z-index':\n    isActive.value || isLeaving.value\n      ? // Just for reference there is a single frame in which the modal is not active but still has a higher z-index than the active ones due to _when_ it calculates its position. It's a small visual effect\n        defaultModalDialogZIndex - ((activeModalCount?.value ?? 0) - (activePosition?.value ?? 0))\n      : defaultModalDialogZIndex,\n}))\n\nuseEventListener(element, 'bv-toggle', () => {\n  modelValue.value ? hideFn() : showFn()\n})\n\nconst sharedSlots = computed<SharedSlotsData>(() => ({\n  cancel: () => {\n    hideFn('cancel')\n  },\n  close: () => {\n    hideFn('close')\n  },\n  hide: hideFn,\n  ok: () => {\n    hideFn('ok')\n  },\n  active: isActive.value,\n  visible: modelValue.value,\n}))\n\ndefineExpose({\n  hide: hideFn,\n  id: computedId,\n  show: showFn,\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.modal {\n  display: block;\n}\n\n.modal-dialog {\n  z-index: 1051;\n}\n</style>\n","<template>\n  <ConditionalTeleport :to=\"props.teleportTo\" :disabled=\"props.teleportDisabled\">\n    <div id=\"__BVID__modal-container\" v-bind=\"$attrs\">\n      <component\n        :is=\"modal.component ?? BModal\"\n        v-for=\"[self, modal] in tools.modals?.value\"\n        :key=\"self\"\n        v-bind=\"modal.props\"\n        v-model=\"modal.props._modelValue\"\n        :teleport-disabled=\"true\"\n        @update:model-value=\"tools.leave?.(self)\"\n        @hide=\"\n          (e: BvTriggerableEvent) => {\n            // These following are confirm rules, otherwise we always resolve true\n            if (modal.props._isConfirm === true) {\n              if (e.trigger === 'ok') {\n                modal.props._promise.resolve(true)\n                return\n              }\n              if (e.trigger === 'cancel') {\n                modal.props._promise.resolve(false)\n                return\n              }\n              modal.props._promise.resolve(null)\n            }\n            modal.props._promise.resolve(true)\n          }\n        \"\n        @hidden=\"tools.remove?.(self)\"\n      />\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BvTriggerableEvent} from '../../utils'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BModalOrchestratorProps} from '../../types/ComponentProps'\nimport BModal from './BModal.vue'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\nimport {useModalController} from '../../composables/useModalController'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<BModalOrchestratorProps>(), {\n  teleportDisabled: false,\n  teleportTo: 'body',\n})\nconst props = useDefaults(_props, 'BModalOrchestrator')\n\nconst tools = useModalController()\n\ndefineExpose({\n  ...tools,\n})\n</script>\n"],"names":["_useSlots","_useModel"],"mappings":"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"}