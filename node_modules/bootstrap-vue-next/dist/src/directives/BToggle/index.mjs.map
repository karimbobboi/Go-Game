{"version":3,"file":"index.mjs","sources":["../../../../src/directives/BToggle/index.ts"],"sourcesContent":["import {RX_HASH, RX_HASH_ID, RX_SPACE_SPLIT} from '../../utils/constants'\nimport type {Directive, DirectiveBinding} from 'vue'\n\nconst getTargets = (\n  binding: DirectiveBinding<string | readonly string[] | undefined>,\n  el: Readonly<HTMLElement>\n) => {\n  const {modifiers, arg, value} = binding\n  // Any modifiers are considered target Ids\n  const targets = Object.keys(modifiers || {})\n\n  // If value is a string, split out individual targets (if space delimited)\n  const localValue = typeof value === 'string' ? value.split(RX_SPACE_SPLIT) : value\n\n  // Support target Id as link href (`href=\"#id\"`)\n  if (el.tagName.toLowerCase() === 'a') {\n    const href = el.getAttribute('href') || ''\n    if (RX_HASH_ID.test(href)) {\n      targets.push(href.replace(RX_HASH, ''))\n    }\n  }\n\n  // Add Id from `arg` (if provided), and support value\n  // as a single string Id or an array of string Ids\n  // If `value` is not an array or string, then it gets filtered out\n  Array.prototype.concat\n    .apply([], [arg, localValue])\n    .forEach((t) => typeof t === 'string' && targets.push(t))\n\n  // Return only unique and truthy target Ids\n  return targets.filter((t, index, arr) => t && arr.indexOf(t) === index)\n}\n\nconst toggle = (targetIds: readonly string[], el: Readonly<HTMLElement>) => {\n  targetIds.forEach((targetId) => {\n    const target = document.getElementById(targetId)\n\n    if (target !== null) {\n      target.dispatchEvent(new Event('bv-toggle'))\n    }\n  })\n  setTimeout(() => checkVisibility(targetIds, el), 50)\n}\n\nconst checkVisibility = (targetIds: readonly string[], el: Readonly<HTMLElement>) => {\n  let visible = false\n  targetIds.forEach((targetId) => {\n    const target = document.getElementById(targetId)\n\n    if (target?.classList.contains('show')) {\n      visible = true\n    }\n    if (target?.classList.contains('closing')) {\n      visible = false\n    }\n  })\n  el.setAttribute('aria-expanded', visible ? 'true' : 'false')\n  el.classList.remove(visible ? 'collapsed' : 'not-collapsed')\n  el.classList.add(visible ? 'not-collapsed' : 'collapsed')\n}\n\nconst handleUpdate = (\n  el: WithToggle,\n  binding: DirectiveBinding<string | readonly string[] | undefined>\n) => {\n  // Determine targets\n  const targets = getTargets(binding, el)\n  if (targets.length === 0) return\n\n  // Set up click handler\n  if (el.__toggle) {\n    setTimeout(() => {\n      el.removeEventListener('click', el.__toggle)\n      el.__toggle = () => toggle(targets, el)\n      el.addEventListener('click', el.__toggle)\n    }, 0)\n  } else {\n    el.__toggle = () => toggle(targets, el)\n    el.addEventListener('click', el.__toggle)\n  }\n\n  // Update attributes\n  el.setAttribute('aria-controls', targets.join(' '))\n  checkVisibility(targets, el)\n}\n\nexport interface WithToggle extends HTMLElement {\n  __toggle: () => void\n}\n\nexport const vBToggle: Directive<WithToggle> = {\n  mounted: handleUpdate,\n  updated: handleUpdate,\n  unmounted(el: WithToggle): void {\n    el.removeEventListener('click', el.__toggle)\n    el.removeAttribute('aria-controls')\n    el.removeAttribute('aria-expanded')\n  },\n}\n"],"names":[],"mappings":";AAGA,MAAM,aAAa,CACjB,SACA,OACG;AACH,QAAM,EAAC,WAAW,KAAK,MAAA,IAAS;AAEhC,QAAM,UAAU,OAAO,KAAK,aAAa,CAAE,CAAA;AAG3C,QAAM,aAAa,OAAO,UAAU,WAAW,MAAM,MAAM,cAAc,IAAI;AAG7E,MAAI,GAAG,QAAQ,YAAY,MAAM,KAAK;AACpC,UAAM,OAAO,GAAG,aAAa,MAAM,KAAK;AACpC,QAAA,WAAW,KAAK,IAAI,GAAG;AACzB,cAAQ,KAAK,KAAK,QAAQ,SAAS,EAAE,CAAC;AAAA,IACxC;AAAA,EACF;AAKA,QAAM,UAAU,OACb,MAAM,CAAA,GAAI,CAAC,KAAK,UAAU,CAAC,EAC3B,QAAQ,CAAC,MAAM,OAAO,MAAM,YAAY,QAAQ,KAAK,CAAC,CAAC;AAGnD,SAAA,QAAQ,OAAO,CAAC,GAAG,OAAO,QAAQ,KAAK,IAAI,QAAQ,CAAC,MAAM,KAAK;AACxE;AAEA,MAAM,SAAS,CAAC,WAA8B,OAA8B;AAChE,YAAA,QAAQ,CAAC,aAAa;AACxB,UAAA,SAAS,SAAS,eAAe,QAAQ;AAE/C,QAAI,WAAW,MAAM;AACnB,aAAO,cAAc,IAAI,MAAM,WAAW,CAAC;AAAA,IAC7C;AAAA,EAAA,CACD;AACD,aAAW,MAAM,gBAAgB,WAAW,EAAE,GAAG,EAAE;AACrD;AAEA,MAAM,kBAAkB,CAAC,WAA8B,OAA8B;AACnF,MAAI,UAAU;AACJ,YAAA,QAAQ,CAAC,aAAa;AACxB,UAAA,SAAS,SAAS,eAAe,QAAQ;AAE/C,QAAI,iCAAQ,UAAU,SAAS,SAAS;AAC5B,gBAAA;AAAA,IACZ;AACA,QAAI,iCAAQ,UAAU,SAAS,YAAY;AAC/B,gBAAA;AAAA,IACZ;AAAA,EAAA,CACD;AACD,KAAG,aAAa,iBAAiB,UAAU,SAAS,OAAO;AAC3D,KAAG,UAAU,OAAO,UAAU,cAAc,eAAe;AAC3D,KAAG,UAAU,IAAI,UAAU,kBAAkB,WAAW;AAC1D;AAEA,MAAM,eAAe,CACnB,IACA,YACG;AAEG,QAAA,UAAU,WAAW,SAAS,EAAE;AAClC,MAAA,QAAQ,WAAW,EAAG;AAG1B,MAAI,GAAG,UAAU;AACf,eAAW,MAAM;AACZ,SAAA,oBAAoB,SAAS,GAAG,QAAQ;AAC3C,SAAG,WAAW,MAAM,OAAO,SAAS,EAAE;AACnC,SAAA,iBAAiB,SAAS,GAAG,QAAQ;AAAA,OACvC,CAAC;AAAA,EAAA,OACC;AACL,OAAG,WAAW,MAAM,OAAO,SAAS,EAAE;AACnC,OAAA,iBAAiB,SAAS,GAAG,QAAQ;AAAA,EAC1C;AAGA,KAAG,aAAa,iBAAiB,QAAQ,KAAK,GAAG,CAAC;AAClD,kBAAgB,SAAS,EAAE;AAC7B;AAMO,MAAM,WAAkC;AAAA,EAC7C,SAAS;AAAA,EACT,SAAS;AAAA,EACT,UAAU,IAAsB;AAC3B,OAAA,oBAAoB,SAAS,GAAG,QAAQ;AAC3C,OAAG,gBAAgB,eAAe;AAClC,OAAG,gBAAgB,eAAe;AAAA,EACpC;AACF;"}