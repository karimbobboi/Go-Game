import { BPlaceholderTableProps } from '../../types/ComponentProps';
declare function __VLS_template(): {
    slots: Readonly<{
        default?: (props: Record<string, never>) => any;
        tfoot?: (props: Record<string, never>) => any;
        thead?: (props: Record<string, never>) => any;
    }> & {
        default?: (props: Record<string, never>) => any;
        tfoot?: (props: Record<string, never>) => any;
        thead?: (props: Record<string, never>) => any;
    };
    refs: {};
    attrs: Partial<{}>;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<BPlaceholderTableProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<BPlaceholderTableProps> & Readonly<{}>, {
    size: import('../..').PlaceholderSize;
    variant: import('../..').ColorVariant | null;
    rows: import('../../types/CommonTypes').Numberish;
    footerVariant: import('../..').ColorVariant | null;
    headerVariant: import('../..').ColorVariant | null;
    hideHeader: boolean;
    animation: import('../..').PlaceholderAnimation;
    columns: import('../../types/CommonTypes').Numberish;
    footerAnimation: import('../..').PlaceholderAnimation;
    footerSize: import('../..').PlaceholderSize;
    headerAnimation: import('../..').PlaceholderAnimation;
    headerSize: import('../..').PlaceholderSize;
    cellWidth: import('../../types/CommonTypes').Numberish;
    footerCellWidth: import('../../types/CommonTypes').Numberish;
    footerColumns: import('../../types/CommonTypes').Numberish;
    headerCellWidth: import('../../types/CommonTypes').Numberish;
    headerColumns: import('../../types/CommonTypes').Numberish;
    showFooter: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
