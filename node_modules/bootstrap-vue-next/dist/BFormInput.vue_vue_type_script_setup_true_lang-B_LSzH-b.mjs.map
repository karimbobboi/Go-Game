{"version":3,"file":"BFormInput.vue_vue_type_script_setup_true_lang-B_LSzH-b.mjs","sources":["../src/components/BFormInput/BFormInput.vue"],"sourcesContent":["<template>\n  <input\n    :id=\"computedId\"\n    ref=\"input\"\n    :value=\"modelValue\"\n    :class=\"computedClasses\"\n    :name=\"props.name || undefined\"\n    :form=\"props.form || undefined\"\n    :type=\"props.type\"\n    :disabled=\"props.disabled\"\n    :placeholder=\"props.placeholder\"\n    :required=\"props.required || undefined\"\n    :autocomplete=\"props.autocomplete || undefined\"\n    :readonly=\"props.readonly || props.plaintext\"\n    :min=\"props.min\"\n    :max=\"props.max\"\n    :step=\"props.step\"\n    :list=\"props.type !== 'password' ? props.list : undefined\"\n    :aria-required=\"props.required || undefined\"\n    :aria-invalid=\"computedAriaInvalid\"\n    @input=\"onInput($event)\"\n    @change=\"onChange($event)\"\n    @blur=\"onBlur($event)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, ref} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {normalizeInput} from '../../utils/normalizeInput'\nimport type {BFormInputProps} from '../../types/ComponentProps'\nimport {useFormInput} from '../../composables/useFormInput'\nimport {useStateClass} from '../../composables/useStateClass'\n\nconst _props = withDefaults(defineProps<Omit<BFormInputProps, 'modelValue'>>(), {\n  max: undefined,\n  min: undefined,\n  step: undefined,\n  type: 'text',\n  // CommonInputProps\n  ariaInvalid: undefined,\n  autocomplete: undefined,\n  autofocus: false,\n  debounce: 0,\n  debounceMaxWait: NaN,\n  disabled: false,\n  form: undefined,\n  formatter: undefined,\n  id: undefined,\n  lazyFormatter: false,\n  list: undefined,\n  modelValue: '',\n  name: undefined,\n  placeholder: undefined,\n  plaintext: false,\n  readonly: false,\n  required: false,\n  size: undefined,\n  state: null,\n  // End CommonInputProps\n})\nconst props = useDefaults(_props, 'BFormInput')\n\nconst [modelValue, modelModifiers] = defineModel<\n  Exclude<BFormInputProps['modelValue'], undefined>,\n  'trim' | 'lazy' | 'number'\n>({\n  default: '',\n  set: (v) => normalizeInput(v, modelModifiers),\n})\n\nconst {input, computedId, computedAriaInvalid, onInput, onChange, onBlur, focus, blur} =\n  useFormInput(props, modelValue, modelModifiers)\n\nconst stateClass = useStateClass(() => props.state)\n\nconst isHighlighted = ref(false)\n\nconst computedClasses = computed(() => {\n  const isRange = props.type === 'range'\n  const isColor = props.type === 'color'\n  return [\n    stateClass.value,\n    {\n      'form-control-highlighted': isHighlighted.value,\n      'form-range': isRange,\n      'form-control': isColor || (!props.plaintext && !isRange),\n      'form-control-color': isColor,\n      'form-control-plaintext': props.plaintext && !isRange && !isColor,\n      [`form-control-${props.size}`]: !!props.size,\n    },\n  ]\n})\n\ndefineExpose({\n  blur,\n  element: input,\n  focus,\n})\n\n// const highlight = () => {\n//   if (isHighlighted.value === true) return\n//   isHighlighted.value = true\n//   setTimeout(() => {\n//     isHighlighted.value = false\n//   }, 2000)\n// }\n</script>\n"],"names":["_useModel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,UAAM,SAAS;AA2BT,UAAA,QAAQ,YAAY,QAAQ,YAAY;AAE9C,UAAM,CAAC,YAAY,cAAc,IAAIA,gCAGnC;AAAA,MAEA,KAAK,CAAC,MAAM,eAAe,GAAG,cAAc;AAAA,IAAA,CAC7C;AAED,UAAM,EAAC,OAAO,YAAY,qBAAqB,SAAS,UAAU,QAAQ,OAAO,KAAI,IACnF,aAAa,OAAO,YAAY,cAAc;AAEhD,UAAM,aAAa,cAAc,MAAM,MAAM,KAAK;AAE5C,UAAA,gBAAgB,IAAI,KAAK;AAEzB,UAAA,kBAAkB,SAAS,MAAM;AAC/B,YAAA,UAAU,MAAM,SAAS;AACzB,YAAA,UAAU,MAAM,SAAS;AACxB,aAAA;AAAA,QACL,WAAW;AAAA,QACX;AAAA,UACE,4BAA4B,cAAc;AAAA,UAC1C,cAAc;AAAA,UACd,gBAAgB,WAAY,CAAC,MAAM,aAAa,CAAC;AAAA,UACjD,sBAAsB;AAAA,UACtB,0BAA0B,MAAM,aAAa,CAAC,WAAW,CAAC;AAAA,UAC1D,CAAC,gBAAgB,MAAM,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM;AAAA,QAC1C;AAAA,MAAA;AAAA,IACF,CACD;AAEY,aAAA;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}