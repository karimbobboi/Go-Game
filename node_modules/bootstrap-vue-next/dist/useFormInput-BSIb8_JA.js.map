{"version":3,"file":"useFormInput-BSIb8_JA.js","sources":["../src/utils/normalizeInput.ts","../src/composables/useFormInput.ts"],"sourcesContent":["import type {Numberish} from '../types/CommonTypes'\n\nexport const normalizeInput = (\n  v: Numberish | null,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  if (v === null) return\n  let update = v\n  if (modelModifiers.trim) update = update.toString().trim()\n  if (modelModifiers.number && typeof update === 'string' && update !== '') {\n    const parsed = Number.parseFloat(update)\n    update = Number.isNaN(parsed) ? update : parsed\n  }\n  return update\n}\n","import type {Numberish} from '../types/CommonTypes'\nimport {nextTick, onActivated, onMounted, ref, type Ref} from 'vue'\nimport {useAriaInvalid} from './useAriaInvalid'\nimport {useId} from './useId'\nimport {useDebounceFn, useFocus, useToNumber} from '@vueuse/core'\nimport type {CommonInputProps} from '../types/FormCommonInputProps'\n\nexport const useFormInput = (\n  props: Readonly<CommonInputProps>,\n  modelValue: Ref<Numberish | null>,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  const input = ref<HTMLInputElement | null>(null)\n\n  const computedId = useId(() => props.id, 'input')\n  const debounceNumber = useToNumber(() => props.debounce ?? 0)\n  const debounceMaxWaitNumber = useToNumber(() => props.debounceMaxWait ?? NaN)\n\n  const internalUpdateModelValue = useDebounceFn(\n    (value: Numberish) => {\n      modelValue.value = value\n    },\n    () => (modelModifiers.lazy === true ? 0 : debounceNumber.value),\n    {maxWait: () => (modelModifiers.lazy === true ? NaN : debounceMaxWaitNumber.value)}\n  )\n\n  const updateModelValue = (value: Numberish, force = false) => {\n    if (modelModifiers.lazy === true && force === false) return\n    internalUpdateModelValue(value)\n  }\n\n  const {focused} = useFocus(input, {\n    initialValue: props.autofocus,\n  })\n\n  const _formatValue = (value: string, evt: Readonly<Event>, force = false) => {\n    if (props.formatter !== undefined && (!props.lazyFormatter || force)) {\n      return props.formatter(value, evt)\n    }\n    return value\n  }\n  onMounted(() => {\n    if (input.value) {\n      input.value.value = modelValue.value?.toString() ?? ''\n    }\n  })\n\n  onActivated(() => {\n    nextTick(() => {\n      if (props.autofocus) {\n        focused.value = true\n      }\n    })\n  })\n\n  const computedAriaInvalid = useAriaInvalid(\n    () => props.ariaInvalid,\n    () => props.state\n  )\n\n  const onInput = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n\n    updateModelValue(nextModel)\n  }\n\n  const onChange = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true)\n    }\n  }\n\n  const onBlur = (evt: Readonly<FocusEvent>) => {\n    if (!modelModifiers.lazy && !props.lazyFormatter) return\n\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt, true)\n\n    const nextModel = formattedValue\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true)\n    }\n  }\n\n  const focus = () => {\n    if (!props.disabled) {\n      focused.value = true\n    }\n  }\n\n  const blur = () => {\n    if (!props.disabled) {\n      focused.value = false\n    }\n  }\n\n  return {\n    input,\n    computedId,\n    computedAriaInvalid,\n    onInput,\n    onChange,\n    onBlur,\n    focus,\n    blur,\n  }\n}\n"],"names":["v","modelModifiers","update","trim","toString","number","parsed","Number","parseFloat","isNaN","props","modelValue","input","ref","computedId","useId","id","debounceNumber","useToNumber","debounce","debounceMaxWaitNumber","debounceMaxWait","NaN","internalUpdateModelValue","useDebounceFn","value","lazy","maxWait","updateModelValue","force","focused","useFocus","initialValue","autofocus","_formatValue","evt","formatter","lazyFormatter","onMounted","_a","onActivated","nextTick","computedAriaInvalid","useAriaInvalid","ariaInvalid","state","onInput","target","formattedValue","defaultPrevented","preventDefault","onChange","nextModel","onBlur","focus","disabled","blur"],"mappings":"wMAE8B,CAC5BA,EACAC,KAEA,GAAU,OAAND,EAAY,OAChB,IAAIE,EAASF,EAEb,GADIC,EAAeE,OAAMD,EAASA,EAAOE,WAAWD,QAChDF,EAAeI,QAA4B,iBAAXH,GAAkC,KAAXA,EAAe,CAClE,MAAAI,EAASC,OAAOC,WAAWN,GACjCA,EAASK,OAAOE,MAAMH,GAAUJ,EAASI,CAC3C,CACO,OAAAJ,CAAA,uBCNmB,CAC1BQ,EACAC,EACAV,KAEM,MAAAW,EAAQC,MAA6B,MAErCC,EAAaC,EAAAA,OAAM,IAAML,EAAMM,IAAI,SACnCC,EAAiBC,EAAAA,aAAY,IAAMR,EAAMS,UAAY,IACrDC,EAAwBF,EAAAA,aAAY,IAAMR,EAAMW,iBAAmBC,MAEnEC,EAA2BC,EAAAA,eAC9BC,IACCd,EAAWc,MAAQA,CAAA,IAErB,KAA+B,IAAxBxB,EAAeyB,KAAgB,EAAIT,EAAeQ,OACzD,CAACE,QAAS,KAA+B,IAAxB1B,EAAeyB,KAAgBJ,IAAMF,EAAsBK,QAGxEG,EAAmB,CAACH,EAAkBI,GAAQ,MACtB,IAAxB5B,EAAeyB,OAA2B,IAAVG,GACpCN,EAAyBE,EAAK,GAG1BK,QAACA,GAAWC,EAAAA,SAASnB,EAAO,CAChCoB,aAActB,EAAMuB,YAGhBC,EAAe,CAACT,EAAeU,EAAsBN,GAAQ,SACzC,IAApBnB,EAAM0B,WAA6B1B,EAAM2B,gBAAiBR,EAGvDJ,EAFEf,EAAM0B,UAAUX,EAAOU,GAIlCG,EAAAA,WAAU,WACJ1B,EAAMa,QACRb,EAAMa,MAAMA,OAAQ,OAAAc,EAAW5B,EAAAc,gBAAOrB,aAAc,GACtD,IAGFoC,EAAAA,aAAY,KACVC,EAAAA,UAAS,KACH/B,EAAMuB,YACRH,EAAQL,OAAQ,EAClB,GACD,IAGH,MAAMiB,EAAsBC,EAAAA,gBAC1B,IAAMjC,EAAMkC,cACZ,IAAMlC,EAAMmC,QAsDP,MAAA,CACLjC,QACAE,aACA4B,sBACAI,QAvDeX,IACT,MAAAV,MAACA,GAASU,EAAIY,OACdC,EAAiBd,EAAaT,EAAOU,GAC3C,GAAIA,EAAIc,iBAEN,YADAd,EAAIe,iBAMNtB,EAFkBoB,EAEQ,EA8C1BG,SA3CgBhB,IACV,MAAAV,MAACA,GAASU,EAAIY,OACdC,EAAiBd,EAAaT,EAAOU,GAC3C,GAAIA,EAAIc,iBAEN,YADAd,EAAIe,iBAIN,MAAME,EAAYJ,EACdrC,EAAWc,QAAU2B,GACvBxB,EAAiBoB,GAAgB,EACnC,EAiCAK,OA9BclB,IACd,IAAKlC,EAAeyB,OAAShB,EAAM2B,cAAe,OAE5C,MAAAZ,MAACA,GAASU,EAAIY,OACdC,EAAiBd,EAAaT,EAAOU,GAAK,GAE1CiB,EAAYJ,EACdrC,EAAWc,QAAU2B,GACvBxB,EAAiBoB,GAAgB,EACnC,EAsBAM,MAnBY,KACP5C,EAAM6C,WACTzB,EAAQL,OAAQ,EAClB,EAiBA+B,KAdW,KACN9C,EAAM6C,WACTzB,EAAQL,OAAQ,EAClB,EAWA"}