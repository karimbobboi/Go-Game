{"version":3,"file":"js/app.d2c5bb06.js","mappings":"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","sources":["webpack://go-game/./src/App.vue","webpack://go-game/./src/components/BoardSize.vue","webpack://go-game/./src/components/BoardSize.vue?6ac8","webpack://go-game/./src/components/GoBoard.vue","webpack://go-game/./src/components/Timer.vue","webpack://go-game/./src/components/Timer.vue?1296","webpack://go-game/./src/statics/functions.js","webpack://go-game/./src/components/GoBoard.vue?f00a","webpack://go-game/./src/App.vue?7ccd","webpack://go-game/./src/main.js","webpack://go-game/webpack/bootstrap","webpack://go-game/webpack/runtime/chunk loaded","webpack://go-game/webpack/runtime/define property getters","webpack://go-game/webpack/runtime/global","webpack://go-game/webpack/runtime/hasOwnProperty shorthand","webpack://go-game/webpack/runtime/publicPath","webpack://go-game/webpack/runtime/jsonp chunk loading","webpack://go-game/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <BoardSize v-if=\"notSelected\" @board-selected=\"startGame\" />\n    <GoBoard v-else />\n  </div>\n</template>\n\n<script>\nimport BoardSize from './components/BoardSize.vue';\nimport GoBoard from './components/GoBoard.vue';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      notSelected: true,\n      boardSize: null\n    };\n  },\n  components: {\n    GoBoard,\n    BoardSize\n  },\n  methods: {\n    startGame(config) {\n      this.notSelected = false;\n      window.boardSize = config.size;\n      window.komi = config.komi;\n      window.scoring = config.scoreMethod;\n      window.mainTime = config.mainTime;\n      window.periodTime = config.periodTime;\n      window.periodLength = config.periodLength;\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  background-color: #CCA56D;\n}\n</style>\n","<template>\n  <div id=\"board\" class=\"d-flex justify-content-center align-items-center\" style=\"width: 95vw; height: 95vh;\">\n    <BCard class=\"bg-light\">\n      <h3 class=\"ms-3\">Game configuration</h3>\n      <BCardBody>\n        <BListGroup>\n          <BListGroupItem class=\"d-flex align-items-center\">\n            <label class=\"me-3\" for=\"boardSize\">Select board size: </label>\n            <BFormSelect id=\"boardSize\" v-model=\"selectedSize\" style=\"width: 100px;\">\n              <option v-for=\"size in sizes\" :key=\"size\" :value=\"size\">{{ size }}</option>\n            </BFormSelect>\n          </BListGroupItem>\n          <BListGroupItem>\n            <label class=\"me-3\">Select scoring method:</label>\n            <BFormRadioGroup\n              v-model=\"selectedRule\"\n              :options=\"rules\"\n              button-variant=\"outline-dark\"\n              name=\"radios-btn-outline\"\n              buttons\n            />\n          </BListGroupItem>\n          <BListGroupItem class=\"d-flex align-items-center\">\n            <label class=\"me-3\">Komi: </label>\n            <BFormInput v-model=\"selectedKomi\" max=\"30\" class=\"w-25\" type=\"number\" step=\"0.1\" />\n          </BListGroupItem>\n          <BListGroupItem class=\"d-flex align-items-center\">\n            <label class=\"me-5\">Start time: </label>\n            <BInputGroup class=\"my-2\">\n                <BInput placeholder=\"MM\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedMainMin\" class=\"form-control\"></BInput>\n                <label class=\"mx-2 my-2 fw-bold\">:</label>\n                <BInput placeholder=\"SS\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedMainSec\" class=\"form-control\"></BInput>\n            </BInputGroup>\n          </BListGroupItem>\n          <BListGroupItem class=\"align-items-center\">\n            <label class=\"mb-2 fw-bold\">Byo-yomi</label>\n            <BRow>\n              <BCol>\n                <label :for=\"periodNums\">Number of periods: </label>\n                <BFormInput class=\"my-2\" id=\"periodNums\" v-model=\"selectedPeriodNum\" max=\"50\" type=\"number\" />\n              </BCol>\n              <BCol>\n                <label :for=\"periodLength\">Period length: </label>\n                <BInputGroup class=\"my-2\">\n                  <BInput placeholder=\"MM\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedPeriodMin\" class=\"form-control\"></BInput>\n                  <label class=\"mx-2 my-2 fw-bold\">:</label>\n                  <BInput placeholder=\"SS\" max=\"59\" min=\"0\" type=\"number\" v-model=\"selectedPeriodSec\" class=\"form-control\"></BInput>\n                </BInputGroup>\n              </BCol>\n            </BRow>\n          </BListGroupItem>\n        </BListGroup>\n      </BCardBody>\n      <div class=\"d-grid gap-2\">\n        <BButton variant=\"dark\" class=\"mx-3 mt-2\" block @click=\"selectBoardSize\">Start Game</BButton>\n      </div>\n    </BCard>\n  </div>\n</template>\n  \n  <script>\n  import { BCard, BCardBody, BButton, BCardFooter, BListGroupItem, BListGroup,\n          BDropdown, BDropdownDivider, BDropdownItem, BInputGroup, BInput, BFormInput,\n          BFormGroup, BFormRadioGroup, BFormSelect, BRow, BCol, BFormCheckbox\n   } from 'bootstrap-vue-next';\n  export default {\n    components: {\n      BCard,\n      BCardBody,\n      BCardFooter,\n      BRow,\n      BCol,\n      BListGroupItem,\n      BListGroup,\n      BDropdown,\n      BDropdownDivider,\n      BDropdownItem,\n      BFormGroup,\n      BInputGroup, BInput,\n      BFormInput,\n      BFormRadioGroup,\n      BButton,\n      BFormSelect,\n      BFormCheckbox\n  },\n    data() {\n      return {\n        sizes: [9, 13, 19],\n        rules: [\n          { text: 'Area (Chinese rules)', value: 'Area' },\n          { text: 'Territory (Japanese rules)', value: 'Territory' }\n        ],\n        selectedSize: 9,\n        selectedRule: \"Area\",\n        selected: false,\n        selectedKomi: 7.5,\n        selectedMainMin: \"15\",\n        selectedMainSec: \"00\",\n        selectedPeriodMin: \"01\",\n        selectedPeriodSec: \"00\",\n        selectedPeriodNum: 5,\n        showAlert: false,\n\n        config: {\n          size: this.selectedSize, scoreMethod: this.selectedRule, komi: this.selectedKomi,\n          mainTime: new Date(), periodTime: new Date(), periodLength: this.selectedPeriodNum\n        }\n      };\n    },\n    methods: {\n      selectBoardSize() {\n        if(isNaN(this.selectedKomi) || this.selectedKomi === '' || this.selectedKomi < 0){\n          alert(\"Please enter valid komi\");\n          return;\n        }\n\n        if(isNaN(this.selectedPeriodNum) || this.selectedPeriodNum === '' || this.selectedPeriodNum < 0){\n          alert(\"Please enter valid number of periods\");\n          return;\n        }\n\n        const mainMin = parseInt(this.selectedMainMin);\n        const mainSec = parseInt(this.selectedMainSec);\n        if(isNaN(mainMin) || (mainMin < 0 || mainMin > 59) || isNaN(mainSec) || (mainSec < 0 || mainSec > 59)){\n          alert(\"Please enter valid start time\");\n          return;\n        }\n        const mainTime = new Date();\n        mainTime.setMinutes(mainMin);\n        mainTime.setSeconds(mainSec);\n\n        const periodMin = parseInt(this.selectedPeriodMin);\n        const periodSec = parseInt(this.selectedPeriodSec);\n        if(isNaN(periodMin) || (periodMin < 0 || periodMin > 59) || isNaN(periodSec) || (periodSec < 0 || periodSec > 59)){\n          alert(\"Please enter valid period time\");\n          return;\n        }\n        const periodTime = new Date();\n        periodTime.setMinutes(periodMin);\n        periodTime.setSeconds(periodSec);\n\n        this.selected = true;\n        this.config.size = this.selectedSize;\n        this.config.scoreMethod = this.selectedRule;\n        this.config.komi = this.selectedKomi;\n        this.config.mainTime = mainTime;\n        this.config.periodTime = periodTime;\n        this.config.periodLength = this.selectedPeriodNum;\n        this.$emit('board-selected', this.config);\n      }\n    }\n  };\n</script>\n\n<style>\n#board {\n  background-color: #CCA56D;\n}\n</style>","import { render } from \"./BoardSize.vue?vue&type=template&id=661713ac\"\nimport script from \"./BoardSize.vue?vue&type=script&lang=js\"\nexport * from \"./BoardSize.vue?vue&type=script&lang=js\"\n\nimport \"./BoardSize.vue?vue&type=style&index=0&id=661713ac&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container-fluid d-flex justify-content-center align-items-center\" style=\"width: 93vw; height: 95vh; margin: 0; padding: 0%;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\" id=\"black_section\">\n            <div class=\"row timer_box my-3\" >\n                <Timer :stop=\"bStop\" :isBlack=\"true\" @timerRanOut=\"timerFinish\"/>\n                <div class=\"list-group-item d-flex justify-content-between align-items-center border border-black text-light fw-semibold mt-3 px-2 p-2 rounded\" style=\"background-color: #2d2c2c\">\n                    Prisoners\n                    <BBadge variant=\"light\" class=\"fs-6\" pill style=\"min-width: 40px; text-align: center;\">{{ prisonersCounterB }}</BBadge>\n                </div>\n                <BButtonGroup class=\"my-3 w-100 p-0\" vertical>\n                    <BButton variant=\"primary\" @click=\"toggleNumbered\" class=\"border-bottom-0 border-black fw-semibold\">Toggle numbers</BButton>\n                    <BButton variant=\"primary\" @click=\"undoMove\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'black'\">Undo</BButton>\n                    <BButton variant=\"primary\" @click=\"estimateScore\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'white'\">Estimate score</BButton>\n                    <BButton variant=\"primary\" @click=\"ladderEval\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'white'\">Evaluate ladder</BButton>\n                    <BButton variant=\"danger\" class=\"border-black fw-semibold\" @click=\"passMove('black')\" :disabled=\"lastColour !== 'white'\">Pass</BButton>\n                </BButtonGroup>\n            </div>\n        </div>\n        <div class=\"col-sm-8 board\">  \n            <canvas ref=\"goBoard\"></canvas>   \n        </div>\n        <div class=\"col-sm-2\" id=\"white_section\">\n            <div class=\"row timer_box\">\n                <Timer :stop=\"wStop\" :isBlack=\"false\" @timerRanOut=\"timerFinish\"/>\n                <div class=\"list-group-item d-flex justify-content-between align-items-center fw-semibold bg-light mt-3 px-2 p-2 rounded\">\n                    Prisoners\n                    <BBadge class=\"fs-6\" pill style=\"min-width: 40px; text-align: center; background-color: #2d2c2c !important\">{{ prisonersCounterW }}</BBadge>\n                </div>\n                <BButtonGroup class=\"my-3 w-100 p-0\" vertical>\n                    <BButton variant=\"primary\" @click=\"toggleNumbered\" class=\"border-bottom-0 border-black fw-semibold\">Toggle numbers</BButton>\n                    <BButton variant=\"primary\" @click=\"undoMove\" class=\"border-bottom-0 border-black fw-semibold\" :v-show=\"undoAllowed\" :disabled=\"lastColour !== 'white'\">Undo</BButton>\n                    <BButton variant=\"primary\" @click=\"estimateScore\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'black'\">Estimate score</BButton>\n                    <BButton variant=\"primary\" @click=\"ladderEval\" class=\"border-bottom-0 border-black fw-semibold\" :disabled=\"lastColour !== 'black'\">Evaluate ladder</BButton>\n                    <BButton variant=\"danger\" class=\"border-black fw-semibold\" @click=\"passMove('white')\" :disabled=\"lastColour !== 'black'\">Pass</BButton>\n                </BButtonGroup>\n            </div>\n        </div>\n\n        <!-- Ladder Modal -->\n        <BModal\n            ok-only \n            centered\n            v-model=\"ladderCheck\" \n            hide-header-close\n            @ok=\"ladderCheck = false\"\n            class=\"text-center\" style=\"left: 35% !important\"\n            :title=\"ladderModalTitle\"\n        >\n            <div ref=\"ladderModalBody\" class=\"ladder_board\" style=\"background-color: #CCA56D;\">\n            </div>\n        </BModal>\n\n        <!-- Score estimate Modal -->\n        <BModal\n            ok-only \n            centered\n            hide-header-close\n            v-model=\"estimateModal\" \n            class=\"text-center\" style=\"left: 35% !important\"\n            title =\"Score estimate\"\n        >\n            <p ref=\"estimateModalMessage\" class=\"my-4\"></p>\n        </BModal>\n\n        <!-- Gameover Modal -->\n        <BModal\n            ok-only \n            centered\n            hide-header-close\n            v-model=\"gameover\" \n            @ok=\"reloadPage\"\n            class=\"text-center\" style=\"left: 35% !important\"\n            title =\"Game over!\"\n        >\n            <p ref=\"modalMessage\" class=\"my-4\"></p>\n        </BModal>\n    </div>\n</div> \n</template>\n\n<script>\nimport Timer from './Timer.vue';\n\nimport { init2DBoard, numberedPieces, \n         print2DBoard, update2DBoard,\n        drawHoshi, resetCheckBoard, getLiberties,\n        toggleTimers, cloneBoard, drawBoard,\n        placePiece, redrawBoard, calculateTerritory, \n        countStones, simulateLadder, territoryScoring, getLibertiesAt } from \"../statics/functions.js\";\n    \nimport { BButtonGroup, BButton, BModal, BContainer, BBadge } from 'bootstrap-vue-next';\nimport black from '../../public/b.png';\n// import black from '../assets/b.png';\nimport white from '../assets/w.png';\n\nexport default {\n    components: {\n        BButtonGroup, BButton, Timer, BModal, BContainer, BBadge\n    },\n    data() {\n        return {\n            lastColour: \"white\",\n            boardSize:  9,\n            board: [],\n            boardStack: [],\n            pieceNumbersStack: [],\n            checkBoard: [],\n            bStop: true,\n            wStop: true,\n            prisonersCounterB: 0,\n            prisonersCounterW: 0,\n            prisonersStack: [],\n            checklib: [[0, 1], [0, -1], [1, 0], [-1, 0]],\n            deadCells: [],\n            pieceNumbers: [],\n            isNumbered: false,\n            lastMoveWasPassed: false,\n            ladderCheck: false,\n            ladderModalTitle: '',\n            estimateModal: false,\n            gameover: false\n        };\n    },\n    mounted() {\n        const canvas = this.$refs.goBoard;\n        const ctx = canvas.getContext('2d');\n        var scale = window.devicePixelRatio; // Change to 1 on retina screens to see blurry canvas.\n        this.drawBoard(canvas, ctx, scale);\n\n        this.$refs.goBoard.addEventListener('mousedown', this.getMousePosition);\n        this.init2DBoard(this.board, this.checkBoard);\n        this.boardSize = window.boardSize;\n        this.undoAllowed = window.undo;\n    },\n    methods: {\n        init2DBoard,\n        drawBoard,\n        redrawBoard,\n        drawHoshi,\n        placePiece,\n        numberedPieces,\n        update2DBoard,\n        print2DBoard,\n        getLiberties,\n        resetCheckBoard,\n        cloneBoard,\n        toggleTimers,\n        calculateTerritory, simulateLadder, territoryScoring,\n        countStones,\n        getLibertiesAt,\n\n        async getMousePosition(event) {\n            const canvas = this.$refs.goBoard;\n            const rect = canvas.getBoundingClientRect();\n            const colour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n            let x = event.clientX - rect.left;\n            let y = event.clientY - rect.top;\n            const cell = 800/(this.boardSize + 1);\n            if ((x % cell) > (cell/2)) {\n                x = x + (cell - (x % cell));\n            }\n            else {\n                x = x - (x % cell);\n            }\n            if ((y % cell) > (cell/2)) {\n                y = y + (cell - (y % cell));\n            }\n            else {\n                y = y - (y % cell);\n            }\n            \n            // out of bounds checks\n            if(x == 0 || y == 0)\n                return;\n            else if(x >= cell * (this.boardSize + 1) || y >= cell * (this.boardSize + 1))\n                return;\n            \n            const r = Math.round((x == (cell/2)) ? x - (cell/2) : (x - cell) / cell);\n            const c = Math.round((y == (cell/2)) ? y - (cell/2) : (y - cell) / cell);\n            let newBoard = this.cloneBoard(this.board); \n            newBoard[c][r] = (colour == \"white\") ? '1' : '0';\n            let lib = this.getLibertiesAt(c, r, newBoard);\n            if (lib === 0){\n                let lib2 = -1;\n\n                for (const [dx, dy] of this.checklib) {\n                    const pX = Number(r) + dx;\n                    const pY = Number(c) + dy;\n\n                    if (pX >= 0 && pY >= 0 && pX < newBoard[0].length && pY < newBoard.length) {\n                        const currentPiece = newBoard[c][r];\n                        const neighborPiece = newBoard[pY][pX];\n\n                        if (neighborPiece !== \"*\" && neighborPiece !== currentPiece) {\n                            lib2 = this.getLibertiesAt(pY, pX, newBoard);\n                            if (lib2 === 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                if(lib2 > 0){\n                    alert(\"Suicide move not allowed.\");\n                    return;\n                }\n            }\n            \n            this.boardStack.unshift(this.cloneBoard(this.board)); // clone current board state into 2d stack\n            this.pieceNumbersStack.unshift(this.pieceNumbers.map((el) => [el[0], el[1], el[2]]));\n\n            this.prisonersStack.unshift([this.prisonersCounterB, this.prisonersCounterW]); // update prisioners counter for current board\n            this.checkBoard = this.cloneBoard(this.board);\n            var res = this.update2DBoard(r, c, colour, this.boardStack, this.board); // return true if successfully placed\n            if (res) {\n                try {\n                    await this.placePiece(this.isNumbered, x - (cell/2), y - (cell/2), colour, this.boardStack.length, canvas, canvas.getContext('2d'), window.devicePixelRatio); // place on board\n                    this.pieceNumbers.unshift([x - (cell/2), y - (cell/2), false]);\n                    [this.wStop, this.bStop] =  this.toggleTimers(this.lastColour);\n                }\n                catch (error) {\n                    console.error('Error placing piece:', error);\n                }\n                this.lastColour = colour;\n                this.lastMoveWasPassed = false;\n                \n                // console.log(\"Coordinate x: \" + x, \"Coordinate y: \" + y);\n                this.checkBoard = this.cloneBoard(this.board);\n                for (const [dx, dy] of this.checklib) {\n                    const pX = Number(r) + dx;\n                    const pY = Number(c) + dy;\n\n                    if (pX >= 0 && pY >= 0 && pX < this.board[0].length && pY < this.board.length) {\n                        const currentPiece = this.board[c][r];\n                        const neighborPiece = this.board[pY][pX];\n\n                        if (neighborPiece !== \"*\" && neighborPiece !== currentPiece) {\n                            if (this.getLiberties(pX, pY, this.board, this.checkBoard, this.deadCells) === 0) {\n                                var prisonerCount = this.resetCheckBoard(true, this.checkBoard, this.board);\n\n                                // update prisoner counter\n                                if(colour == \"black\")\n                                    this.prisonersCounterB += prisonerCount;\n                                else\n                                    this.prisonersCounterW += prisonerCount;\n                                \n                                this.pieceNumbers.forEach(el => {\n                                    const elX = Math.round((el[0] == (cell/2)) ? el[0] - (cell/2) : (el[0] - cell) / cell);\n                                    const elY = Math.round((el[1] == (cell/2)) ? el[1] - (cell/2) : (el[1] - cell) / cell);\n                                    if(!(el[2]) && this.board[elY][elX] == '*')\n                                        el[2] = true;\n                                });\n                                // redraw board    \n                                this.redrawBoard(this.isNumbered, canvas, canvas.getContext('2d'), \n                                                 window.devicePixelRatio, this.board, this.pieceNumbers);\n                            } else { \n                                this.resetCheckBoard(false, this.checkBoard, this.board);\n                            }\n                        }\n                    }\n                }\n\n                let end = true;\n                for (let row of this.board) {\n                    for (let cell of row) {\n                        if(cell === '*') {\n                            end = false;\n                            break;\n                        }\n                    }\n                    if(!end)\n                        break;\n                }\n\n                if (end) {\n                    this.endGame(false, false);\n                }\n            }\n        },\n        undoMove() {\n            if (this.boardStack.length > 0) {\n                this.board = this.boardStack[0];\n                this.pieceNumbers = this.pieceNumbersStack[0];\n\n                this.prisonersCounterB = this.prisonersStack[0][0];\n                this.prisonersCounterW = this.prisonersStack[0][1];\n                this.boardStack.shift();\n                this.pieceNumbersStack.shift();\n                this.prisonersStack.shift();\n                // this.pieceNumbers.shift();\n                this.lastColour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n\n                const canvas = this.$refs.goBoard;\n                this.redrawBoard(this.isNumbered, canvas, canvas.getContext('2d'), \n                                 window.devicePixelRatio, this.board, this.pieceNumbers);\n\n                const colour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n                [this.wStop, this.bStop] = this.toggleTimers(colour);\n            } else {\n                console.log(\"stack empty\")\n            }\n        },\n        passMove(color){\n            if(this.lastMoveWasPassed == true){\n                this.endGame(false, false);\n            }\n            else if(color != this.lastColour){\n                this.lastColour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n                const colour = (this.lastColour == \"white\") ? \"black\" : \"white\";\n                [this.wStop, this.bStop] = this.toggleTimers(colour);\n                \n                this.lastMoveWasPassed= true;\n            }\n        },\n        toggleNumbered(){\n            const canvas = this.$refs.goBoard;\n            this.isNumbered = this.isNumbered ? false : true;\n            this.redrawBoard(this.isNumbered, canvas, canvas.getContext('2d'), \n                             window.devicePixelRatio, this.board, this.pieceNumbers);\n        },\n        estimateScore() {\n            let gameDetails = {\n                bg: {\n                    black: '',\n                    white: ''\n                },\n                scores: {\n                    black: 0,\n                    white: 0\n                },\n                territory: {\n                    black: 0,\n                    white: 0\n                }\n            };\n            let tableBlack = '';\n            let tableWhite = '';\n\n            let stones = this.countStones(this.board);\n            if(window.scoring == \"Area\"){\n                gameDetails.territory = calculateTerritory(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + stones.black;\n                gameDetails.scores.white = gameDetails.territory.white + stones.white + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${stones.black}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${stones.white}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            else if(window.scoring == \"Territory\"){\n                gameDetails.territory = territoryScoring(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + this.prisonersCounterB;\n                gameDetails.scores.white = gameDetails.territory.white + this.prisonersCounterW + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${this.prisonersCounterB}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${this.prisonersCounterW}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            \n            this.estimateModal = true;\n            let blackScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center\">\n                            <img src=\"${black}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableBlack}\n                            </div>\n                        </div>\n                    </div>\n                </div>`\n\n            let whiteScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center\">\n                            <img src=\"${white}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableWhite}\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n\n            let html = `\n                <div class=\"vstack gap-2 mt-3\">\n                    <div class=\"p-2\">${blackScoreHTML}</div>\n                    <div class=\"p-2\">${whiteScoreHTML}</div>\n                </div>`;\n            this.$refs.estimateModalMessage.innerHTML = html;\n        },\n        ladderEval(){\n            const ladderResult = this.simulateLadder(this.board);\n            if(ladderResult.successful >= 0){\n                this.ladderModalTitle = ladderResult.successful ? \"Ladder successful for Hunter\" : \"Ladder unsuccessful for Hunter\";\n                this.ladderCheck = true;\n\n                const ladderBoardWidth = (window.boardSize < 10) ? 25 : 50;\n                const boardText = ladderResult.board.map(row => {\n                    row = row.join(' ')\n                    return `<div class=\"w-${ladderBoardWidth} mx-auto border border-dark\" style=\"background-color: #CCA56D;\">${row}</div>`}).join(' ');\n                this.$refs.ladderModalBody.innerHTML = boardText;\n            }\n            else if(ladderResult.successful === -1){\n                alert(\"Ladder sequence not found.\");\n            }\n            else {\n                alert(\"An error occurred during ladder evaluation\");\n                return;\n            }\n        },\n        endGame(timerExhausted, isBlack){\n            if(timerExhausted){\n                const color = isBlack ? \"Black\" : \"White\";\n                const winner = isBlack ? \"White\" : \"Black\";\n                let html = `\n                    '<h3>${color}'s timer exhausted<br>${winner} won the game</h3>'`;\n\n                this.gameover = true;\n                this.$refs.modalMessage.innerHTML = html;\n                return;\n            }\n\n            let gameDetails = {\n                winner: \"<h3>The game ended in a Draw</h3>\",\n                bg: {\n                    black: '',\n                    white: ''\n                },\n                scores: {\n                    black: 0,\n                    white: 0\n                },\n                territory: {\n                    black: 0,\n                    white: 0\n                }\n            };\n            let tableBlack = '';\n            let tableWhite = '';\n\n            let stones = this.countStones(this.board);\n            if(window.scoring == \"Area\"){\n                gameDetails.territory = calculateTerritory(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + stones.black;\n                gameDetails.scores.white = gameDetails.territory.white + stones.white + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${stones.black}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Stones</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${stones.white}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            else if(window.scoring == \"Territory\"){\n                gameDetails.territory = territoryScoring(this.board);\n\n                gameDetails.scores.black = gameDetails.territory.black + this.prisonersCounterB;\n                gameDetails.scores.white = gameDetails.territory.white + this.prisonersCounterW + parseFloat(window.komi);\n\n                tableBlack = \n                    `<table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.black}</th>\n                                <td>${this.prisonersCounterB}</td>\n                                <td>${gameDetails.territory.black}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n\n                tableWhite = `\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"fw-bold\" scope=\"col\">Score</th>\n                                <th class=\"fw-bold\" scope=\"col\">Prisoners</th>\n                                <th class=\"fw-bold\" scope=\"col\">Territory</th>\n                                <th class=\"fw-bold\" scope=\"col\">Komi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                            <th scope=\"row\" class=\"fw-semibold\">${gameDetails.scores.white}</th>\n                                <td>${this.prisonersCounterW}</td>\n                                <td>${gameDetails.territory.white}</td>\n                                <td>${window.komi}</td>\n                            </tr>\n                        </tbody>\n                    </table>`\n            }\n            \n            [this.wStop, this.bStop] = [true, true];\n            this.gameover = true;\n            if(gameDetails.scores.white < gameDetails.scores.black){\n                gameDetails.winner = '<h3>Black won the game</h3>';\n                gameDetails.bg.white = 'bg-danger';\n                gameDetails.bg.black = 'bg-success';\n            } else if(gameDetails.scores.white > gameDetails.scores.black){\n                gameDetails.winner = \"<h3>White won the game</h3>\";\n                gameDetails.bg.black = 'bg-danger';\n                gameDetails.bg.white = 'bg-success';\n            }\n            let blackScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center + ${gameDetails.bg.black}\">\n                            <img src=\"${black}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableBlack}\n                            </div>\n                        </div>\n                    </div>\n                </div>`\n\n            let whiteScoreHTML = `\n                <div class=\"card mb-3\">\n                    <div class=\"row g-0\">\n                        <div class=\"col-4 d-flex justify-content-center align-items-center + ${gameDetails.bg.white}\">\n                            <img src=\"${white}\" class=\"img-fluid my-auto\" alt=\"...\" style=\"max-height: 50px; max-width: 80px;\">\n                        </div>\n                        <div class=\"col-md-8\">\n                            <div class=\"card-body p-0 border-top-0\">\n                                ${tableWhite}\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n\n            let html = `\n                ${gameDetails.winner} \n                <div class=\"vstack gap-2 mt-3\">\n                    <div class=\"p-2\">${blackScoreHTML}</div>\n                    <div class=\"p-2\">${whiteScoreHTML}</div>\n                </div>`;\n            this.$refs.modalMessage.innerHTML = html;\n        },\n        reloadPage() {\n            window.location.reload();\n        },\n        timerFinish(isBlack){\n            this.endGame(true, isBlack);\n        }\n    }\n};\n</script>\n\n<style scoped>\ncanvas {\n  border: 0px solid black;\n  background-color: #CCA56D;\n}\n\n.board {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #CCA56D;\n    border: 1px solid black;\n}\n\n#black_section, #white_section {\n    background-color: #CCA56D;\n    border: 1px solid black;\n}\n\n.timer_box {\n    height: 50%;\n    padding-top: 20px;\n}\n\n.ladder_board {\n    display: flex;\n    flex-direction: column;\n}\n</style>","<template>\n  <div :class=\"[isBlack ? 'blackStyling' : 'whiteStyling', 'timer']\">\n    <div class=\"player_tile\">\n      <div class=\"player_digits d-flex justify-content-center align-items-center\">\n        <span class=\"fw-medium\" ref=\"min1\" style=\"min-width: 150px; text-align: center;\">{{ formattedTime }}</span>\n      </div>\n    </div>\n    <div class=\"timer_trackMode\">\n      <span ref=\"timeLabel\" class=\"timer_period\">MAIN TIME</span>\n      <div class=\"circle-container mt-3\">\n        <span class=\"fw-semibold fs-5\">Periods: </span><span class=\"fw-semibold fs-5\" ref=\"periodTxt\">{{ currentPeriod }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      minutes: 1,\n      seconds: 0,\n      playing: false,\n      mainTime: true,\n      periods: [],\n      numPeriods: 0,\n      byo_yomi_periods: 8,\n      periodsSizes: [1, 0],\n    };\n  },\n  mounted() {\n    this.startTimer();\n    this.periods = Array(this.byo_yomi_periods).fill(false);\n    this.minutes = window.mainTime.getMinutes();\n    this.seconds = window.mainTime.getSeconds();\n    this.byo_yomi_periods = window.periodLength;\n    this.periodsSizes = [window.periodTime.getMinutes(), window.periodTime.getSeconds()]\n  },\n  computed: {\n    formattedTime() {\n      const paddedMinutes = this.minutes < 10 ? `0${this.minutes}` : this.minutes;\n      const paddedSeconds = this.seconds < 10 ? `0${this.seconds}` : this.seconds;\n      return `${paddedMinutes}:${paddedSeconds}`;\n    },\n    currentPeriod() {\n      return this.byo_yomi_periods - this.numPeriods;\n    },\n  },\n  props: {\n    stop: Boolean,\n    isBlack: Boolean,\n  },\n  methods: {\n    stopTimer() {\n      this.stop = true;\n    },\n    start() {\n      this.stop = false;\n    },\n    startTimer() {\n      this.playing = true; // game starts\n\n      let timerId = setInterval(\n        function () {\n          //begin time loop\n          if (this.playing && !this.stop) {\n            const min = this.minutes;\n            const sec = this.seconds;\n\n            if (this.mainTime) {\n              if (sec == 0) {\n                if (min == 0) {\n                  this.mainTime = false;\n                  this.minutes = this.periodsSizes[0];\n                  this.seconds = this.periodsSizes[1];\n                  if(this.$refs.timeLabel)\n                    this.$refs.timeLabel.textContent = \"Period Time\";\n                } else {\n                  this.minutes -= 1;\n                  this.seconds = 59;\n                }\n              } else {\n                this.seconds -= 1;\n              }\n            } else {\n              if (sec == 0) {\n                if (min == 0) {\n                  this.periods[this.numPeriods] = true;\n                  this.numPeriods += 1;\n                  this.minutes = this.periodsSizes[0];\n                  this.seconds = this.periodsSizes[1];\n                } else {\n                  this.minutes -= 1;\n                  this.seconds = 59;\n                }\n              } else {\n                this.seconds -= 1;\n              }\n\n              if (this.numPeriods >= this.byo_yomi_periods) {\n                this.playing = false;\n                this.minutes = 0;\n                this.seconds = 0;\n                if(this.$refs.periodTxt)\n                    this.$refs.periodTxt.style.color = \"red\";\n                clearInterval(timerId);\n                this.$emit('timerRanOut', this.isBlack);\n              }\n            }\n          } else {\n            //timer stopped, waiting for turn\n          }\n        }.bind(this),\n        1000\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.timer {\n  width: 100%;\n  height: 80%;\n  padding-top: 20px;\n  border-radius: 5px;\n  background-color: red;\n}\n\n.player_tile {\n  position: relative;\n  height: 150px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: black;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  box-shadow: inset 3px 3px 0 #000, inset -3px 3px 0 black,\n    inset -3px -3px 0 black, inset 3px -3px 0 black;\n  color: #ffffff;\n  margin-top: 5px;\n}\n\n.player_digits {\n  width: 100%;\n}\n\n.timer_trackMode {\n  margin-bottom: 1em;\n  height: 100%;\n}\n\n.timer_period {\n  width: 100%;\n  display: block;\n  color: #020202;\n  min-height: 50px;\n  max-width: 400px;\n  font-size: 1.5rem;\n  font-weight: bold;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  letter-spacing: 2px;\n  border-bottom: 3px solid #000000;\n  border-left: 3px solid #000000;\n  border-right: 3px solid #000000;\n  color: #ffffff;\n  background-color: #0071d5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.circle-container {\n  display: flex;\n  padding-top: 5px;\n  justify-content: space-between;\n}\n\n.blackStyling {\n  border-color: white;\n  background-color: #2d2c2c;\n  border: 2px solid black;\n  color: white;\n}\n\n.blackStyling .player_digits {\n  font-size: 3.5rem;\n  color: white;\n}\n\n.whiteStyling {\n  background-color: #f3f3f3;\n  border: 2px solid black;\n  color: #000;\n}\n\n.whiteStyling .player_digits {\n  font-size: 3.5rem;\n  color: black;\n}\n</style>\n","import { render } from \"./Timer.vue?vue&type=template&id=2a744b04&scoped=true\"\nimport script from \"./Timer.vue?vue&type=script&lang=js\"\nexport * from \"./Timer.vue?vue&type=script&lang=js\"\n\nimport \"./Timer.vue?vue&type=style&index=0&id=2a744b04&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2a744b04\"]])\n\nexport default __exports__","import white from '../assets/w.png';\nimport black from '../assets/b.png';\n\nexport function init2DBoard(board, checkBoard) {\n    for (let i = 0; i < window.boardSize; i++) {\n        const row = [];\n        for (let j = 0; j < window.boardSize; j++) {\n            row.push('*');\n        }\n        board.push(row);\n        checkBoard.push(row);\n    }\n}\n\n// initial redrawing of the canvas\nexport function drawBoard(canvas, ctx, scale) {\n    const size = 800;\n    canvas.style.width = size + \"px\";\n    canvas.style.height = size + \"px\";\n    canvas.width = size * scale;\n    canvas.height = size * scale;\n    const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n    ctx.scale(scale, scale);\n\n    const cell = 800/(window.boardSize + 1);\n    ctx.beginPath();\n    for (let i = 2; i <= (window.boardSize - 1); i++) {\n        // horizontal lines\n        ctx.moveTo((cell), (i * cellSize));\n        ctx.lineTo((canvas.width / scale) - cell, (i * cellSize));\n        ctx.strokeStyle = '#000000';    \n        ctx.lineWidth = \"1\";\n        // vertical lines\n        ctx.moveTo(i * cellSize, (1 * cell));\n        ctx.lineTo(i * cellSize, (canvas.height / scale) - cell);\n    }\n    ctx.stroke();\n\n    //draw four edge sides to make them darker\n    ctx.beginPath();\n    ctx.lineWidth = \"2\";\n    ctx.strokeStyle = '#000000';\n    \n    ctx.moveTo((cell), (1 * cellSize)); // horizontal\n    ctx.lineTo((canvas.width / scale) - cell, (1 * cellSize));\n    ctx.moveTo(1 * cellSize, (1 * cell)); // vertical\n    ctx.lineTo(1 * cellSize, (canvas.height / scale) - cell);\n\n    ctx.moveTo((cell), (window.boardSize * cellSize)); // horizontal\n    ctx.lineTo((canvas.width / scale) - cell, (window.boardSize * cellSize));\n    ctx.moveTo(window.boardSize * cellSize, (1 * cell)); // vertical\n    ctx.lineTo(window.boardSize * cellSize, (canvas.height / scale) - cell);\n    \n    ctx.stroke();\n    \n    ctx.beginPath();\n    ctx.strokeStyle = \"#CCA56D\";\n    ctx.rect(0, 0, (canvas.width / scale), (canvas.height / scale));\n    ctx.stroke();\n    drawHoshi(ctx, canvas, scale);\n}\n\n// for redrawing the entire canvas\nexport async function redrawBoard(numbered, canvas, ctx, scale, board, pieceNumbers) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const size = 800;\n    canvas.style.width = size + \"px\";\n    canvas.style.height = size + \"px\";\n    canvas.width = size * scale;\n    canvas.height = size * scale;\n    const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n    ctx.scale(scale, scale);\n    const cell = 800/(window.boardSize + 1);\n\n    for (let i = 1; i <= window.boardSize; i++) {\n        // horizontal lines\n        ctx.beginPath();\n        ctx.moveTo((cell), (i * cellSize));\n        ctx.lineTo((canvas.width / scale) - cell, (i * cellSize)); \n        ctx.strokeStyle = '#000000';\n        if (i == 1 || i == window.boardSize)\n            ctx.lineWidth = \"2\";\n        else\n            ctx.lineWidth = \"1\";\n        ctx.stroke();\n        // vertical lines\n        ctx.beginPath();\n        ctx.moveTo(i * cellSize, (1 * cell));\n        ctx.lineTo(i * cellSize, (canvas.height / scale) - cell);\n        ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.lineWidth = \"80\";\n    ctx.strokeStyle = \"#CCA56D\";\n    ctx.rect(0, 0, (canvas.width / scale), (canvas.height / scale));\n    ctx.stroke();\n    drawHoshi(ctx, canvas, scale);\n    \n    for (let i = 0; i < window.boardSize; i++) {\n        for (let j = 0; j < window.boardSize; j++) {\n            if (board[j][i] != EMPTY) {\n                const pColour = (board[j][i] == \"1\") ? \"white\" : \"black\";\n                try {\n                    await placePiece(numbered, (i * cell) + (cell/2), (j * cell) + (cell/2), pColour, '', canvas, ctx, scale);\n                }\n                catch (error) {\n                    console.error('Error placing piece:', error);\n                }\n            }\n        }\n    }\n\n    if(!numbered){\n        return;\n    }\n    \n    for(var i = 0; i < pieceNumbers.length; i++){\n        var row = pieceNumbers[i][0];\n        var col = pieceNumbers[i][1];\n        var dead = pieceNumbers[i][2];\n        if(dead)\n          continue;\n        const r = (row == cell) ? row - cell : (row - (cell/2)) / cell;\n        const c = (col == cell) ? col - cell : (col - (cell/2)) / cell;\n        \n        if(this.board[c][r] != EMPTY){ \n            numberedPieces(ctx, row, col, (pieceNumbers.length) - i);\n        }\n    }\n}\n\n// draws the star points\nexport function drawHoshi(ctx, canvas, scale) {\n    const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n    const starSize = cellSize / 10;\n    ctx.fillStyle = 'black';\n    let positions;\n    if(window.boardSize == 9)\n        positions = [3, 7];\n    else if(window.boardSize == 13)\n        positions = [4, 10];\n    else if (window.boardSize == 19)\n        positions = [4, 10, 16];\n\n    ctx.beginPath();\n    for(var i = 0; i < positions.length; i++){\n        for(var j = 0; j < positions.length; j++){\n            const row = positions[i];\n            const col = positions[j];\n            ctx.moveTo(col * cellSize, (row * 40));\n            ctx.arc(col * cellSize, row * cellSize, starSize, 0, 2 * Math.PI);\n        }\n    }\n    if(window.boardSize == 9){\n        ctx.moveTo(5 * cellSize, (5 * 40));\n        ctx.arc(5 * cellSize, 5 * cellSize, starSize, 0, 2 * Math.PI);\n    } else if(window.boardSize == 13){\n        ctx.moveTo(7 * cellSize, (7 * 40));\n        ctx.arc(7 * cellSize, 7 * cellSize, starSize, 0, 2 * Math.PI);\n    } \n    ctx.fill();\n}\n\nexport async function placePiece(numbered, row, col, colour, num, canvas, ctx, scale) {\n    return new Promise((resolve, reject) => {\n        const cellSize = (canvas.width / scale) / (window.boardSize + 1);\n        const pieceImage = new Image();\n        const pieceColour = colour;\n        pieceImage.src = (pieceColour == \"white\") ? white : black;\n        pieceImage.onload = () => {\n            ctx.drawImage(pieceImage, row, col, cellSize, cellSize);\n            if(numbered)\n              numberedPieces(ctx, row, col, num)\n            resolve();\n        };\n        pieceImage.onerror = (error) => {\n            reject(error);\n        };\n    });\n}\n\n// numbers a piece\nexport function numberedPieces(ctx, row, col, num){\n    const fontSize = window.boardSize < 19 ? '1.5rem' : '1rem';\n    const cell = Math.round((800/(window.boardSize + 1))/2);\n    ctx.font = `${fontSize} Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#E9190F';\n    ctx.fillText(num, row + cell, col + cell);\n}\n\n// add to 2d Go board\nexport function update2DBoard(x, y, pColour, boardStack, board) {\n    if (pColour == \"star\") {\n    }\n    if (pColour == \"star\") {\n        boardStack.pop(); // add current board state to stack\n        board[y][x] = EMPTY;print2DBoard(board)\n        return true;\n    }\n    else if (this.board[y][x] != '*') {\n        return false;\n    }\n    else if (pColour == \"white\" || pColour == \"black\") {\n        this.board[y][x] = (pColour == \"white\") ? '1' : '0';\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function print2DBoard(brd) {\n    console.log(\"\");\n    console.log(\"\\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n    brd.forEach(v => console.log(...v));\n    console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n}\n\nexport function getLiberties(x, y, board, checkBoard, deadCells) {\n    if(board[y][x] === '*'){ \n        return -1;\n    }\n     if(checkBoard[y][x] === \"@\" || checkBoard[y][x] === \"£\" ){ // if already checked, assume no liberties\n        return 0;\n    }\n    checkBoard[y][x] = \"@\";\n\n    var checklib = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n    var count = 0; // count liberties\n\n    for(var i = 0; i < 4; i++) {\n        var pX = Number(x) + checklib[i][0];\n        var pY = Number(y) + checklib[i][1];\n\n        if((pX > -1 && pY > -1) && (pX < window.boardSize && pY < window.boardSize)) { //valid position\n            if(board[pY][pX] === EMPTY) {\n                count++;\n            } else if(board[pY][pX] === board[y][x]) {\n                var friendCount = getLiberties(pX, pY, board, checkBoard, deadCells);\n                checkBoard[pY][pX] = \"@\";\n                count += friendCount;\n            }\n        }\n    }\n    if(count === 0){\n        checkBoard[y][x] = '£';\n        deadCells.push([x, y, \"%\"]);\n    }\n    return count;\n}\n\n// resets board for keeping track of checked intersections when counting liberties (checkBoard)\nexport function resetCheckBoard(redraw, checkBoard, board) {\n    var count = 0;\n    for(var i = 0; i < window.boardSize; i++) {\n        for(var j = 0; j < window.boardSize; j++) {\n            if(redraw && (checkBoard[j][i] === \"@\" || checkBoard[j][i] === \"£\")){\n                board[j][i] = EMPTY;\n                redraw = true;\n                count++;\n            }\n            checkBoard[j][i] = EMPTY;\n        }\n    }\n    return count\n}\n\nexport function cloneBoard(brd) {\n    return brd.map(row => row.slice());\n}\n\nexport function toggleTimers(lastColour){\n    if(lastColour == \"white\"){\n        return [false, true]\n    } else {\n        return [true, false]\n    }\n}\n\nconst EMPTY = '*';\nconst BLACK = '0';\nconst WHITE = '1';\n\nfunction isOnBoard(x, y, size) {\n    return x >= 0 && x < size && y >= 0 && y < size;\n}\n\nfunction floodFill(board, x, y, size, visited) {\n    let queue = [[x, y]];\n    let territory = [];\n    let bordersBlack = false;\n    let bordersWhite = false;\n\n    while (queue.length > 0) {\n        let [tempX, tempY] = queue.pop();\n        if (visited[tempX][tempY]) {\n          continue;\n        };\n        visited[tempX][tempY] = true;\n        territory.push([tempX, tempY]);\n\n        let neighbors = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n        for (let [dx, dy] of neighbors) {\n            let nx = tempX + dx;\n            let ny = tempY + dy;\n\n            if (isOnBoard(nx, ny, size)) {\n                if (board[nx][ny] === EMPTY && !visited[nx][ny]) {\n                    queue.push([nx, ny]);\n                } else if (board[nx][ny] === BLACK) {\n                    bordersBlack = true;\n                } else if (board[nx][ny] === WHITE) {\n                    bordersWhite = true;\n                }\n            }\n        }\n    }\n\n    return {territory, bordersBlack, bordersWhite};\n}\n\nexport function calculateTerritory(board) {\n  const size = window.boardSize;\n    let visited = new Array(size).fill(null).map(() => new Array(size).fill(false));\n    let blackTerritory = 0;\n    let whiteTerritory = 0;\n\n    for (let x = 0; x < size; x++) {\n        for (let y = 0; y < size; y++) {\n            if (board[x][y] === EMPTY && !visited[x][y]) {\n                let { territory, bordersBlack, bordersWhite } = floodFill(board, x, y, size, visited);\n\n                // check if territory is completely surrounded by only one colour\n                if (bordersBlack && !bordersWhite) {\n                    blackTerritory += territory.length;\n                } else if (bordersWhite && !bordersBlack) {\n                    whiteTerritory += territory.length;\n                }\n            }\n        }\n    }\n    return {\n      black: blackTerritory,\n      white: whiteTerritory\n    };\n}\n\nfunction neighboringPoints(x, y, board) {\n  const neighbors = [];\n  const directions = [[0, 1], [0, -1], [1, 0], [-1, 0]];\n  directions.forEach(([dx, dy]) => {\n    const nx = x + dx, ny = y + dy;\n    if (nx >= 0 && nx < board.length && ny >= 0 && ny < board[0].length) {\n      neighbors.push({x: nx, y: ny});\n    }\n  });\n  return neighbors;\n}\n\nfunction partitionTraverse(startX, startY, board) {\n  let boundaries = [];\n  let checked = [];\n  let pointsToCheck = [[startX, startY]];\n  const startColor = board[startX][startY];\n\n  while (pointsToCheck.length > 0) {\n    const [x, y] = pointsToCheck.pop();\n    if (!checked.some(p => p[0] === x && p[1] === y)) {\n      checked.push([x, y]);\n      let allNeighbors = neighboringPoints(x, y, board);\n\n      allNeighbors.forEach(neighbor => {\n        if (!checked.some(p => p[0] === neighbor.x && p[1] === neighbor.y)) {\n          if (board[neighbor.x][neighbor.y] === startColor) {\n            pointsToCheck.push([neighbor.x, neighbor.y]);\n          } else {\n            boundaries.push([neighbor.x, neighbor.y]);\n          }\n        }\n      });\n    }\n  }\n\n  let uniqueBoundaries = [];\n  boundaries.forEach(el => {\n    if (!uniqueBoundaries.some(p => p[0] === el[0] && p[1] === el[1])) {\n      uniqueBoundaries.push(el);\n    }\n  });\n\n  return [checked, uniqueBoundaries];\n}\n\nclass Region {\n  constructor(board, intersections) {\n    this.boardReg = board;\n    this.intersections = intersections;\n    Object.freeze(this);\n  }\n\n  static getRegions(board) {\n    let checked = [];\n    const regions = [];\n\n    for (let x = 0; x < board.length; x++) {\n      for (let y = 0; y < board[0].length; y++) {\n        if (!checked.some(p => p[0] === x && p[1] === y)) {\n          const [regionPoints, _] = partitionTraverse(x, y, board);\n          const newReg = new Region(board, regionPoints);\n          regions.push(newReg);\n          checked = [...checked, ...regionPoints];\n        }\n      }\n    }\n\n    return regions;\n  }\n\n  isTerritory() {\n    const point = this.intersections[0];\n    if (this.boardReg[point[0]][point[1]] != EMPTY) {\n      return false;\n    }\n\n    const [_, boundaryPoints] = partitionTraverse(point[0], point[1], this.boardReg);\n    let surroundingColors = [];\n    boundaryPoints.forEach(el => {\n      if (surroundingColors.indexOf(this.boardReg[el[0]][el[1]]) < 0) {\n        surroundingColors.push(this.boardReg[el[0]][el[1]]);\n      }\n    });\n    return (surroundingColors.length === 1 && surroundingColors[0] !== EMPTY);\n  }\n\n  isNeutral() {\n    const point = this.intersections[0];\n    return !(this.boardReg[point[0]][point[1]] == BLACK) && !(this.boardReg[point[0]][point[1]] == WHITE) && !this.isTerritory();\n  }\n\n  exterior() {\n    let exteriorPoints = [];\n  \n    for (let i = 0; i < this.boardReg.length; i++) {\n      for (let j = 0; j < this.boardReg[i].length; j++) {\n        if (!this.intersections.some(el => el[0] == i && el[1] == j)) {\n          const neighbors = neighboringPoints(i, j, this.boardReg);\n          if (neighbors.some(neighbor => this.intersections.some(el => el[0] === neighbor.x && el[1] === neighbor.y))) {\n            exteriorPoints.push([i, j]);\n          }\n        }\n      }\n    }\n    return exteriorPoints;\n  }\n  boundaryStones() {\n    const boundaryStones = this.exterior().filter(i => this.boardReg[i[0]][i[1]] != this.boardReg[this.intersections[0][0]][this.intersections[0][1]]);\n    return boundaryStones;\n  }\n  expandedBoundaryStones() {\n    const boundaryStones = this.boundaryStones();\n    const regions = Region.getRegions(this.boardReg).filter(r => r.intersections.some(i => boundaryStones.some(el => el[0] == i[0] && el[1] == i[1])));\n    return flatMap(regions, r => r.intersections);\n  }\n  static Merge(board, regions, region) {\n    let mergedRegions = [region];\n    let length = -1; \n    while (mergedRegions.length != length) {\n      length = mergedRegions.length;\n      mergedRegions = regions.filter(r => {\n        return r.boardReg[r.intersections[0][0]][r.intersections[0][1]] == EMPTY && r.isTerritory() \n        && board[r.intersections[0][0]][r.intersections[0][1]] == board[region.intersections[0][0]][region.intersections[0][1]] \n        && r.expandedBoundaryStones().some(stone => {\n          return mergedRegions.some(latestRegion => {\n            return latestRegion.expandedBoundaryStones().some(el => el[0] == stone[0] && el[1] == stone[1]);\n          });\n        });\n      });\n    }\n    return mergedRegions;\n  };\n\n  numOfEyes(){\n    const point = this.intersections[0];\n    if (this.boardReg[point[0]][point[1]] != EMPTY) {\n      return -1;\n    }\n\n    let boundaryLength = 0;\n    const borderPoints = this.intersections.filter(i => {\n      return i[1] === 0 || i[1] === window.boardSize - 1 || i[0] === 0 || i[0] === window.boardSize - 1;\n    });\n    const cornerPoints = this.intersections.filter(i => {\n      return i[1] % window.boardSize - 1 === 0 && i[0] % window.boardSize - 1 === 0;\n    });\n\n    boundaryLength = this.boundaryStones().length + borderPoints.length + cornerPoints.length;\n    if (boundaryLength >= 10) {\n      return 2;\n    } else if (boundaryLength <= 6 && boundaryLength > 1) {\n      return 1;\n    } else if (boundaryLength == 7) {\n      return 1.5;\n    } else {\n      return -1;\n    }\n  }\n\n  territoryColour(){\n    const point = this.intersections[0];\n    const [_, boundaryPoints] = partitionTraverse(point[0], point[1], this.boardReg);\n    let surroundingColors = [];\n    boundaryPoints.forEach(el => {\n      if (surroundingColors.indexOf(this.boardReg[el[0]][el[1]]) < 0) {\n        surroundingColors.push(this.boardReg[el[0]][el[1]]);\n      }\n    });\n\n    if (surroundingColors.length === 1 && surroundingColors[0] !== EMPTY){\n      return surroundingColors[0];\n    } else {\n      return -1  ;\n    }\n  }\n}\n\nfunction flatMap (ary, condition) {\n  return Array.prototype.concat.apply([], ary.map(condition));\n}\n\nfunction isFalse(board, x, y){\n  if (board[x][y] != EMPTY) {\n    return false;\n  }\n\n  let possibleX = [];\n  let possibleY = [];\n  if (x > 0) {\n    possibleX.push(x - 1);\n  }\n\n  if (x < (window.boardSize - 1)) {\n    possibleX.push(x + 1);\n  }\n\n  if (y > 0) {\n    possibleY.push(y - 1);\n  }\n\n  if (y < (window.boardSize - 1)) {\n    possibleY.push(y + 1);\n  }\n\n  const diagonals = [];\n  possibleX.forEach(x => {\n    possibleY.forEach(y => {\n      diagonals.push([x, y]);\n    });\n  });\n\n  const onFirstLine = diagonals.length < 3;\n  const occupiedNeighbors = neighboringPoints(x, y, board).filter(i => board[i.x][i.y] != EMPTY);\n  if (onFirstLine && occupiedNeighbors.length < 1) {\n    return false;\n  } else if (!onFirstLine && occupiedNeighbors.length < 2) {\n    return false;\n  }\n\n  const opposingOccupiedDiagonals = diagonals.filter(d => board[d[0]][d[1]] != EMPTY && board[d[0]][d[1]] != board[occupiedNeighbors[0].x][occupiedNeighbors[0].y]);\n  if (onFirstLine) {\n    return opposingOccupiedDiagonals.length >= 1;\n  } else {\n    return opposingOccupiedDiagonals.length >= 2;\n  }\n}\n\nfunction getLiberties2(x, y, board, checkBoard) {\n  if(board[x][y] === EMPTY){ \n      return -1;\n  }\n   if(checkBoard[x][y] === \"@\" || checkBoard[x][y] === \"£\" ){ // if already checked, assume no liberties\n      return 0;\n  }\n  checkBoard[x][y] = \"@\";\n\n  var checklib = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n  var count = 0; // count liberties\n\n  for(var i = 0; i < 4; i++) {\n      var pX = Number(x) + checklib[i][0];\n      var pY = Number(y) + checklib[i][1];\n\n      if((pX > -1 && pY > -1) && (pX < window.boardSize && pY < window.boardSize)) { //valid position\n          if(board[pX][pY] === EMPTY && checkBoard[pX][pY] == EMPTY) {\n              count++;\n              checkBoard[pX][pY] = '£';\n          } else if(board[pX][pY] === board[x][y]) {\n              var friendCount = getLiberties2(pX, pY, board, checkBoard);\n              checkBoard[pX][pY] = \"@\";\n              count += friendCount;\n          }\n      }\n  }\n  \n  return count;\n}\n\nexport function getLibertiesAt(x, y, board){\n  let checkBoard = cloneBoard(board);\n  return getLiberties2(x, y, board, checkBoard);\n}\n\nfunction withoutNeutralPoints(board) {\n  const regions = Region.getRegions(board);\n  const neutralRegions = regions.filter(el => el.isNeutral());\n  if ((regions.length == 0 || neutralRegions.length == 0)) {\n    return board;\n  }\n  const replacements = [];\n  neutralRegions.forEach(el => {\n    let startingX = null;\n    let startingY = null;\n    el.intersections.forEach(intersection => {\n      startingX = startingX || intersection[0];\n      startingY = startingY || intersection[1];\n      const manhattanDistance = Math.abs(intersection[1] - startingY) + Math.abs(intersection[0] - startingX);\n      replacements[intersection[0]] = replacements[intersection[0]] || [];\n      replacements[intersection[0]][intersection[1]] = [BLACK, WHITE][manhattanDistance % 2]; //creates an alternating pattern\n    });\n  });\n\n  let newBoard = board.map(row => row.slice());\n  for (let x = 0; x < replacements.length; x++) {\n    if (replacements[x]) { \n      for (let y = 0; y < replacements[x].length; y++) {\n        if (replacements[x][y]) {\n          newBoard[x][y] = replacements[x][y];\n        }\n      }\n    }\n  }\n  return newBoard;\n};\n\nfunction withoutFalseEyes(board){\n  const territoryRegions = Region.getRegions(board).filter(el => el.isTerritory());\n  const falseEyePoints = flatMap(territoryRegions, el => el.intersections).filter(i => isFalse(board, i[0], i[1]));\n\n  let pointsNeighboringAtari = []\n  for(let i = 0; i < falseEyePoints.length; i++){\n    const el = falseEyePoints[i];\n    const neighbors = neighboringPoints(el[0], el[1], board);\n    for(let j = 0; j < neighbors.length; j++){\n      const n = neighbors[i];\n      const liberties = getLibertiesAt(n.x, n.y, board);\n      if(liberties == 1){\n        if(pointsNeighboringAtari.indexOf(el) < 0){ pointsNeighboringAtari.push(el) }\n      }\n    }\n  }\n\n  let neutralAtariUpdatedState = board;\n  while (pointsNeighboringAtari.length > 0){\n    let newPoints = [];\n    for(let x = 0; x < neutralAtariUpdatedState.length; x++){\n      for(let y = 0; y < neutralAtariUpdatedState.length; y++){\n        const is_point = pointsNeighboringAtari.some(el => {\n          return el[0] === x && el[1] === y;\n        });\n\n        if(is_point){\n          const neighbors = neighboringPoints(x, y, neutralAtariUpdatedState);\n          const fillColor = neutralAtariUpdatedState[neighbors[0].x][neighbors[0].y]\n          newPoints.push([x, y, fillColor]);\n        }\n      }\n    }\n\n    newPoints.forEach(([x, y, fillColor]) => {\n      if (x < neutralAtariUpdatedState.length && y < neutralAtariUpdatedState[x].length) {\n        neutralAtariUpdatedState[x][y] = fillColor;\n      }\n    });\n\n    const board = withoutNeutralPoints(neutralAtariUpdatedState);\n    const territoryRegions = Region.getRegions(board).filter(el => el.isTerritory());\n    const falseEyePoints = flatMap(territoryRegions, el => el.intersections).filter(i => isFalse(board, i[0], i[1]));\n    pointsNeighboringAtari = falseEyePoints.filter(i => {\n      const el = falseEyePoints[i];\n      return neighboringPoints(el[0], el[1], board).some(neighbor => {\n        return getLibertiesAt(neighbor.x, neighbor.y, board) == 1;\n      });\n    });\n  }\n\n  return neutralAtariUpdatedState;\n}\n\nexport function territoryScoring(board){\n  const withoutNeutralPointsBoard = withoutNeutralPoints(board);\n  const withClearFalseEyesFilled = withoutFalseEyes(withoutNeutralPointsBoard);\n  const territoryRegions = Region.getRegions(withClearFalseEyesFilled).filter(el => el.isTerritory());\n\n  const territoryRegionsWithoutSeki = territoryRegions.filter(r => {\n    const merged = Region.Merge(r.boardReg, territoryRegions, r); //merge r with adjacent regions based on boundarystones and if shared territory\n    const eyes = merged.map(el => Math.ceil(el.numOfEyes())); // checks for likelihood of eyes. not necessarily precise. doesnt have to be.\n    return (eyes.length > 0 && eyes.reduce((a, b) => a + b) >= 2); // sum all eyes; and if less than 2, then seki.\n  });\n\n  const blackRegions = territoryRegionsWithoutSeki.filter(r => r.territoryColour() == BLACK);\n  const whiteRegions = territoryRegionsWithoutSeki.filter(r => r.territoryColour() == WHITE);\n  let territoryControlledBlack = 0;\n  for (let i = 0; i < blackRegions.length; i++) {\n    territoryControlledBlack += blackRegions[i].intersections.length;\n  }\n  let territoryControlledWhite = 0;\n  for (let i = 0; i < whiteRegions.length; i++) {\n    territoryControlledWhite += whiteRegions[i].intersections.length;\n  }\n\n  return {\n    black: territoryControlledBlack,\n    white: territoryControlledWhite\n  };\n}\n\nfunction detectLadders(board){\n  const regions = Region.getRegions(board);\n  let ladder_sequences = []\n\n  regions.forEach(el => {\n    const intersections = el.intersections[0];\n    const lib = getLibertiesAt(intersections[0], intersections[1], board);\n    if(lib == 1){\n      ladder_sequences.push(el);\n    }\n  });\n\n  let ataris = [];\n  let prey;\n  ladder_sequences.forEach(seqs => {\n    const atari = seqs.boundaryStones().find(el => board[el[0]][el[1]] == EMPTY);\n    if (!atari)\n      return;\n\n    const neighbours = neighboringPoints(atari[0], atari[1], board);\n    let blackStones = 0;\n    let whiteStones = 0;\n    let emptyPoints = 0;\n    neighbours.forEach(point => {\n      const pointColour = board[point.x][point.y];\n      if(pointColour == BLACK)\n        blackStones += 1;\n      else if(pointColour == WHITE)\n        whiteStones += 1;\n      else if(pointColour == EMPTY)\n        emptyPoints += 1;\n    })\n    if(blackStones == 1 && whiteStones == 1 && emptyPoints == 2){\n      ataris.push(atari);\n      prey = neighbours.find(point => {\n        const lib = getLibertiesAt(point.x, point.y, board);\n        return lib == 1;\n      });\n    }\n  })\n  \n  return [ladder_sequences, ataris, prey];\n}\n\nfunction ladder_configurations(ladder_prey, atari, board){\n  let config = new Object();\n  const atariNeighbours = neighboringPoints(atari.x, atari.y, board);\n  const emptyPoints = atariNeighbours.filter(point => board[point.x][point.y] == EMPTY);\n\n  if(emptyPoints.length > 2){\n    return -1;\n  } \n  let top = false;\n  let bottom = false;\n  let left = false;\n  let right = false;\n\n  // top\n  if((emptyPoints[0].x < atari.x) && (emptyPoints[0].y == atari.y))\n    top = true;\n  // bottom\n  if((emptyPoints[0].x > atari.x) && (emptyPoints[0].y == atari.y))\n    bottom = true;\n  // left\n  if((emptyPoints[0].x == atari.x) && (emptyPoints[0].y < atari.y))\n    left = true;\n  // right\n  if((emptyPoints[0].x == atari.x) && (emptyPoints[0].y > atari.y))\n    right = true;\n\n  let top2 = false;\n  let bottom2 = false;\n  let left2 = false;\n  let right2 = false;\n\n  // top\n  if((emptyPoints[1].x < atari.x) && (emptyPoints[1].y == atari.y))\n    top2 = true;\n  // bottom\n  if((emptyPoints[1].x > atari.x) && (emptyPoints[1].y == atari.y))\n    bottom2 = true;\n  // left\n  if((emptyPoints[1].x == atari.x) && (emptyPoints[1].y < atari.y))\n    left2 = true;\n  // right\n  if((emptyPoints[1].x == atari.x) && (emptyPoints[1].y > atari.y))\n    right2 = true;\n\n  // Moving down-left \n  if((bottom && left2) || (bottom2 && left)){\n    config.nx = 1;\n    config.ny = -1\n  }\n\n  // Moving down-right \n  if((bottom && right2) || (bottom2 && right)){\n    config.nx = 1;\n    config.ny = 1;\n  }\n\n  // Moving up-left \n  if((top && left2) || (top2 && left)){\n    config.nx = -1;\n    config.ny = -1;\n  }\n\n  // Moving up-right \n  if((top && right2) || (top2 && right)){\n    config.nx = -1;\n    config.ny = 1;\n  }\n\n  return config;\n}\n\nexport function simulateLadder(board){\n  const copyBoard = board.map(innerArray => [...innerArray]);\n  const [anyLadder, ataris, prey] = detectLadders(copyBoard);\n\n  if(anyLadder.length < 1){\n    return {board: copyBoard, successful: -1};// no ladder sequence found\n  }\n\n  let lib = getLibertiesAt(prey.x, prey.y, copyBoard);\n\n  const preyColour = copyBoard[prey.x][prey.y]\n  const hunterColour = preyColour == BLACK ? WHITE : BLACK;\n  let atari = prey;\n  let firstAtari = {x: ataris[0][0], y: ataris[0][1]}\n\n  const config = ladder_configurations(atari, firstAtari, copyBoard);\n\n  while(lib == 1){\n    const neighbours = neighboringPoints(atari.x, atari.y, copyBoard);\n    atari = neighbours.find(el => copyBoard[el.x][el.y] == EMPTY);\n    copyBoard[atari.x][atari.y] = preyColour;\n    \n    if(getLibertiesAt(atari.x, atari.y, copyBoard) < 3){\n      const neighboringAtari = neighboringPoints(atari.x, atari.y, copyBoard);\n      const hunterPiece = neighboringAtari.find(el => {\n        const newX = ((el.x) + (config.nx) >= 0) && ((el.x) + (config.nx) < window.boardSize) ? (el.x) + (config.nx) : el.x;\n        const newY = ((el.y) + (config.ny) >= 0) && ((el.y) + (config.ny) < window.boardSize) ? (el.y) + (config.ny) : el.y;\n        return (copyBoard[el.x][el.y] == hunterColour) && copyBoard[newX][newY] == EMPTY\n      });\n      if(hunterPiece)\n        copyBoard[(hunterPiece.x) + (config.nx)][(hunterPiece.y) + (config.ny)] = hunterColour;\n    }\n\n    lib = getLibertiesAt(atari.x, atari.y, copyBoard);\n  }\n  if(lib == 0){\n    return {board: copyBoard, successful: 1} // successful\n  } else if(lib > 0){\n    return {board: copyBoard, successful: 0} // unsuccessful\n  } \n  return {board: copyBoard, successful: -2}; // error\n}\n\nexport function countStones(board) {\n  let count = {\n    black: 0,\n    white: 0\n  };\n\n  for (let row of board) {\n    for (let cell of row) {\n      if (cell === '0') {\n        count.black++;\n      } else if (cell === '1') {\n        count.white++;\n      }\n    }\n  }\n\n  return count;\n}\n","import { render } from \"./GoBoard.vue?vue&type=template&id=772742c5&scoped=true\"\nimport script from \"./GoBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GoBoard.vue?vue&type=script&lang=js\"\n\nimport \"./GoBoard.vue?vue&type=style&index=0&id=772742c5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-772742c5\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5ac4a646\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5ac4a646&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import './assets/main.css';\nimport {createBootstrap} from 'bootstrap-vue-next'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue-next/dist/bootstrap-vue-next.css'\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\nconst app = createApp(App)\napp.use(createBootstrap())\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/Go-Game/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgo_game\"] = self[\"webpackChunkgo_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(838); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","startGame","class","style","for","selectedSize","sizes","size","key","value","selectedRule","options","rules","name","buttons","selectedKomi","max","type","step","placeholder","min","selectedMainMin","selectedMainSec","periodNums","selectedPeriodNum","periodLength","selectedPeriodMin","selectedPeriodSec","variant","block","selectBoardSize","components","BCard","BCardBody","BCardFooter","BRow","BCol","BListGroupItem","BListGroup","BDropdown","BDropdownDivider","BDropdownItem","BFormGroup","BInputGroup","BInput","BFormInput","BFormRadioGroup","BButton","BFormSelect","BFormCheckbox","data","text","selected","showAlert","config","this","scoreMethod","komi","mainTime","Date","periodTime","methods","isNaN","alert","mainMin","parseInt","mainSec","setMinutes","setSeconds","periodMin","periodSec","$emit","__exports__","ref","stop","bStop","isBlack","timerFinish","pill","prisonersCounterB","vertical","toggleNumbered","undoMove","disabled","lastColour","estimateScore","ladderEval","passMove","wStop","prisonersCounterW","undoAllowed","centered","ladderCheck","title","ladderModalTitle","estimateModal","gameover","reloadPage","formattedTime","currentPeriod","minutes","seconds","playing","periods","numPeriods","byo_yomi_periods","periodsSizes","mounted","startTimer","Array","fill","window","getMinutes","getSeconds","computed","paddedMinutes","paddedSeconds","props","Boolean","stopTimer","start","timerId","setInterval","sec","$refs","timeLabel","textContent","periodTxt","color","clearInterval","bind","init2DBoard","board","checkBoard","i","boardSize","row","j","push","drawBoard","canvas","ctx","scale","width","height","cellSize","cell","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","rect","drawHoshi","async","redrawBoard","numbered","pieceNumbers","clearRect","EMPTY","pColour","placePiece","error","console","length","col","dead","r","c","numberedPieces","starSize","positions","fillStyle","arc","Math","PI","colour","num","Promise","resolve","reject","pieceImage","Image","pieceColour","src","onload","drawImage","onerror","fontSize","round","font","textAlign","textBaseline","fillText","update2DBoard","x","y","boardStack","pop","print2DBoard","brd","log","forEach","v","getLiberties","deadCells","checklib","count","pX","Number","pY","friendCount","resetCheckBoard","redraw","cloneBoard","map","slice","toggleTimers","BLACK","WHITE","isOnBoard","floodFill","visited","queue","territory","bordersBlack","bordersWhite","tempX","tempY","neighbors","dx","dy","nx","ny","calculateTerritory","blackTerritory","whiteTerritory","black","white","neighboringPoints","directions","partitionTraverse","startX","startY","boundaries","checked","pointsToCheck","startColor","some","p","allNeighbors","neighbor","uniqueBoundaries","el","Region","constructor","intersections","boardReg","Object","freeze","getRegions","regions","regionPoints","_","newReg","isTerritory","point","boundaryPoints","surroundingColors","indexOf","isNeutral","exterior","exteriorPoints","boundaryStones","filter","expandedBoundaryStones","flatMap","Merge","region","mergedRegions","stone","latestRegion","numOfEyes","boundaryLength","borderPoints","cornerPoints","territoryColour","ary","condition","prototype","concat","apply","isFalse","possibleX","possibleY","diagonals","onFirstLine","occupiedNeighbors","opposingOccupiedDiagonals","d","getLiberties2","getLibertiesAt","withoutNeutralPoints","neutralRegions","replacements","startingX","startingY","intersection","manhattanDistance","abs","newBoard","withoutFalseEyes","territoryRegions","falseEyePoints","pointsNeighboringAtari","n","liberties","neutralAtariUpdatedState","newPoints","is_point","fillColor","territoryScoring","withoutNeutralPointsBoard","withClearFalseEyesFilled","territoryRegionsWithoutSeki","merged","eyes","ceil","reduce","a","b","blackRegions","whiteRegions","territoryControlledBlack","territoryControlledWhite","detectLadders","ladder_sequences","lib","prey","ataris","seqs","atari","find","neighbours","blackStones","whiteStones","emptyPoints","pointColour","ladder_configurations","ladder_prey","atariNeighbours","top","bottom","left","right","top2","bottom2","left2","right2","simulateLadder","copyBoard","innerArray","anyLadder","successful","preyColour","hunterColour","firstAtari","neighboringAtari","hunterPiece","newX","newY","countStones","BButtonGroup","Timer","BModal","BContainer","BBadge","pieceNumbersStack","prisonersStack","isNumbered","lastMoveWasPassed","goBoard","getContext","devicePixelRatio","addEventListener","getMousePosition","undo","event","getBoundingClientRect","clientX","clientY","lib2","currentPiece","neighborPiece","unshift","res","prisonerCount","elX","elY","end","endGame","shift","gameDetails","bg","scores","tableBlack","tableWhite","stones","scoring","parseFloat","blackScoreHTML","whiteScoreHTML","html","estimateModalMessage","innerHTML","ladderResult","ladderBoardWidth","boardText","join","ladderModalBody","timerExhausted","winner","modalMessage","location","reload","notSelected","GoBoard","BoardSize","render","app","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","splice","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}